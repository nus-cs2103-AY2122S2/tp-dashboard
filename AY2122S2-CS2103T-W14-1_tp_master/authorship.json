[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"# LibTask","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W14-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W14-1/tp/actions)","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-W14-1/tp/branch/master/graph/badge.svg?token\u003dXNUDJ0U08U)](https://codecov.io/gh/AY2122S2-CS2103T-W14-1/tp)","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"* **LibTask** is a desktop application to allow librarians to keep track of book statuses and contact details of patrons who have borrowed them or requested for them.","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"* Example usages:","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"  * as a tracking tool to track patrons with overdue books.","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"  * as a tracking tool to patrons that are interested in certain books.","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"* It is named `LibTask` as we aim to help librarians to accomplish their daily tasks efficiently.","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"* For the detailed documentation of this project, you may refer to our **[user](https://ay2122s2-cs2103t-w14-1.github.io/tp/UserGuide.html)** and **[developer guide](https://ay2122s2-cs2103t-w14-1.github.io/tp/DeveloperGuide.html)**.","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"yl-ang":14,"bingsen0806":1,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"    archiveName \u003d \u0027libtask.jar\u0027","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"yl-ang"},"content":"run {","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"yl-ang"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"yl-ang":4,"-":71,"bingsen0806":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"### Lim Bing Sen","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"\u003cimg src\u003d\"images/bingsen0806.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"[[github](https://github.com/bingsen0806)]","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"[[portfolio](team/bingsen0806.md)]","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"* Role: Developer, Project Lead","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"* Responsibilities: Book commands","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"### Ang Yong Liang","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"\u003cimg src\u003d\"images/yl-ang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"[[github](http://github.com/yl-ang)]","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"[[portfolio](team/yl-ang.md)]","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"* Role: Developer","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"### Tan Yu Qi","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"\u003cimg src\u003d\"images/yuqitanyq.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"[[github](http://github.com/yuqitanyq)] [[portfolio](team/yuqitanyq.md)]","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"* Responsibilities: Implementation of some book, patron and general commands, plus integration.","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Halpfrog"},"content":"### Sarthak Pradhan","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Halpfrog"},"content":"\u003cimg src\u003d\"images/halpfrog.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Halpfrog"},"content":"[[github](http://github.com/halpfrog)]","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"Halpfrog"},"content":"[[portfolio](team/halpfrog.md)]","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Halpfrog"},"content":"* Responsibilities: General Commands","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"### Aditi Gupta","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"\u003cimg src\u003d\"images/aditi2313.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"[[github](http://github.com/aditi2313)]","lastModifiedDate":"2022-02-25"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"[[portfolio](team/aditi2313.md)]","lastModifiedDate":"2022-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"* Responsibilities: Patron commands","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"yl-ang":5,"yuqitanyq":4,"-":32,"bingsen0806":6,"Halpfrog":5,"aditi2313":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S2-CS2103T-W14-1/tp/blob/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S2-CS2103T-W14-1/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2122S2-CS2103T-W14-1/tp/blob/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `patron delete 1`.","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"yl-ang"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S2-CS2103T-W14-1/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"yl-ang"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PatronListPanel`, `BookListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"yl-ang"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S2-CS2103T-W14-1/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2122S2-CS2103T-W14-1/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"yl-ang"},"content":"* depends on some classes in the `Model` component, as it displays `Patron` and `Book` object residing in the `Model`.","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"yl-ang"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S2-CS2103T-W14-1/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"yl-ang"},"content":"1. When `Logic` is called upon to execute a command, it uses the `LibTaskParser` class to parse the user command.","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"yl-ang"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddPatronCommand` or `AddBookCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"yl-ang"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a Patron or a Book).","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"yl-ang"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"patron delete 1\")` API call.","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"yl-ang"},"content":"![Interactions Inside the Logic Component for the `patron delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"yl-ang"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteBookCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"yl-ang"},"content":"* When called upon to parse a user command, the `LibTaskParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddPatronCommandParser` or `AddBookCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddPatronCommand` or `AddBookCommand`) which the `LibTaskParser` returns back as a `Command` object.","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"yl-ang"},"content":"* All `XYZCommandParser` classes (e.g., `AddPatronCommandParser`, `AddBookCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"yl-ang"},"content":"**API** : [`Model.java`](https://github.com/AY2122S2-CS2103T-W14-1/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"yl-ang"},"content":"* stores the libtask data i.e., all `Patron` objects (which are contained in a `UniquePatronList` object) and `Book` objects (which are contained in a `UniqueBookList` object).","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"yl-ang"},"content":"* stores the currently \u0027selected\u0027 `Patron` and `Book` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPatron\u003e` abd `ObservableList\u003cBook\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"yl-ang"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `LibTask`, which `Patron` references. This allows `LibTask` to only require one `Tag` object per unique tag, instead of each `Patron` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"yl-ang"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S2-CS2103T-W14-1/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"yl-ang"},"content":"* can save both libTask data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"yl-ang"},"content":"* inherits from both `LibTaskStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"### Model","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"The class diagram for the `Model` can be seen above (needs link later) in the Design section. Model contains two main object components, `Book` and `Patron`, with `Book` having a dependency on `Patron`. Such a design was chosen after a few iterations on other designs. The final design in v1.3 is documented here:","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"**v1.3**","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"(Needs to insert a small image here)","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"In v1.3, `Book` has a set of `Patron`s as `requesters`. It also has a `Status` containing an optional `Patron` representing the borrower of the book. Initially, `Patron` and `Book` were designed in a way such that both classes contain references to each other. This design allows fast and direct access of certain information, such as all books borrowed and requested by a patron. However, the initial design results in cyclic reference among classes, which makes it impossible to store patron and book information in json format. For example, the patron json object needs to store a list of books it is referencing, which in turns store a list of patrons it is referencing, which in turn stores more patrons.","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"Furthermore, the initial design results in the problem of cyclic update whenever data is modified. For example, when a patron\u0027s name is changed, the corresponding borrower\u0027s name of all books borrowed by that patron needs to be changed as well. Since `Book` is immutable, new `Book` objects are created to update the information, and as a result, all `Patron` objects referencing those old `Book` objects needs to be updated as well. Since `Patron` is also immutable, the chain of never ending cyclic updates continues on.","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"Due to the downsides of the initial design, a decision was made to have only one of `Book` or `Patron` depending on the other. `Book` was chosen to depend on `Patron` because the UI needs to display information of borrower and requesters together with the book. This design does not require the transversal of the whole `Patron` list to identify the borrower and requesters of the book, since such information is stored in `Book` itself. However, transversal of the whole `Book` list is required to find all books related to a patron, or when updating a patron\u0027s information. Nevertheless, the amortized cost is much lower as such commands are performed less frequently than the amount of UI updates.","lastModifiedDate":"2022-03-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"#### Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"(Todo)","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"yl-ang"},"content":"* **Alternative 1 (current choice):** Saves the entire libTask.","lastModifiedDate":"2022-03-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"yl-ang"},"content":"    * Pros: Will use less memory (e.g. for `patron delete`, just save the patron being deleted).","lastModifiedDate":"2022-03-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"yl-ang"},"content":"* a librarian who wants to manage book loans and requests by patrons","lastModifiedDate":"2022-03-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"yl-ang"},"content":"**Value proposition**: simplifying how librarians manage the status of library book loans and requests by patrons","lastModifiedDate":"2022-03-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"yl-ang"},"content":"| Priority | As a …​                                                   | I want to …​                                                                  | So that …​                                                                                                                            |","lastModifiedDate":"2022-03-07"},{"lineNumber":226,"author":{"gitId":"yuqitanyq"},"content":"|----------|-----------------------------------------------------------|-------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-02-24"},{"lineNumber":227,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian                                                 | add a patron (student or staff) to my database                                | I can keep track of books borrowed or requested by the patron                                                                         |","lastModifiedDate":"2022-02-24"},{"lineNumber":228,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian                                                 | delete a patron from my database                                              | I do not get overwhelmed by data of graduated students or retired staff.                                                              |","lastModifiedDate":"2022-02-24"},{"lineNumber":229,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Admin in charge of updating student records               | update information about patrons in my database                               | I have their latest contact when I need to contact them                                                                               |","lastModifiedDate":"2022-02-24"},{"lineNumber":230,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Efficient librarian                                       | filter patrons in my database based on books                                  | I can know which patrons are requesting or borrowing the book                                                                         |","lastModifiedDate":"2022-02-24"},{"lineNumber":231,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Efficient librarian                                       | find patrons based on categories                                              | I do not get overwhelmed by long lists of patrons in uncategorized search results                                                     |","lastModifiedDate":"2022-02-24"},{"lineNumber":232,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Admin                                                     | view information of a specific patron                                         | I can see the books they borrowed or requested for                                                                                    |","lastModifiedDate":"2022-02-24"},{"lineNumber":233,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Efficient librarian                                       | view patrons who have not returned overdue books                              | I can automate the process of sending reminders instead of sending reminders individually                                             |","lastModifiedDate":"2022-02-24"},{"lineNumber":234,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian                                                 | add a book to my database                                                     | I can keep track of details of the book                                                                                               |","lastModifiedDate":"2022-02-24"},{"lineNumber":235,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Easily overwhelmed librarian                              | delete a book from my database                                                | I do not get overwhelmed by information about books that no longer exist                                                              |","lastModifiedDate":"2022-02-24"},{"lineNumber":236,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Careless librarian                                        | edit information about a book                                                 | I can correct typos in the details of the books when I first added them to the database                                               |","lastModifiedDate":"2022-02-24"},{"lineNumber":237,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Book recommender                                          | classify books into categories                                                | I can more easily provide book recommendations                                                                                        |","lastModifiedDate":"2022-02-24"},{"lineNumber":238,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Request handler                                           | filter books based on authors and keywords                                    | I can quickly navigate the book when a patron is requesting it                                                                        |","lastModifiedDate":"2022-02-24"},{"lineNumber":239,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Forward looking librarian                                 | filter books based on their borrowing date and expected return date           | I can have an estimate of my incoming workload for processing returned books                                                          |","lastModifiedDate":"2022-02-24"},{"lineNumber":240,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian                                                 | store details about a book loan by a patron                                   | I can perform tasks such as sorting, searching or categorizing books and patrons later                                                |","lastModifiedDate":"2022-02-24"},{"lineNumber":241,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian                                                 | update return and order status of books                                       | I can keep track of a book’s availability                                                                                             |","lastModifiedDate":"2022-02-24"},{"lineNumber":242,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Request handler                                           | take note of requests from students to be notified when a book is returned    | I can easily notify the student when the book under request is returned                                                               |","lastModifiedDate":"2022-02-24"},{"lineNumber":243,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Request handler                                           | take note of book order requests from professors                              | I can easily inform the professor when the book has arrived                                                                           |","lastModifiedDate":"2022-02-24"},{"lineNumber":244,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian                                                 | list all books in the database                                                | I can see all the books with one click and in one sitting                                                                             |","lastModifiedDate":"2022-03-24"},{"lineNumber":245,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian overwhelmed with lots of book requests          | delete book requests I have                                                   | records of book requests are minimized by not keeping track of cancelled and fulfilled requests                                       |","lastModifiedDate":"2022-02-24"},{"lineNumber":246,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | New user                                                  | be able to access help                                                        | I can learn how to use the application                                                                                                |","lastModifiedDate":"2022-02-24"},{"lineNumber":247,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | User who has done learning how to use the application     | remove all the current entries and sample data                                | I can start a fresh and input my own data                                                                                             |","lastModifiedDate":"2022-02-24"},{"lineNumber":248,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | User                                                      | exit the application                                                          | I can leave the application                                                                                                           |","lastModifiedDate":"2022-02-24"},{"lineNumber":249,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | User with strong personal preference                      | change the background theme of the dashboard                                  | it looks more visually appealing to me and motivates me to use the application                                                        |","lastModifiedDate":"2022-02-24"},{"lineNumber":250,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | User                                                      | be able to adjust the window size                                             | I can see the data more clearly.                                                                                                      |","lastModifiedDate":"2022-02-24"},{"lineNumber":251,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Efficient user who is familiar with CLI tools             | refer to recent commands using up and down arrows                             | I can save time from retyping past commands                                                                                           |","lastModifiedDate":"2022-02-24"},{"lineNumber":252,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | User with poor eyesight and strong personal preference    | edit font size and style                                                      | I can read contents on the application better                                                                                         |","lastModifiedDate":"2022-02-24"},{"lineNumber":253,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | User who likes to stay on top of tasks                    | have a short note taking session to take down notes                           | I do not need to remember small details.                                                                                              |","lastModifiedDate":"2022-02-24"},{"lineNumber":254,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Admin in charge of sending emails                         | be able to export a group of emails such as overdue emails based on templates | I can craft personalized emails without the need to draft them individually                                                           |","lastModifiedDate":"2022-02-24"},{"lineNumber":255,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Efficient librarian                                       | continue where I left off from the previous days                              | I can continue to deliver to my borrowers the books they wanted                                                                       |","lastModifiedDate":"2022-02-24"},{"lineNumber":256,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian in charge of placing book orders                | view statistics for different book categories                                 | I can make important decisions for the library such as getting more copies of a certain book/getting more books of a certain category |","lastModifiedDate":"2022-02-24"},{"lineNumber":257,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Book recommender who used the application for a long time | recommend books using stored statistics of most frequently requested books    | I can make better recommendations for students that come to us                                                                        |","lastModifiedDate":"2022-02-24"},{"lineNumber":258,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Impatient user                                            | be able to experience reasonable response time while using the application    | I can do my job more efficiently                                                                                                      |","lastModifiedDate":"2022-02-24"},{"lineNumber":259,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Easily overwhelmed request handler                        | be able to prioritize my book requests                                        | I can effectively handle requests                                                                                                     |","lastModifiedDate":"2022-02-24"},{"lineNumber":260,"author":{"gitId":"yl-ang"},"content":"| `***`    | Librarian                                                 | be able to view patron and book details through a GUI                         |                                                                                                                                       |","lastModifiedDate":"2022-03-09"},{"lineNumber":261,"author":{"gitId":"yl-ang"},"content":"| `***`    | Librarian                                                 | have visual feedback of the commands I executed                               | I will know if my commands have been successfully executed                                                                            |","lastModifiedDate":"2022-03-09"},{"lineNumber":262,"author":{"gitId":"yl-ang"},"content":"| `***`    | Librarian                                                 | find all the books related to a patron                                        | I can see all books related to a patron at one glance                                                                                 |","lastModifiedDate":"2022-03-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"Halpfrog"},"content":"(For all use cases below, the **System** is the `LibTask` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-03-02"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"Halpfrog"},"content":"### UC01: Adding a patron to LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"Halpfrog"},"content":"1. User requests to add a patron and provides the name and details of the patron.","lastModifiedDate":"2022-03-02"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":276,"author":{"gitId":"Halpfrog"},"content":"2. LibTask adds the patron.","lastModifiedDate":"2022-03-02"},{"lineNumber":277,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":278,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":280,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":282,"author":{"gitId":"Halpfrog"},"content":"* 1a. Compulsory fields are not provided.","lastModifiedDate":"2022-03-02"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":284,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":286,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":288,"author":{"gitId":"Halpfrog"},"content":"* 1b. The patron details are invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":290,"author":{"gitId":"Halpfrog"},"content":"    * 1b1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":292,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":294,"author":{"gitId":"Halpfrog"},"content":"* 1c. The given name and details are duplicated.","lastModifiedDate":"2022-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":296,"author":{"gitId":"Halpfrog"},"content":"    * 1c1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":298,"author":{"gitId":"Halpfrog"},"content":"      Use case resume from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":299,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":300,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":301,"author":{"gitId":"Halpfrog"},"content":"### UC02: List patron\u0027s on LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":302,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":303,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":304,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":305,"author":{"gitId":"Halpfrog"},"content":"1. User requests to list all patrons","lastModifiedDate":"2022-03-02"},{"lineNumber":306,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":307,"author":{"gitId":"Halpfrog"},"content":"2. LibTask shows the list of all the patrons.","lastModifiedDate":"2022-03-02"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"Halpfrog"},"content":"* 2a. LibTask has no stored patrons.","lastModifiedDate":"2022-03-02"},{"lineNumber":314,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":315,"author":{"gitId":"Halpfrog"},"content":"    * 2a1. LibTask shows an empty list.","lastModifiedDate":"2022-03-02"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"Halpfrog"},"content":"### UC03: Editing a patron on LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":322,"author":{"gitId":"Halpfrog"},"content":"1. User list all patrons [UC02](#uc02-list-patrons-on-libtask)","lastModifiedDate":"2022-03-02"},{"lineNumber":323,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":324,"author":{"gitId":"Halpfrog"},"content":"2. User requests to edit a patron and provide the index and the necessary details to be edited.","lastModifiedDate":"2022-03-02"},{"lineNumber":325,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":326,"author":{"gitId":"Halpfrog"},"content":"3. LibTask edits the patron.","lastModifiedDate":"2022-03-02"},{"lineNumber":327,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":328,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":329,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":330,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":331,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":332,"author":{"gitId":"Halpfrog"},"content":"* 1a. The index is not provided or is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":333,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":334,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":335,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":336,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":337,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":338,"author":{"gitId":"Halpfrog"},"content":"* 1b. The details are not provided or are invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":339,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":340,"author":{"gitId":"Halpfrog"},"content":"    * 1b1.  LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":341,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":342,"author":{"gitId":"Halpfrog"},"content":"      Use case resume from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":343,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":344,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":345,"author":{"gitId":"Halpfrog"},"content":"### UC04: Find a patron on LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":346,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":347,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":348,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":349,"author":{"gitId":"Halpfrog"},"content":"1. User request to find patron(s) and provide a number of keywords.","lastModifiedDate":"2022-03-02"},{"lineNumber":350,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":351,"author":{"gitId":"Halpfrog"},"content":"2. LibTask shows the list of patrons that match the search.","lastModifiedDate":"2022-03-02"},{"lineNumber":352,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":353,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":354,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":355,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":356,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":357,"author":{"gitId":"Halpfrog"},"content":"* 1a. Keywords not provided or are invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":358,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":359,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":360,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":361,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":362,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":363,"author":{"gitId":"Halpfrog"},"content":"* 2a.  No patrons fulfil the search criteria.","lastModifiedDate":"2022-03-02"},{"lineNumber":364,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":365,"author":{"gitId":"Halpfrog"},"content":"    * 2a1. LibTask shows an empty list.","lastModifiedDate":"2022-03-02"},{"lineNumber":366,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":367,"author":{"gitId":"Halpfrog"},"content":"      Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":368,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":369,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":370,"author":{"gitId":"Halpfrog"},"content":"### UC05: Delete a patron from LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":371,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":372,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":373,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":374,"author":{"gitId":"Halpfrog"},"content":"1. User list all patrons [UC02](#uc02-list-patrons-on-libtask).","lastModifiedDate":"2022-03-02"},{"lineNumber":375,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":376,"author":{"gitId":"Halpfrog"},"content":"2. User requests to delete a patron and provide the index.","lastModifiedDate":"2022-03-02"},{"lineNumber":377,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":378,"author":{"gitId":"Halpfrog"},"content":"3. LibTask deletes the patron.","lastModifiedDate":"2022-03-02"},{"lineNumber":379,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":380,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":381,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":382,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":383,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":384,"author":{"gitId":"Halpfrog"},"content":"* 1a. The index is not provided or is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":385,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":386,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":387,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":388,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":389,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":390,"author":{"gitId":"Halpfrog"},"content":"### UC06: Add book to LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":391,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":392,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":393,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":394,"author":{"gitId":"Halpfrog"},"content":"1. User requests to add a book and provides the name and details of the book","lastModifiedDate":"2022-03-02"},{"lineNumber":395,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":396,"author":{"gitId":"Halpfrog"},"content":"2. LibTask adds the module.","lastModifiedDate":"2022-03-02"},{"lineNumber":397,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":398,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":399,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":400,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":401,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":402,"author":{"gitId":"Halpfrog"},"content":"* 1a. Compulsory fields are not provided.","lastModifiedDate":"2022-03-02"},{"lineNumber":403,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":404,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":405,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":406,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":407,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":408,"author":{"gitId":"Halpfrog"},"content":"* 1b. The book details are invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":409,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":410,"author":{"gitId":"Halpfrog"},"content":"    * 1b1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":411,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":412,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":413,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":414,"author":{"gitId":"Halpfrog"},"content":"### UC07: List Books on LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":415,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":416,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":417,"author":{"gitId":"Halpfrog"},"content":"1. User requests to list all books.","lastModifiedDate":"2022-03-02"},{"lineNumber":418,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":419,"author":{"gitId":"Halpfrog"},"content":"2. LibTask shows the list of all the books.","lastModifiedDate":"2022-03-02"},{"lineNumber":420,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":421,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":422,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":423,"author":{"gitId":"yuqitanyq"},"content":"**Extensions**","lastModifiedDate":"2022-03-24"},{"lineNumber":424,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":425,"author":{"gitId":"yuqitanyq"},"content":"* 2a. LibTask has no stored books.","lastModifiedDate":"2022-03-24"},{"lineNumber":426,"author":{"gitId":"yuqitanyq"},"content":"    * 2a1. LibTask shows an empty list.","lastModifiedDate":"2022-03-24"},{"lineNumber":427,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":428,"author":{"gitId":"yuqitanyq"},"content":"      Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":429,"author":{"gitId":"yuqitanyq"},"content":"    ","lastModifiedDate":"2022-03-24"},{"lineNumber":430,"author":{"gitId":"Halpfrog"},"content":"### UC08: Find books on LibTask","lastModifiedDate":"2022-03-24"},{"lineNumber":431,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":432,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-24"},{"lineNumber":433,"author":{"gitId":"Halpfrog"},"content":"1. User requests to find books which matches a query. ","lastModifiedDate":"2022-03-24"},{"lineNumber":434,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":435,"author":{"gitId":"Halpfrog"},"content":"2. LibTask shows the books that match the query","lastModifiedDate":"2022-03-24"},{"lineNumber":436,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":437,"author":{"gitId":"Halpfrog"},"content":"    Use case ends","lastModifiedDate":"2022-03-24"},{"lineNumber":438,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":439,"author":{"gitId":"Halpfrog"},"content":"**Extension**","lastModifiedDate":"2022-03-24"},{"lineNumber":440,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":441,"author":{"gitId":"Halpfrog"},"content":"* 1a The given query is invalid","lastModifiedDate":"2022-03-24"},{"lineNumber":442,"author":{"gitId":"Halpfrog"},"content":"  * 1a1 LibTask shows an error message","lastModifiedDate":"2022-03-24"},{"lineNumber":443,"author":{"gitId":"Halpfrog"},"content":"    Use case resumes from step 1","lastModifiedDate":"2022-03-24"},{"lineNumber":444,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":445,"author":{"gitId":"Halpfrog"},"content":"### UC09: Edit a book on LibTask","lastModifiedDate":"2022-03-24"},{"lineNumber":446,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":447,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":448,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":449,"author":{"gitId":"Halpfrog"},"content":"1. User requests to edit a book and provides the index of the book and the new details.","lastModifiedDate":"2022-03-02"},{"lineNumber":450,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":451,"author":{"gitId":"Halpfrog"},"content":"2. LibTask edits the book.","lastModifiedDate":"2022-03-02"},{"lineNumber":452,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":453,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":454,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":455,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":456,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":457,"author":{"gitId":"Halpfrog"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":458,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":459,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":460,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":461,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":462,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":463,"author":{"gitId":"Halpfrog"},"content":"* 1b. The new details are invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":464,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":465,"author":{"gitId":"Halpfrog"},"content":"    * 1b1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":466,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":467,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":468,"author":{"gitId":"Halpfrog"},"content":"  ","lastModifiedDate":"2022-03-02"},{"lineNumber":469,"author":{"gitId":"yuqitanyq"},"content":"* 1c. The index is valid but no new details are entered","lastModifiedDate":"2022-03-24"},{"lineNumber":470,"author":{"gitId":"yuqitanyq"},"content":"    ","lastModifiedDate":"2022-03-24"},{"lineNumber":471,"author":{"gitId":"yuqitanyq"},"content":"    * 1c1. LibTask shows an error message saying that at least ISBN, author or category must be provided.","lastModifiedDate":"2022-03-24"},{"lineNumber":472,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":473,"author":{"gitId":"yuqitanyq"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-24"},{"lineNumber":474,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":475,"author":{"gitId":"Halpfrog"},"content":"### UC10: Delete Book from LibTask","lastModifiedDate":"2022-03-24"},{"lineNumber":476,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":477,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":478,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":479,"author":{"gitId":"Halpfrog"},"content":"1. User requests to delete a book and provides the index.","lastModifiedDate":"2022-03-02"},{"lineNumber":480,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":481,"author":{"gitId":"Halpfrog"},"content":"2. LibTask deletes the book.","lastModifiedDate":"2022-03-02"},{"lineNumber":482,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":483,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":484,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":485,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":486,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":487,"author":{"gitId":"Halpfrog"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":488,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":489,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":490,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":491,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":492,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":493,"author":{"gitId":"Halpfrog"},"content":"### UC11: Borrow Book","lastModifiedDate":"2022-03-24"},{"lineNumber":494,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":495,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":496,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":497,"author":{"gitId":"Halpfrog"},"content":"1. User lists all patrons [UC02](#uc02-list-patrons-on-libtask)","lastModifiedDate":"2022-03-02"},{"lineNumber":498,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":499,"author":{"gitId":"Halpfrog"},"content":"2. User lists all books [UC07](#uc07-list-books-on-libtask)","lastModifiedDate":"2022-03-02"},{"lineNumber":500,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":501,"author":{"gitId":"Halpfrog"},"content":"3. User requests to establish a borrow relationship and provides index of the patron and index of the book in lists, as well as return date of the book.","lastModifiedDate":"2022-03-02"},{"lineNumber":502,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":503,"author":{"gitId":"Halpfrog"},"content":"4. LibTask establishes a borrow relationship between the patron and the book.","lastModifiedDate":"2022-03-02"},{"lineNumber":504,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":505,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":506,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":507,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":508,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":509,"author":{"gitId":"Halpfrog"},"content":"* 3a. The given index of patron or book is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":510,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":511,"author":{"gitId":"Halpfrog"},"content":"    * 3a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":512,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":513,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2022-03-02"},{"lineNumber":514,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":515,"author":{"gitId":"Halpfrog"},"content":"* 3b. The return date of the book is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":516,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":517,"author":{"gitId":"Halpfrog"},"content":"    * 3a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":518,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":519,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2022-03-02"},{"lineNumber":520,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":521,"author":{"gitId":"Halpfrog"},"content":"* 3b. The book is already borrowed.","lastModifiedDate":"2022-03-02"},{"lineNumber":522,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":523,"author":{"gitId":"Halpfrog"},"content":"    * 3a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":524,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":525,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2022-03-02"},{"lineNumber":526,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":527,"author":{"gitId":"Halpfrog"},"content":"### UC12: Return Book on LibTask","lastModifiedDate":"2022-03-24"},{"lineNumber":528,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":529,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":530,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":531,"author":{"gitId":"Halpfrog"},"content":"1. User finds a patron [UC04](#uc04-find-a-patron-on-libtask)","lastModifiedDate":"2022-03-02"},{"lineNumber":532,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":533,"author":{"gitId":"Halpfrog"},"content":"2. User requests to end a borrow relationship and provides index of the patron and index of the book in lists.","lastModifiedDate":"2022-03-02"},{"lineNumber":534,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":535,"author":{"gitId":"Halpfrog"},"content":"3. LibTask removes the borrow relationship between the patron and the book.","lastModifiedDate":"2022-03-02"},{"lineNumber":536,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":537,"author":{"gitId":"Halpfrog"},"content":"Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":538,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":539,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":540,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":541,"author":{"gitId":"Halpfrog"},"content":"* 2a. The given index of patron or book is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":542,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":543,"author":{"gitId":"Halpfrog"},"content":"    * 2a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":544,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":545,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-03-02"},{"lineNumber":546,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":547,"author":{"gitId":"Halpfrog"},"content":"* 2b. The book is not borrowed by the patron.","lastModifiedDate":"2022-03-02"},{"lineNumber":548,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":549,"author":{"gitId":"Halpfrog"},"content":"    * 2a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":550,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":551,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-03-02"},{"lineNumber":552,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":553,"author":{"gitId":"Halpfrog"},"content":"### UC13: Asking for Help on LibTask","lastModifiedDate":"2022-03-24"},{"lineNumber":554,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":555,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":556,"author":{"gitId":"Halpfrog"},"content":"1. User requests to list all commands","lastModifiedDate":"2022-03-02"},{"lineNumber":557,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":558,"author":{"gitId":"Halpfrog"},"content":"2. LibTask shows the list of all the commands","lastModifiedDate":"2022-03-02"},{"lineNumber":559,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":560,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":561,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":562,"author":{"gitId":"Halpfrog"},"content":"### UC14: Exiting LibTask","lastModifiedDate":"2022-03-24"},{"lineNumber":563,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":564,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":565,"author":{"gitId":"Halpfrog"},"content":"1. User requests to exit LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":566,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":567,"author":{"gitId":"Halpfrog"},"content":"2. LibTask closes.","lastModifiedDate":"2022-03-02"},{"lineNumber":568,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":569,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":570,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":571,"author":{"gitId":"Halpfrog"},"content":"### UC15: Clear database of all Patron\u0027s and Book\u0027s","lastModifiedDate":"2022-03-24"},{"lineNumber":572,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":573,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":574,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":575,"author":{"gitId":"Halpfrog"},"content":"1. User requests to clear database","lastModifiedDate":"2022-03-02"},{"lineNumber":576,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":577,"author":{"gitId":"Halpfrog"},"content":"2. LibTask clears the database.","lastModifiedDate":"2022-03-02"},{"lineNumber":578,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":579,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":580,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":581,"author":{"gitId":"Halpfrog"},"content":"Extension","lastModifiedDate":"2022-03-02"},{"lineNumber":582,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":583,"author":{"gitId":"Halpfrog"},"content":"* 1a. The database is already empty","lastModifiedDate":"2022-03-02"},{"lineNumber":584,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":585,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message","lastModifiedDate":"2022-03-02"},{"lineNumber":586,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":587,"author":{"gitId":"Halpfrog"},"content":"      Use case ends","lastModifiedDate":"2022-03-02"},{"lineNumber":588,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":589,"author":{"gitId":"Halpfrog"},"content":"### UC16: Show previously run commands","lastModifiedDate":"2022-03-24"},{"lineNumber":590,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":591,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":592,"author":{"gitId":"Halpfrog"},"content":"1. User requests to see previous command","lastModifiedDate":"2022-03-02"},{"lineNumber":593,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":594,"author":{"gitId":"Halpfrog"},"content":"2. LibTask shows the last command used","lastModifiedDate":"2022-03-02"},{"lineNumber":595,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":596,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":597,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":598,"author":{"gitId":"Halpfrog"},"content":"Extension","lastModifiedDate":"2022-03-02"},{"lineNumber":599,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":600,"author":{"gitId":"Halpfrog"},"content":"* 1a. No previous command","lastModifiedDate":"2022-03-02"},{"lineNumber":601,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":602,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an empty field","lastModifiedDate":"2022-03-02"},{"lineNumber":603,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":604,"author":{"gitId":"Halpfrog"},"content":"      Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"Halpfrog"},"content":"### UC17: List books related to a patron","lastModifiedDate":"2022-03-24"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"yl-ang"},"content":"**MSS**","lastModifiedDate":"2022-03-23"},{"lineNumber":609,"author":{"gitId":"yl-ang"},"content":"1. User lists all patrons [UC02](#uc02-list-patrons-on-libtask)","lastModifiedDate":"2022-03-23"},{"lineNumber":610,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":611,"author":{"gitId":"yl-ang"},"content":"2. User requests to view all books related to a patron and provides the index of the patron in the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":612,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":613,"author":{"gitId":"yl-ang"},"content":"3. LibTask shows the list of all the books related to the patron.","lastModifiedDate":"2022-03-23"},{"lineNumber":614,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":615,"author":{"gitId":"yl-ang"},"content":"   Use case ends.","lastModifiedDate":"2022-03-23"},{"lineNumber":616,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":617,"author":{"gitId":"yl-ang"},"content":"Extension","lastModifiedDate":"2022-03-23"},{"lineNumber":618,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":619,"author":{"gitId":"yl-ang"},"content":"* 2a. The given index of patron is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":620,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":621,"author":{"gitId":"yl-ang"},"content":"    * 2a1. LibTask shows an error message.","lastModifiedDate":"2022-03-23"},{"lineNumber":622,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":623,"author":{"gitId":"yl-ang"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-03-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"Halpfrog"},"content":"### UC18: List patrons with overdue books","lastModifiedDate":"2022-03-24"},{"lineNumber":626,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":627,"author":{"gitId":"aditi2313"},"content":"**MSS**","lastModifiedDate":"2022-03-24"},{"lineNumber":628,"author":{"gitId":"aditi2313"},"content":"1. User lists all patrons [UC02](#uc02-list-patrons-on-libtask)","lastModifiedDate":"2022-03-24"},{"lineNumber":629,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":630,"author":{"gitId":"aditi2313"},"content":"2. User requests to view all patrons with overdue books.","lastModifiedDate":"2022-03-24"},{"lineNumber":631,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":632,"author":{"gitId":"aditi2313"},"content":"3. LibTask shows the list of all patrons with overdue books.","lastModifiedDate":"2022-03-24"},{"lineNumber":633,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":634,"author":{"gitId":"aditi2313"},"content":"   Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":635,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":636,"author":{"gitId":"aditi2313"},"content":"Extension","lastModifiedDate":"2022-03-24"},{"lineNumber":637,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":638,"author":{"gitId":"aditi2313"},"content":"* 2a. LibTask has no users with overdue books.","lastModifiedDate":"2022-03-24"},{"lineNumber":639,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":640,"author":{"gitId":"aditi2313"},"content":"    * 2a1. LibTask shows an empty patron list.","lastModifiedDate":"2022-03-24"},{"lineNumber":641,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":642,"author":{"gitId":"aditi2313"},"content":"      Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":643,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":644,"author":{"gitId":"Halpfrog"},"content":"### UC19: Request Book","lastModifiedDate":"2022-03-24"},{"lineNumber":645,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":646,"author":{"gitId":"aditi2313"},"content":"**MSS**","lastModifiedDate":"2022-03-24"},{"lineNumber":647,"author":{"gitId":"aditi2313"},"content":"1. User lists all patrons [UC02](#uc02-list-patrons-on-libtask)","lastModifiedDate":"2022-03-24"},{"lineNumber":648,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":649,"author":{"gitId":"aditi2313"},"content":"2. User lists all books [UC07](#uc07-list-books-on-libtask)","lastModifiedDate":"2022-03-24"},{"lineNumber":650,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":651,"author":{"gitId":"aditi2313"},"content":"3. User requests to establish a request relationship and provides index of the patron and index of the book in lists.","lastModifiedDate":"2022-03-24"},{"lineNumber":652,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":653,"author":{"gitId":"aditi2313"},"content":"4. LibTask establishes a request relationship between the patron and the book.","lastModifiedDate":"2022-03-24"},{"lineNumber":654,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":655,"author":{"gitId":"aditi2313"},"content":"   Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":656,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":657,"author":{"gitId":"aditi2313"},"content":"**Extensions**","lastModifiedDate":"2022-03-24"},{"lineNumber":658,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":659,"author":{"gitId":"aditi2313"},"content":"* 3a. The given index of patron or book is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":660,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":661,"author":{"gitId":"aditi2313"},"content":"    * 3a1. LibTask shows an error message.","lastModifiedDate":"2022-03-24"},{"lineNumber":662,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":663,"author":{"gitId":"aditi2313"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2022-03-24"},{"lineNumber":664,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":665,"author":{"gitId":"aditi2313"},"content":"* 3b. Patron has already requested for the book.","lastModifiedDate":"2022-03-24"},{"lineNumber":666,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":667,"author":{"gitId":"aditi2313"},"content":"    * 3a1. LibTask shows an error message.","lastModifiedDate":"2022-03-24"},{"lineNumber":668,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":669,"author":{"gitId":"aditi2313"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2022-03-24"},{"lineNumber":670,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":671,"author":{"gitId":"aditi2313"},"content":"* 3b. The book is already borrowed by the same user.","lastModifiedDate":"2022-03-24"},{"lineNumber":672,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":673,"author":{"gitId":"aditi2313"},"content":"    * 3a1. LibTask shows an error message.","lastModifiedDate":"2022-03-24"},{"lineNumber":674,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":675,"author":{"gitId":"aditi2313"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2022-03-24"},{"lineNumber":676,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":677,"author":{"gitId":"aditi2313"},"content":"* 3b. The book is available for borrowing.","lastModifiedDate":"2022-03-24"},{"lineNumber":678,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":679,"author":{"gitId":"aditi2313"},"content":"    * 3a1. LibTask shows an error message.","lastModifiedDate":"2022-03-24"},{"lineNumber":680,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":681,"author":{"gitId":"aditi2313"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2022-03-24"},{"lineNumber":682,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":683,"author":{"gitId":"aditi2313"},"content":"* 3b. The book already has 3 requesters.","lastModifiedDate":"2022-03-24"},{"lineNumber":684,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":685,"author":{"gitId":"aditi2313"},"content":"    * 3a1. LibTask shows an error message.","lastModifiedDate":"2022-03-24"},{"lineNumber":686,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":687,"author":{"gitId":"aditi2313"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2022-03-24"},{"lineNumber":688,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":689,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"yl-ang"},"content":"2. Should be able to hold up to 1000 patrons and books without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-03-14"},{"lineNumber":693,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"Halpfrog"},"content":"4. A novice with no coding background should be able to use the Lib Task.","lastModifiedDate":"2022-03-02"},{"lineNumber":695,"author":{"gitId":"Halpfrog"},"content":"5. The system should respond in 1 second.","lastModifiedDate":"2022-03-02"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"Halpfrog"},"content":"* **Mainstream OS**: Windows, Linux, Unix, macOS","lastModifiedDate":"2022-03-02"},{"lineNumber":700,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"Halpfrog"},"content":"* **Patron**: A user of the library","lastModifiedDate":"2022-03-02"},{"lineNumber":702,"author":{"gitId":"Halpfrog"},"content":"* **ISBN**: An International Standard Book Number 13 digits in length.","lastModifiedDate":"2022-03-02"},{"lineNumber":703,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"yl-ang"},"content":"### Deleting a patron","lastModifiedDate":"2022-03-14"},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"yl-ang"},"content":"1. Deleting a patron while all patrons are being shown","lastModifiedDate":"2022-03-14"},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"yl-ang"},"content":"    1. Prerequisites: List all patrons using the `patron list` command. Multiple patrons in the list.","lastModifiedDate":"2022-03-14"},{"lineNumber":738,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"yl-ang"},"content":"    1. Test case: `patron delete 1`\u003cbr\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":740,"author":{"gitId":"yl-ang"},"content":"       Expected: First patron is deleted from the list. Details of the deleted patron shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2022-03-14"},{"lineNumber":741,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":742,"author":{"gitId":"yl-ang"},"content":"    1. Test case: `patron delete 0`\u003cbr\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":743,"author":{"gitId":"yl-ang"},"content":"       Expected: No patron is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-03-14"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"yl-ang"},"content":"    1. Other incorrect delete commands to try: `patron delete`, `patron delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":746,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"yl-ang"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2022-03-14"},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":750,"author":{"gitId":"yl-ang"},"content":"### Deleting a book","lastModifiedDate":"2022-03-14"},{"lineNumber":751,"author":{"gitId":"yl-ang"},"content":"1. Deleting a book while all books are being shown","lastModifiedDate":"2022-03-14"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":753,"author":{"gitId":"yl-ang"},"content":"   1. Prerequisites: List all books using the `book list` command. Multiple books in the list.","lastModifiedDate":"2022-03-14"},{"lineNumber":754,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":755,"author":{"gitId":"yl-ang"},"content":"   1. Test case: `book delete 1`\u003cbr\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":756,"author":{"gitId":"yl-ang"},"content":"      Expected: First book is deleted from the list. Details of the deleted book shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2022-03-14"},{"lineNumber":757,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":758,"author":{"gitId":"yl-ang"},"content":"   1. Test case: `book delete 0`\u003cbr\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":759,"author":{"gitId":"yl-ang"},"content":"      Expected: No book is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-03-14"},{"lineNumber":760,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":761,"author":{"gitId":"yl-ang"},"content":"   1. Other incorrect delete commands to try: `book delete`, `book delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":762,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2022-03-14"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":764,"author":{"gitId":"yl-ang"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2022-03-14"},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yl-ang":69,"yuqitanyq":47,"-":277,"bingsen0806":9,"Halpfrog":308,"aditi2313":62}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"LibTask is a **desktop application for librarians to manage book loans and requests by patrons, optimized for use via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you can type fast, LibTask can get your book tracking tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"## Introduction","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"As a school librarian of a large library, you may already have your own desktop library software. However, existing library softwares are GUI-based and slow to work with. If you prefer to work with CLI commands efficiently while still having the benefits of aesthetic displays, then LibTask is designed just for you! LibTask provides you with a well packaged system of commands for managing book loans and book requests by your patrons. Using LibTask, you can quickly process borrowing and returning books, and view different groups of patrons and books to perform tasks such as notifying patrons with overdue books. The system also maintains two independent lists of books and patrons, allowing you to perform queries more efficiently.","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"1. Download the latest `libtask.jar` from [here](https://github.com/AY2122S2-CS2103T-W14-1/tp/releases).","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your LibTask.","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds.\u003cbr\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"1. Type a command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open a help window.\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"   Here are some sample commands you can try:","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"   * **`patron list`** : Lists all patrons in LibTask\u0027s patron list.","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"   * **`patron add n/Alice s/S01823283S p/90123212 e/profA@u.nus.edu `** : Adds a patron named `Alice` into LibTask\u0027s patron list.","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"   * **`patron delete 3`** : Deletes the 3rd patron shown in the displayed patron list.","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"   * **`book add n/Harry Potter i/12398-12398-239 a/J.K.Rowling t/Thriller t/Magic`**: Adds a book titled `Harry Potter`into LibTask\u0027s book list.","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"   * **`book list`** : Lists all books in LibTask\u0027s book list.","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"   * **`book delete 1`** : Deletes the 1st book shown in the displayed book list.","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"   * **`exit`** : Exits LibTask.","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"## Important Notes","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"  e.g. in `patron delete INDEX`, `INDEX` is a parameter which the user can enter and can be used as `patron delete 1`.","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"  e.g. `patron add n/NAME s/ID p/PHONE e/EMAIL [t/TAG]…​ ` can be used as `patron add n/John s/A0123456A p/93231222 e/e03482@u.nus.edu t/student` or as `patron add n/John s/A0123456A p/93231222 e/e03482@u.nus.edu`.","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend` or `t/friend t/family` etc.","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `patron list`, `book list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"  e.g. `help 123` will be interpreted as `help`.","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"aditi2313"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"aditi2313"},"content":"## Features","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"aditi2313"},"content":"### A. General Features","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"aditi2313"},"content":"Opens a help window explaining how to access LibTask\u0027s user guide.","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"aditi2313"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"aditi2313"},"content":"Clears all patrons and books from LibTask\u0027s patron and book lists.","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"aditi2313"},"content":"Format: `clear`","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"aditi2313"},"content":"### Exiting LibTask : `exit`","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"aditi2313"},"content":"Exits the program.","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"aditi2313"},"content":"Format: `exit`","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"aditi2313"},"content":"### Retrieving previous command: `u`","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"aditi2313"},"content":"Retrieves the previous command entered by the user back to the command box.","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"aditi2313"},"content":"Format: `u`","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"aditi2313"},"content":"* Loads your previous successfully entered commands back to the command box so you can view and rerun it.","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"aditi2313"},"content":"* Only allows each command to be viewed once.","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"aditi2313"},"content":"### Saving LibTask\u0027s data","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"aditi2313"},"content":"LibTask\u0027s data is saved in the hard disk automatically after any command that changes it. There is no need to save manually.","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"aditi2313"},"content":"### B. Patron Features","lastModifiedDate":"2022-03-24"},{"lineNumber":119,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":120,"author":{"gitId":"aditi2313"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"aditi2313"},"content":"### Adding a patron: `patron add`","lastModifiedDate":"2022-03-24"},{"lineNumber":122,"author":{"gitId":"aditi2313"},"content":"Adds a patron to LibTask\u0027s patron list.","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"aditi2313"},"content":"Format: `patron add n/NAME s/ID p/PHONE e/EMAIL [t/TAG]…​`","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"aditi2313"},"content":"* `patron add n/John s/A02128282A p/93231222 e/e03482@u.nus.edu t/student`","lastModifiedDate":"2022-03-01"},{"lineNumber":128,"author":{"gitId":"aditi2313"},"content":"* `patron add n/Alice s/S01823283S p/90123212 e/profA@u.nus.edu`","lastModifiedDate":"2022-03-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"aditi2313"},"content":"### Listing all patrons : `patron list`","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"aditi2313"},"content":"Shows a list of all patrons in LibTask\u0027s patron list.","lastModifiedDate":"2022-03-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"aditi2313"},"content":"Format: `patron list`","lastModifiedDate":"2022-03-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"aditi2313"},"content":"* If all patrons are already listed, the command will still show a success message as having listed all patrons, but the patrons listed will have no visual change.","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"aditi2313"},"content":"### Editing a patron : `patron edit`","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"aditi2313"},"content":"Edits the details of a patron at a specified index of the displayed patron list.","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"aditi2313"},"content":"Format: `patron edit INDEX [n/NAME] [s/ID] [p/PHONE] [e/EMAIL] [t/TAG]…​`","lastModifiedDate":"2022-03-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"aditi2313"},"content":"* Edits the patron at the specified `INDEX`. The index refers to the index number shown in the displayed patron list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"aditi2313"},"content":"* When editing tags, the existing tags of the patron will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2022-03-01"},{"lineNumber":148,"author":{"gitId":"aditi2313"},"content":"* You can remove all the patron’s tags by typing `t/` without","lastModifiedDate":"2022-03-01"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"aditi2313"},"content":"* `patron edit 1 n/John Cena p/91959491 e/johncena@u.nus.edu` Edits the name, phone number and email address of the 1st patron in the displayed patron list to be `John Cena`, `91959491` and `johncena@u.nus.edu` respectively.","lastModifiedDate":"2022-03-24"},{"lineNumber":153,"author":{"gitId":"aditi2313"},"content":"* `patron edit 2 n/Alice t/Professor t/Horror ` Edits the name of the 2nd patron in the displayed patron list to be `Alice` and changes tags to `Professor` and `Horror`.","lastModifiedDate":"2022-03-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"aditi2313"},"content":"### Finding a patron by name: `patron find`","lastModifiedDate":"2022-03-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"aditi2313"},"content":"Finds all patrons with names matching the given keywords in LibTask\u0027s patron list.","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"aditi2313"},"content":"Format: `patron find n/KEYWORD [n/KEYWORD]…​`","lastModifiedDate":"2022-03-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"aditi2313"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2022-03-01"},{"lineNumber":162,"author":{"gitId":"aditi2313"},"content":"* The order of the keywords does not matter. e.g. results from the keyword `Hans Bo` will match results of the keyword `Bo Hans`","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"aditi2313"},"content":"* Only full words will be matched e.g. results from the keyword `Han` will not match results from the keyword `Hans`","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"aditi2313"},"content":"* Patrons matching at least one part of the keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"aditi2313"},"content":"  e.g. keyword `Hans Bo` will return patrons with names `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"aditi2313"},"content":"Example:","lastModifiedDate":"2022-03-01"},{"lineNumber":169,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":170,"author":{"gitId":"aditi2313"},"content":"`patron find n/alex n/david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"aditi2313"},"content":"### Deleting a patron : `patron delete`","lastModifiedDate":"2022-03-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"aditi2313"},"content":"Deletes the patron at a specified index in the displayed patron list.","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"aditi2313"},"content":"Format: `patron delete INDEX`","lastModifiedDate":"2022-03-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"aditi2313"},"content":"* Deletes the patron at the specified `INDEX`.","lastModifiedDate":"2022-03-01"},{"lineNumber":181,"author":{"gitId":"aditi2313"},"content":"* The index refers to the index number shown in the displayed patron list.","lastModifiedDate":"2022-03-01"},{"lineNumber":182,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"aditi2313"},"content":"* `patron list` followed by `patron delete 2` deletes the 2nd patron shown in the displayed patron list.","lastModifiedDate":"2022-03-24"},{"lineNumber":186,"author":{"gitId":"aditi2313"},"content":"* `patron find n/Betsy` followed by `patron delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2022-03-01"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"aditi2313"},"content":"### Listing all patrons with overdue books : `patron overdue`","lastModifiedDate":"2022-03-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"aditi2313"},"content":"Lists all patrons in LibTask\u0027s patron list with overdue books.","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"aditi2313"},"content":"Format: `patron overdue`","lastModifiedDate":"2022-03-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"aditi2313"},"content":"### C. Book Features","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"aditi2313"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"aditi2313"},"content":"### Adding a book: `book add`","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"aditi2313"},"content":"Adds a book to LibTask\u0027s book list.","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"bingsen0806"},"content":"Format: `book add n/NAME i/ISBN [a/AUTHOR …] [t/CATEGORY_TAG …] `","lastModifiedDate":"2022-03-01"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"Halpfrog"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":204,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":205,"author":{"gitId":"Halpfrog"},"content":"**Tip:**","lastModifiedDate":"2022-03-23"},{"lineNumber":206,"author":{"gitId":"bingsen0806"},"content":"* ISBN must be 10 or 13 digits in length","lastModifiedDate":"2022-03-01"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"bingsen0806"},"content":"* `book add n/Harry Potter i/978-7-783828-15-1 a/J.K.Rowling t/Thriller t/Magic`","lastModifiedDate":"2022-03-01"},{"lineNumber":211,"author":{"gitId":"bingsen0806"},"content":"* `book add n/Heads You Lose i/979-381-26-8943-3 a/Lisa Lutz a/David Hayward`","lastModifiedDate":"2022-03-01"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"aditi2313"},"content":"### Listing all books : `book list`","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"aditi2313"},"content":"Shows a list of all books in LibTask\u0027s book list.","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"bingsen0806"},"content":"Format: `book list`","lastModifiedDate":"2022-03-01"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"yuqitanyq"},"content":"* If all books are already listed, the command will still show a success message as having listed all books, but the books listed will have no visual change.","lastModifiedDate":"2022-03-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"aditi2313"},"content":"### Finding books : `book find`","lastModifiedDate":"2022-03-24"},{"lineNumber":222,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":223,"author":{"gitId":"aditi2313"},"content":"Lists all books in LibTask\u0027s book list that satisfy the predicates given.","lastModifiedDate":"2022-03-24"},{"lineNumber":224,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":225,"author":{"gitId":"Halpfrog"},"content":"Format: `book find [n/NAME] [t/CATEGORY_TAG] [a/AUTHOR]`","lastModifiedDate":"2022-03-29"},{"lineNumber":226,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":227,"author":{"gitId":"Halpfrog"},"content":"* Finds the books that match the predicate supplied.","lastModifiedDate":"2022-03-23"},{"lineNumber":228,"author":{"gitId":"Halpfrog"},"content":"* Only one of the optional fields can be provided.","lastModifiedDate":"2022-03-23"},{"lineNumber":229,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":230,"author":{"gitId":"Halpfrog"},"content":"Examples:","lastModifiedDate":"2022-03-23"},{"lineNumber":231,"author":{"gitId":"aditi2313"},"content":"* `book find n/Harry` Returns all books in LibTask\u0027s book list whose titles contain the word `Harry`.","lastModifiedDate":"2022-03-24"},{"lineNumber":232,"author":{"gitId":"aditi2313"},"content":"* `book find t/Adventure` Returns all books in LibTask\u0027s book list which have a tag `Adventure`.","lastModifiedDate":"2022-03-24"},{"lineNumber":233,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":234,"author":{"gitId":"aditi2313"},"content":"### Editing a book : `book edit`","lastModifiedDate":"2022-03-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"aditi2313"},"content":"Edits the details of a book at a specified index of the displayed book list.","lastModifiedDate":"2022-03-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"bingsen0806"},"content":"Format: `book edit INDEX [n/NAME] [i/ISBN] [a/AUTHOR …] [t/CATEGORY_TAG …]`","lastModifiedDate":"2022-03-01"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"bingsen0806"},"content":"* Edits the book at the specified `INDEX`. The index refers to the index number shown in the displayed book list. The index **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of books in the displayed list.","lastModifiedDate":"2022-03-01"},{"lineNumber":241,"author":{"gitId":"yuqitanyq"},"content":"* At least one of the optional fields (ISBN, AUTHOR, CATEGORY_TAG) must be provided.","lastModifiedDate":"2022-03-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"yuqitanyq"},"content":"* When editing tags or authors, the existing tags or authors of the book will be removed i.e. adding of tags and authors is not cumulative. However, if all tags are added in a single input, the multiple tags will be added.","lastModifiedDate":"2022-03-23"},{"lineNumber":244,"author":{"gitId":"bingsen0806"},"content":"* You can remove all the book’s authors and tags by typing `a/` or `t/` respectively without","lastModifiedDate":"2022-03-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"yuqitanyq"},"content":"* `book edit 1 n/Harry Potter: Sorcerer\u0027s Stone t/Adventure t/Magic` edits the name of the 1st book to be `Harry Potter: Sorceror\u0027s Stone` and edit its category tag to be `Adventure` and `Magic`.","lastModifiedDate":"2022-03-23"},{"lineNumber":249,"author":{"gitId":"yuqitanyq"},"content":"* `book edit 2 i/978-79317-3-542-3 a/Another Rowling t/` edits the ISBN of the 2nd book to be `978-79317-3-542-3`, changes the author to `Another Rowling` and clears all existing tags.","lastModifiedDate":"2022-03-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"aditi2313"},"content":"### Deleting a book : `book delete`","lastModifiedDate":"2022-03-24"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"aditi2313"},"content":"Deletes the book at the specified index in the displayed book list.","lastModifiedDate":"2022-03-24"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"bingsen0806"},"content":"Format: `book delete INDEX`","lastModifiedDate":"2022-03-01"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"bingsen0806"},"content":"* Deletes the book at the specified `INDEX`.","lastModifiedDate":"2022-03-01"},{"lineNumber":258,"author":{"gitId":"bingsen0806"},"content":"* The index refers to the index number shown in the displayed book list.","lastModifiedDate":"2022-03-01"},{"lineNumber":259,"author":{"gitId":"bingsen0806"},"content":"* The index **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of books in the displayed list.","lastModifiedDate":"2022-03-01"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"aditi2313"},"content":"* `book list` followed by `book delete 2` deletes the 2nd book from LibTask\u0027s book list.","lastModifiedDate":"2022-03-24"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"bingsen0806"},"content":"### Borrowing a book : `borrow`","lastModifiedDate":"2022-03-01"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"aditi2313"},"content":"Allows the patron at `INDEX1` of the displayed patron list to borrow a book at `INDEX2` of the displayed book list.","lastModifiedDate":"2022-03-24"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"bingsen0806"},"content":"Format: `borrow INDEX1 INDEX2`","lastModifiedDate":"2022-03-01"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"aditi2313"},"content":"* `INDEX1` refers to the index number of a patron shown in the displayed patron list.","lastModifiedDate":"2022-03-24"},{"lineNumber":271,"author":{"gitId":"aditi2313"},"content":"* `INDEX2` refers to the index number of a book shown in the displayed book list.","lastModifiedDate":"2022-03-24"},{"lineNumber":272,"author":{"gitId":"bingsen0806"},"content":"* `INDEX1` **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of patrons in the displayed list.","lastModifiedDate":"2022-03-01"},{"lineNumber":273,"author":{"gitId":"bingsen0806"},"content":"* `INDEX2` **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of books in the displayed list.","lastModifiedDate":"2022-03-01"},{"lineNumber":274,"author":{"gitId":"bingsen0806"},"content":"* The book at `INDEX2` must not be already borrowed.","lastModifiedDate":"2022-03-01"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"bingsen0806"},"content":"* `patron list` and `book list` followed by `borrow 2 3` establishes a relationship that the 2nd patron borrows the 3rd book.","lastModifiedDate":"2022-03-01"},{"lineNumber":278,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":279,"author":{"gitId":"bingsen0806"},"content":"### Returning a book : `return`","lastModifiedDate":"2022-03-01"},{"lineNumber":280,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":281,"author":{"gitId":"aditi2313"},"content":"Depending on the exact command, returns all books borrowed by a patron at a specified index of the displayed patron list, or returns a book at a specified index in the displayed book list.","lastModifiedDate":"2022-03-24"},{"lineNumber":282,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":283,"author":{"gitId":"bingsen0806"},"content":"Format: `return PREFIX/INDEX`","lastModifiedDate":"2022-03-01"},{"lineNumber":284,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":285,"author":{"gitId":"bingsen0806"},"content":"* `PREFIX` must be either `p` for patrons or `b` for books.","lastModifiedDate":"2022-03-01"},{"lineNumber":286,"author":{"gitId":"bingsen0806"},"content":"* If `PREFIX` is `p`, `INDEX` refers to the index number shown in the displayed patron list.","lastModifiedDate":"2022-03-01"},{"lineNumber":287,"author":{"gitId":"bingsen0806"},"content":"* If `PREFIX` is `b`, `INDEX` refers to the index number shown in the displayed book list.","lastModifiedDate":"2022-03-01"},{"lineNumber":288,"author":{"gitId":"bingsen0806"},"content":"* `INDEX` **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of patrons or books in the displayed list.","lastModifiedDate":"2022-03-01"},{"lineNumber":289,"author":{"gitId":"bingsen0806"},"content":"* If the book at index `INDEX` is not borrowed, or if the patron at index `INDEX` does not borrow any books, nothing happens.","lastModifiedDate":"2022-03-01"},{"lineNumber":290,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":291,"author":{"gitId":"bingsen0806"},"content":"Examples:","lastModifiedDate":"2022-03-01"},{"lineNumber":292,"author":{"gitId":"bingsen0806"},"content":"* `patron list` followed by `return p/3` will return all books borrowed by the 3rd patron, if any.","lastModifiedDate":"2022-03-01"},{"lineNumber":293,"author":{"gitId":"bingsen0806"},"content":"* `book list` followed by `return b/2` will return the 2nd book, if it is borrowed.","lastModifiedDate":"2022-03-01"},{"lineNumber":294,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":295,"author":{"gitId":"Halpfrog"},"content":"### Requesting a book : `book request`","lastModifiedDate":"2022-03-29"},{"lineNumber":296,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":297,"author":{"gitId":"aditi2313"},"content":"Establishes a relationship that patron at index `INDEX1` of the displayed patron list is requesting to be notified when the book at index `INDEX2` of the displayed book list is available.","lastModifiedDate":"2022-03-24"},{"lineNumber":298,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":299,"author":{"gitId":"Halpfrog"},"content":"Format: `book request INDEX1 INDEX2`","lastModifiedDate":"2022-03-29"},{"lineNumber":300,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":301,"author":{"gitId":"bingsen0806"},"content":"* `INDEX1` **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of patrons in the displayed list.","lastModifiedDate":"2022-03-01"},{"lineNumber":302,"author":{"gitId":"bingsen0806"},"content":"* `INDEX2` **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of books in the displayed list.","lastModifiedDate":"2022-03-01"},{"lineNumber":303,"author":{"gitId":"bingsen0806"},"content":"* If the book at index `INDEX2` is currently available, a message will be displayed.","lastModifiedDate":"2022-03-01"},{"lineNumber":304,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":305,"author":{"gitId":"bingsen0806"},"content":"Examples:","lastModifiedDate":"2022-03-01"},{"lineNumber":306,"author":{"gitId":"Halpfrog"},"content":"* `patron list` and `book list` followed by `book request 1 2` keeps a record that the 1st patron in the displayed patron list would like to be notified when the 2nd book in the displayed book list is available.","lastModifiedDate":"2022-03-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"aditi2313"},"content":"### Listing all books related to a patron : `book related`","lastModifiedDate":"2022-03-24"},{"lineNumber":309,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":310,"author":{"gitId":"aditi2313"},"content":"Display all books related to the patron at the specified index of the displayed patron list.","lastModifiedDate":"2022-03-24"},{"lineNumber":311,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":312,"author":{"gitId":"yl-ang"},"content":"Format: `book related INDEX`","lastModifiedDate":"2022-03-23"},{"lineNumber":313,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":314,"author":{"gitId":"yl-ang"},"content":"* `INDEX` **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of patrons in the displayed list.","lastModifiedDate":"2022-03-23"},{"lineNumber":315,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":316,"author":{"gitId":"yl-ang"},"content":"Examples:","lastModifiedDate":"2022-03-23"},{"lineNumber":317,"author":{"gitId":"yl-ang"},"content":"* `book related 1` will display all the books borrowed and requested by the 1st patron in the displayed patron list.","lastModifiedDate":"2022-03-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":322,"author":{"gitId":"aditi2313"},"content":"LibTask\u0027s data is saved as a JSON file `[JAR file location]/data/libtask.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-03-24"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":324,"author":{"gitId":"Halpfrog"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation:","lastModifiedDate":"2022-03-23"},{"lineNumber":325,"author":{"gitId":"Halpfrog"},"content":"**Caution:**","lastModifiedDate":"2022-03-23"},{"lineNumber":326,"author":{"gitId":"aditi2313"},"content":"If your changes to the data file makes its format invalid, LibTask will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-03-24"},{"lineNumber":327,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":329,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"yuqitanyq"},"content":"**Q1**: What happens if there is no response after attempting to enter a command?\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":338,"author":{"gitId":"yuqitanyq"},"content":"**A**: Please double-check if the format of the command is written correctly. If the issue persists, please close the application and restart it again.","lastModifiedDate":"2022-03-30"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"yuqitanyq"},"content":"**Q2**: I tried to edit a book\u0027s details, but there seems to be an error message being shown. Why is that so?\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":341,"author":{"gitId":"yuqitanyq"},"content":"**A**: Please do ensure that if the book name is not provided, at least one of the optional fields Isbn, Author and Category tag is provided.","lastModifiedDate":"2022-03-30"},{"lineNumber":342,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":343,"author":{"gitId":"yuqitanyq"},"content":"**Q3**: Is there any other way to exit the application without typing?\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":344,"author":{"gitId":"yuqitanyq"},"content":"**A**: Yes, there is another way to exit the program, and that is by clicking the File button on the top left-hand corner of the app. There is an exit button in the dropdown list which appear after clicking the File button.","lastModifiedDate":"2022-03-30"},{"lineNumber":345,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":346,"author":{"gitId":"yuqitanyq"},"content":"**Q4**: Will the data of the books be saved if the program was not closed via the `exit` command or via the method shown in Q3?\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":347,"author":{"gitId":"yuqitanyq"},"content":"**A**: Yes the data will still be saved. However, to ensure a better user experience, we recommend using the exit command as described in the user guide.","lastModifiedDate":"2022-03-30"},{"lineNumber":348,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":349,"author":{"gitId":"yuqitanyq"},"content":"**Q5**: Is there a shortcut on using the various commands?\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":350,"author":{"gitId":"yuqitanyq"},"content":"**A**: Unfortunately, no there is no shortcut. In order to execute the various commands, please enter the commands in the correct format and with valid inputs.","lastModifiedDate":"2022-03-30"},{"lineNumber":351,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":352,"author":{"gitId":"yuqitanyq"},"content":"**Q6**: I entered the `book list` command but nothing has changed. Is this expected?\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":353,"author":{"gitId":"yuqitanyq"},"content":"**A**: Yes, it is expected, as all the books have probably been already listed.","lastModifiedDate":"2022-03-30"},{"lineNumber":354,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":355,"author":{"gitId":"yuqitanyq"},"content":"**Q7**: Is there a summary of the commands?\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":356,"author":{"gitId":"yuqitanyq"},"content":"**A**: Yes, there is a summary of commands available, and they can be found in the section below.","lastModifiedDate":"2022-03-30"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":358,"author":{"gitId":"yuqitanyq"},"content":"**Q8**: Why are there two separate lists for books and patrons instead of one combined list?\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":359,"author":{"gitId":"yuqitanyq"},"content":"**A**: This is done so that the user can see the two lists side by side and have a clearer picture of the various patrons and books in the database.","lastModifiedDate":"2022-03-30"},{"lineNumber":360,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":364,"author":{"gitId":"aditi2313"},"content":"### Category: General Commands","lastModifiedDate":"2022-03-24"},{"lineNumber":365,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":366,"author":{"gitId":"aditi2313"},"content":"| Function                                   | Format Of Command                                                          |","lastModifiedDate":"2022-03-24"},{"lineNumber":367,"author":{"gitId":"aditi2313"},"content":"|--------------------------------------------|----------------------------------------------------------------------------|","lastModifiedDate":"2022-03-24"},{"lineNumber":368,"author":{"gitId":"aditi2313"},"content":"| **Show message to help page**              | `help`                                                                     |","lastModifiedDate":"2022-03-24"},{"lineNumber":369,"author":{"gitId":"aditi2313"},"content":"| **Clear all entries**                      | `clear`                                                                    |","lastModifiedDate":"2022-03-24"},{"lineNumber":370,"author":{"gitId":"aditi2313"},"content":"| **Exit the program**                       | `exit`                                                                     |","lastModifiedDate":"2022-03-24"},{"lineNumber":371,"author":{"gitId":"aditi2313"},"content":"| **Show previous commands**                 | `u`                                                                        |","lastModifiedDate":"2022-03-24"},{"lineNumber":372,"author":{"gitId":"aditi2313"},"content":"| **Navigating the different patrons/books** | **Pressing the :arrow_up: and :arrow_down: arrows on keyboard :keyboard:** |","lastModifiedDate":"2022-03-24"},{"lineNumber":373,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":374,"author":{"gitId":"yuqitanyq"},"content":"### Category: Patron Commands","lastModifiedDate":"2022-02-27"},{"lineNumber":375,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":376,"author":{"gitId":"yuqitanyq"},"content":"| Function                            | Format Of Command                                                 |","lastModifiedDate":"2022-03-06"},{"lineNumber":377,"author":{"gitId":"aditi2313"},"content":"|-------------------------------------|-------------------------------------------------------------------|","lastModifiedDate":"2022-03-24"},{"lineNumber":378,"author":{"gitId":"yuqitanyq"},"content":"| **Add a new patron**                | `patron add n/NAME s/ID p/PHONE e/EMAIL [t/TAG]…​`                |","lastModifiedDate":"2022-03-06"},{"lineNumber":379,"author":{"gitId":"yuqitanyq"},"content":"| **List all patrons**                | `patron list`                                                     |","lastModifiedDate":"2022-03-06"},{"lineNumber":380,"author":{"gitId":"yuqitanyq"},"content":"| **Edit a patron**                   | `patron edit INDEX [n/NAME] [s/ID] [p/PHONE] [e/EMAIL] [t/TAG]…​` |","lastModifiedDate":"2022-03-06"},{"lineNumber":381,"author":{"gitId":"yuqitanyq"},"content":"| **Find a patron**                   | `patron find n/KEYWORD [n/KEYWORD]…​`                             |","lastModifiedDate":"2022-03-06"},{"lineNumber":382,"author":{"gitId":"yuqitanyq"},"content":"| **Delete a patron**                 | `patron delete INDEX`                                             |","lastModifiedDate":"2022-03-06"},{"lineNumber":383,"author":{"gitId":"aditi2313"},"content":"| **List patrons with overdue books** | `patron overdue`                                                  |","lastModifiedDate":"2022-03-24"},{"lineNumber":384,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":385,"author":{"gitId":"yuqitanyq"},"content":"### Category: Book Commands","lastModifiedDate":"2022-02-27"},{"lineNumber":386,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":387,"author":{"gitId":"yuqitanyq"},"content":"| Function                               | Format Of Command                                                   |","lastModifiedDate":"2022-03-06"},{"lineNumber":388,"author":{"gitId":"yl-ang"},"content":"|----------------------------------------|---------------------------------------------------------------------|","lastModifiedDate":"2022-03-23"},{"lineNumber":389,"author":{"gitId":"yuqitanyq"},"content":"| **Add a book**                         | `book add n/NAME i/ISBN [a/AUTHOR]…​ [t/CATEGORY_TAG]…​`            |","lastModifiedDate":"2022-03-23"},{"lineNumber":390,"author":{"gitId":"yuqitanyq"},"content":"| **List all books**                     | `book list`                                                         |","lastModifiedDate":"2022-03-06"},{"lineNumber":391,"author":{"gitId":"aditi2313"},"content":"| **Find a book**                        | `book find [n/Name] [t/Tag] [a/Author]`                             |","lastModifiedDate":"2022-03-24"},{"lineNumber":392,"author":{"gitId":"yuqitanyq"},"content":"| **Edit a book**                        | `book edit INDEX [n/NAME] [i/ISBN] [a/AUTHOR]…​ [t/CATEGORY_TAG]…​` |","lastModifiedDate":"2022-03-23"},{"lineNumber":393,"author":{"gitId":"yuqitanyq"},"content":"| **Delete a book**                      | `book delete INDEX`                                                 |","lastModifiedDate":"2022-03-06"},{"lineNumber":394,"author":{"gitId":"yuqitanyq"},"content":"| **Borrow a book**                      | `borrow INDEX1 INDEX2`                                              |","lastModifiedDate":"2022-03-06"},{"lineNumber":395,"author":{"gitId":"yuqitanyq"},"content":"| **Return a book**                      | `return PREFIX/INDEX`                                               |","lastModifiedDate":"2022-03-06"},{"lineNumber":396,"author":{"gitId":"yuqitanyq"},"content":"| **Request a book**                     | `request INDEX1 INDEX2`                                             |","lastModifiedDate":"2022-03-06"},{"lineNumber":397,"author":{"gitId":"yl-ang"},"content":"| **List all books related to a patron** | `book related INDEX`                                                |","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"yl-ang":19,"yuqitanyq":45,"-":150,"aditi2313":124,"bingsen0806":42,"Halpfrog":17}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"ecp -\u003e ec ++: index, editPatronDescriptor","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"-":20,"aditi2313":1}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"title: LibTask","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W14-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W14-1/tp/actions)","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-W14-1/tp/branch/master/graph/badge.svg?token\u003dXNUDJ0U08U)](https://codecov.io/gh/AY2122S2-CS2103T-W14-1/tp)","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"**LibTask** is a desktop application to allow librarians to keep track of book statuses and contact details of patrons who have borrowed them or requested for them. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"* If you are interested in using LibTask, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"* If you are interested about developing LibTask, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yl-ang":5,"-":14}},{"path":"docs/team/aditi2313.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"layout: page","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"title: Aditi Gupta\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"### Project: LibTask","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"LibTask is a desktop application used by librarians to keep track of books, overdue books, and contact details of patrons who have borrowed them and those who requested them. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on AddressBook - Level 3.","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"* **Project management**:","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    * User Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"* **Community**:","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"* **Tools**:","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"aditi2313":28}},{"path":"docs/team/bingsen0806.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"layout: page","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"title: Lim Bing Sen\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"### Project: LibTask","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"LibTask is a desktop application used by librarians to keep track of books, overdue books, and contact details of patrons who have borrowed them and those who requested them. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on AddressBook - Level 3.","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"### Summary of contributions","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"* **Code contributed**: I personally contributed almost 4 KLoC to Mod Manager. All my code contributions can be found [here](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dbingsen\u0026sort\u003dtotalCommits%20dsc\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByAuthors\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dbingsen0806\u0026tabRepo\u003dAY2122S2-CS2103T-W14-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse).","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"* **Enhancements implemented**: Idealise and design the `Book` component of `LibTask`. The `Book` component includes","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"  * What it does: every book has a book name, isbn, list of authors and set of tags (e.g. category tag such as _SciFi_, or location tag such as _Central_). It also contains a status, which can be _Available_ or _Borrowed_. If the status is _Borrowed_, then the `Book` stores a patron as borrower, and also stores the borrow and return date. Furthermore, a `Book` can also stores a list of requesters who are requesting to be notified about its availability, if it is currently borrowed. The introduction of `Book` component allows librarians to manage book related tasks easily, such as CRUD commands, and tracking of book statuses and patron\u0027s request for books.","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"  * Justification:This enhancement improves the product significantly and is a vital component of `LibTask` because it provides a data representation for librarians to keep track of books. Without this `Book` component, a librarian cannot store persistent data of books in `LibTask`. Furthermore, some subcomponents of `Book`, such as tags and requesters blends in well with `LibTask`\u0027s use case. For example, tags allow the librarian to find books base on tags and requesters allows busy librarians to be reminded to notify patrons when the book of interest is available.","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"  * Highlights: The implementation of this enhancement is tedious and very time-consuming. After putting in much effort to understand the original AddressBook (Level 3) code, each of the minor subcomponents requires a set of classes, checks, JUnit tests, documentation and design thought process. For example, to implement only one `Isbn` subcomponent, research on conventional Isbn formats is needed, followed by implementation of a rigorous checking algorithm to ensure validity of the Isbn, and a new class JsonAdaptedIsbn to convert Isbn into json format, and lastly unit tests and Javadocs for all classes. The same level of work is required for other subcomponents such as `Author`, `BookName`, `Requester`, `Status`, `StatusType` etc, and a total of 4kLoC can be attributed to all these changes alone. Aside from tediousness, careful planning and design considerations are also made. For example, much consideration is made before deciding to let `Book` class depend on `Patron` class instead of having two-way cyclic dependency. This design has a downside of requiring all related book objects to be updated whenever a related patron is modified. However, it solves the problem of cyclic updates and not being able to store objects with cyclic references as json format. Good communication skills is required as I need to constantly update the team about high-level design changes, especially the UI team, so that my teammates can have the correct assumption of the `Book` abstraction provided to them when implementing the UI and commands.","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"* **New Command Features implemented**:","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"  * Add book command:","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"  * Delete book command:","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"  * Borrow command:","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"  * Return command:","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"  * Request book command:","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"* **User Guide contribution**:","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"* **Developer Guide contribution**:","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"* **Team-based tasks contributions**:","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"  * Created team organization and setup CI/CD and workflow.","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"  * Setup team repo, CodeCov, GitHub actions.","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"  * Set target and deadlines for milestone v1.2, v1.2b, and v1.3. Noticeably led team discussions and provided the team with a direction on features to be prioritized and features to be cut down.","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"  * Contributed to more than 100 PR review comments as shown over [this dashboard](https://nus-cs2103-ay2122s2.github.io/dashboards/contents/tp-comments.html).","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"  * Initiated multiple zoom sessions to help teammates debug code","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"* **Project management**:","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"  * Ensure that all milestone progress are reached (which includes team-based and individual-based tasks). We managed to achieve 100% of the recommended milestone tasks, including early wrap up for both v1.2 (only achieved by 11% of the cohort) and v1.3. ","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"  * Managed releases [v1.2](https://github.com/AY2122S2-CS2103T-W14-1/tp/releases/tag/v1.2) and [v1.3.trial](https://github.com/AY2122S2-CS2103T-W14-1/tp/releases/tag/v1.3.trial) on GitHub ","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"  * Maintained the issue tracker and milestones for team repo","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"* **Community**:","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"  * Authored multiple helpful forum posts to help peers. For example, [this post on how to resolve GitHub action issues](https://github.com/nus-cs2103-AY2122S2/forum/issues/115)","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"bingsen0806":46}},{"path":"docs/team/halpfrog.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Halpfrog"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"Halpfrog"},"content":"layout: page","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"Halpfrog"},"content":"title: Sarthak Pradhan\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"Halpfrog"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"Halpfrog"},"content":"### Project: LibTask","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"Halpfrog"},"content":"LibTask is a desktop application used by NUS libraries to keep track of books, overdue books, and contact details of patrons who have borrowed them and those who requested them.","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"Halpfrog"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on AddressBook - Level 3.","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"Halpfrog"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"Halpfrog"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"Halpfrog"},"content":"  * Added the ability for users to view their previous commands","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Halpfrog"},"content":"    * What it does","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Halpfrog"},"content":"      * Allows users to make changes to their previous commands if needed. ","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Halpfrog"},"content":"    * Justification","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Halpfrog"},"content":"      * It will speed up the process should the user wish to key in multiple similar commands","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Halpfrog"},"content":"      * Will also allow them to check if any of the fields were incorrectly entered.","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Halpfrog"},"content":"    * Highlights","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"Halpfrog"},"content":"      * This command changes the way users can interact with LibTask, making it more efficient for librarians who have to do similar work repeatedly.","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"Halpfrog"},"content":"    * Credits","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"Halpfrog"},"content":"      * Worked with [Ang Yong Liang](http://github.com/yl-ang) to make sure that the previous command would show up in the CommandBox.","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"Halpfrog"},"content":"  ","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"Halpfrog"},"content":"  * Added the ability for users to search for a book by its category tag, author or name.","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Halpfrog"},"content":"    * What it does","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"Halpfrog"},"content":"      * Allows users to quickly find certain books using a search query","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"Halpfrog"},"content":"    * Justification","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"Halpfrog"},"content":"      * It will make it easier for a librarian to find all books that are part of the same category should a student ask for similar books","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"Halpfrog"},"content":"      * It would also be able to search for multiple editions of the same book if they are not sure which is the one that they need to find. ","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"Halpfrog"},"content":"    * Highlights","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"Halpfrog"},"content":"      * This is quite similar to the patron find command however it can now take in multiple arguments rather than just one.","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"Halpfrog"},"content":"      * Requires more work to ensure that only one argument is parsed into the software since it can be one of 3. ","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"Halpfrog"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dHalpfrog\u0026tabRepo\u003dAY2122S2-CS2103T-W14-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"Halpfrog"},"content":"* **Project management**:","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"Halpfrog"},"content":"  * Approved and reviewed PR\u0027s for merging","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"Halpfrog"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"Halpfrog"},"content":"  * Added test cases for PreviousCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"Halpfrog"},"content":"  * Added test cases for BookFindCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"Halpfrog"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"Halpfrog"},"content":"  * User Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"Halpfrog"},"content":"    * Documentation for PreviousCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Halpfrog"},"content":"    * Documentation for BookFindCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Halpfrog"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"Halpfrog"},"content":"* **Community**:","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":58,"author":{"gitId":"Halpfrog"},"content":"* **Tools**:","lastModifiedDate":"2022-02-26"},{"lineNumber":59,"author":{"gitId":"Halpfrog"},"content":"  * Gradle","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"Halpfrog"},"content":"  * Intellij","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"Halpfrog"},"content":"  * Assertions","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"Halpfrog":63}},{"path":"docs/team/yl-ang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"layout: page","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"title: Ang Yong Liang\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"### Project: LibTask","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"LibTask is a desktop application used by librarians to keep track of books, overdue books, and contact details of patrons who have borrowed them and those who requested them. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on AddressBook - Level 3.","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"* **New Feature**: ","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"  * Added the ability to view patron and book details through LibTask GUI [\\#49](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/49)","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"    * What it does:","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"      * Allows users to view patron and book details quickly via the GUI.","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"    * Justification:","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"      * The feature will improve the users\u0027 efficiency as they are able to get the details","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"    * Highlights:","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"      * This enhancement was challenging as it requires modifying the FlowPane and setting the FXML labels to render the patron and book cards in the main window.","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"      * In addition, it requires some measurements to ensure that the patron and book cards are rendered in-place.","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"    * Credits:","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"      * Using Scene builder to modify FXML files.","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"      * Understanding GridPane to evenly divide the GUI space for the respective patron and book lists via the [doc oracle guide](https://docs.oracle.com/javafx/2/get_started/fxml_example.fxml.html).","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"  * Added the ability to find all books related to a particular patron [\\#97](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/97), [\\#101](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/101)","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"    * What it does:","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"      * Allows users to get a list of books related to a particular patron.","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"    * Justification:","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"      * The feature will improve the product significantly as it will help users to filter the books that are related to a particular patron of concern.","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"    * Highlights:","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"      * This enhancement was rather similar to the `patron find` command. However, the command takes in a patron index instead of keywords.","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"      * Furthermore, it is challenging as it requires the creation of a predicate to obtain the books that belong to the particular patron of concern.","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"    * Credits:","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"      * Worked with [Yu Qi](https://github.com/yuqitanyq) to implement this enhancement.","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dyl-ang\u0026tabRepo\u003dAY2122S2-CS2103T-W14-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"* **Project management**:","lastModifiedDate":"2022-02-23"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"  * Reviewed and approved PRs for merging","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"  * proposed design suggestions","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"  * Created `v1.3`, `v1.4` milestones","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-23"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"  * Updated the GUI to show book requests [\\#111](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/111)","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"  * Updated the GUI to show book status [\\#84](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/84)","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"  * Updated the GUI to show previous command [\\#72](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/72)","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"  * Updated the GUI to show patron card details [\\#63](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/63)","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"  * Added test cases for Book and Patron commands [\\#88](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/88)","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-23"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"  * User Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"    * Added documentation for the feature `book related` [\\#112](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/112)","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"    * Added documentation for `quick start` and `introduction` [\\#16](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/16)","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"    * Added MSS for related book command [\\#112](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/112)","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"    * Update hyperlinks and terms [\\#75](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/75)","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"* **Community**:","lastModifiedDate":"2022-02-23"},{"lineNumber":60,"author":{"gitId":"yl-ang"},"content":"  * PR reviewed (with non-trivial review comments): [\\#101](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/101), [\\#100](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/100), [\\#96](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/96), [\\#95](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/95), [\\#83](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/83), [\\#79](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/79), [\\#78](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/78), [\\#73](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/73), [\\#69](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/69), [\\#66](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/65), [\\#62](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/65), [\\#60](https://github.com/AY2122S2-CS2103T-W14-1/tp/pull/60)","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":62,"author":{"gitId":"yl-ang"},"content":"* **Tools**:","lastModifiedDate":"2022-02-23"},{"lineNumber":63,"author":{"gitId":"yl-ang"},"content":"  * Assertions","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"yl-ang"},"content":"  * Gradle","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"yl-ang"},"content":"  * Intellij","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"yl-ang"},"content":"  * Scene Builder","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"yl-ang":66}},{"path":"docs/team/yuqitanyq.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"layout: page","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"title: Tan Yu Qi\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"### Project: LibTask","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"LibTask is a desktop application used by librarians to keep track of books, overdue books, and contact details of patrons who have borrowed them and those who requested them. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on AddressBook - Level 3.","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"### Summary of Contributions","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"  * Added the ability to edit the different fields of a book","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"    * What it does:","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"      * Allows users to edit a book currently in the list. It references the book based on the index shown on the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"      * Fields which can be edited include the book name, ISBN, author and tags.","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"    * Justification:","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"      * This feature improves the product significantly because a user can make mistakes when adding a new book and the application should provide a convenient way to rectify them.","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"      * Instead of asking the user to delete the book that they created wrongly, and add the book again, this feature allows them edit only the wrong details of the book that they added.","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"    * Highlights:","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"      * This enhancement affects how users directly interact with the application and adds tremendous value to the user as well. Despite it being challenging to understand the entire system, the command is adapted quite similarly to the existing code base. This command does not affect other commands directly and implementation has been kept to be as simple as possible, requiring little changes to other commands.","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"      * A parser is used to parse the command before the logic of the command gets executed.","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"  * Added the ability to list all the books currently in the database","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"    * What it does:","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"      * Allows users to list all the books currently in the database.","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":"    * Justification:","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"      * This feature improves the product significantly as it gives the user an option to list all the books and see everything in one glance.","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"      * It provides  users a way to transit into viewing all books in the list from another state such from a list of books related to a patron (from the book related command).","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"    * Highlights:","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"      * This enhancement is implemented rather similarly as to how the list command is implemented in AB3 originally, but with minor tweaks to accommodate to the book object and book list.","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":"  * Added the ability to find all books related to a particular patron","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":"    * What it does:","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"      * Allows users to get a list of books related to a particular patron.","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"    * Justification:","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"      * The feature will improve the product significantly as it will help users to filter the books that are related to a particular patron of concern.","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"    * Highlights:","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"yuqitanyq"},"content":"      * A parser is used to parse the command before the logic of the command is executed.","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"yuqitanyq"},"content":"    * Credits:","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"yuqitanyq"},"content":"      * Worked with [Yong Liang](http://github.com/yl-ang) to implement this enhancement.","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"yuqitanyq"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"yuqitanyq"},"content":"  * The code contributed by me can be found in this [link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dyuqitanyq\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18).","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"yuqitanyq"},"content":"  * Frequently reviewed pull requests of other team members and wrote commits in a clear and orderly manner.","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"yuqitanyq"},"content":"  * Resolved merge conflicts when it arises before merging.","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"yuqitanyq"},"content":"  * Communicated with team members and ensured deliverables are delivered for each iteration.","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"yuqitanyq"},"content":"  * Added Tests cases for EditBookCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"yuqitanyq"},"content":"  * Added Tests cases for ListBookCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"yuqitanyq"},"content":"    * FAQ Command Summary","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"yuqitanyq"},"content":"    * Documentation for EditBookCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"yuqitanyq"},"content":"    * Documentation for ListBookCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"yuqitanyq"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"yuqitanyq"},"content":"    * user story for EditBookCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"yuqitanyq"},"content":"    * user story for ListBookCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"yuqitanyq"},"content":"    * logic illustration of EditBookCommand, ListBookCommand and RelatedBookCommand.","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"yuqitanyq"},"content":"  * Raised issues on the forum if necessary and gave detailed descriptions of problems.","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"yuqitanyq"},"content":"  * Gradle","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"yuqitanyq"},"content":"  * Intellij","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"yuqitanyq"},"content":"  * Assertions","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yuqitanyq":62,"-":15}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"aditi2313"},"content":"Create a new `Remark` in `seedu.address.model.patron`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-03-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"aditi2313"},"content":"Simply add the following to [`seedu.address.ui.PatronCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-03-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":399,"aditi2313":2}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.patron.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":111,"aditi2313":1}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"aditi2313"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPatronDescriptor);","lastModifiedDate":"2022-03-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":300,"aditi2313":1}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.LibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ReadOnlyLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.storage.JsonLibTaskStorage;","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.storage.LibTaskStorage;","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing LibTask ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        LibTaskStorage libTaskStorage \u003d new JsonLibTaskStorage(userPrefs.getLibTaskFilePath());","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        storage \u003d new StorageManager(libTaskStorage, userPrefsStorage);","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s LibTask and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"     * The data from the sample LibTask will be used instead if {@code storage}\u0027s LibTask is not found,","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"     * or an empty LibTask will be used instead if errors occur when reading {@code storage}\u0027s LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        Optional\u003cReadOnlyLibTask\u003e libTaskOptional;","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        ReadOnlyLibTask initialData;","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"            libTaskOptional \u003d storage.readLibTask();","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"            if (!libTaskOptional.isPresent()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"                logger.info(\"Data file not found. Will be starting with a sample LibTask\");","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"            initialData \u003d libTaskOptional.orElseGet(SampleDataUtil::getSampleLibTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty LibTask\");","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"            initialData \u003d new LibTask();","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty LibTask\");","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"            initialData \u003d new LibTask();","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty LibTask\");","lastModifiedDate":"2022-03-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"        logger.info(\"Starting LibTask \" + MainApp.VERSION);","lastModifiedDate":"2022-03-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping LibTask ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":160,"bingsen0806":23}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_EMPTY_COMMAND \u003d \"Command cannot be blank\";","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_INVALID_BOOK_DISPLAYED_INDEX \u003d \"The book index provided is invalid\";","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_BOOKS_LISTED_OVERVIEW \u003d \"%1$d books listed!\";","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_INVALID_PATRON_DISPLAYED_INDEX \u003d \"The patron index provided is invalid\";","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_PATRONS_LISTED_OVERVIEW \u003d \"%1$d patrons listed!\";","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_BOOK_NOT_BORROWED \u003d \"You cannot return %1$s if is not borrowed!\";","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_NO_BOOKS_BORROWED \u003d \"Patron %1$s did not borrow any book!\";","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_BOOK_ALREADY_BORROWED \u003d \"%1$s is already borrowed!\";","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_RETURN_DATE_TOO_EARLY \u003d \"Return date must be later than today\u0027s date!\";","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_SAME_ISBN_INCONSISTENT \u003d \"There already exists a book with isbn %1$s, \"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"            + \"but has different authors or name!\\n\";","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":10,"aditi2313":3,"bingsen0806":8}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.LibTaskParser;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ReadOnlyLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"     * Returns the LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"     * @see seedu.address.model.Model#getLibTask()","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    ReadOnlyLibTask getLibTask();","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"Halpfrog"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"     * Returns the LibTaskParser.","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"Halpfrog"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"     * @see LibTaskParser","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"Halpfrog"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    LibTaskParser getLibTaskParser();","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"    /** Returns an unmodifiable view of the filtered list of patrons */","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"    ObservableList\u003cPatron\u003e getFilteredPatronList();","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"    /** Returns an unmodifiable view of the filtered list of books */","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"    ObservableList\u003cBook\u003e getFilteredBookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"     * Returns the user prefs\u0027 LibTask file path.","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    Path getLibTaskFilePath();","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"Halpfrog"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"Halpfrog"},"content":"     * Stores previous command.","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"Halpfrog"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"Halpfrog"},"content":"    void storePreviousCommand(String previousCommand);","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"yl-ang":3,"-":42,"bingsen0806":10,"aditi2313":3,"Halpfrog":9}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"Halpfrog"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.LibTaskParser;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ReadOnlyLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    private final LibTaskParser libTaskParser;","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        libTaskParser \u003d new LibTaskParser();","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"Halpfrog"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"Halpfrog"},"content":"    public void storePreviousCommand(String previousCommand) {","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"Halpfrog"},"content":"        requireNonNull(previousCommand);","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        libTaskParser.storePreviousCommand(previousCommand);","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        Command command \u003d libTaskParser.parseCommand(commandText);","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"            storage.saveLibTask(model.getLibTask());","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"    public ReadOnlyLibTask getLibTask() {","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        return model.getLibTask();","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"    public ObservableList\u003cPatron\u003e getFilteredPatronList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"aditi2313"},"content":"        return model.getFilteredPatronList();","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"yl-ang"},"content":"    public ObservableList\u003cBook\u003e getFilteredBookList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"yl-ang"},"content":"        return model.getFilteredBookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"    public Path getLibTaskFilePath() {","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        return model.getLibTaskFilePath();","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"Halpfrog"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"    public LibTaskParser getLibTaskParser() {","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"        return libTaskParser;","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yl-ang":5,"-":71,"Halpfrog":9,"bingsen0806":13,"aditi2313":3}},{"path":"src/main/java/seedu/address/logic/commands/BorrowCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_BOOKS;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.book.BookStatus.STATUS_DATE_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import java.util.Date;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":" * Borrows a book by a patron, both identified using their displayed index from LibTask.","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"public class BorrowCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_USAGE \u003d BORROW_COMMAND_WORD","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"            + \": Establishes a borrow relationship between the patron identified by the index number \"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"            + \" in the displayed patron list and the book identified the index number in the displayed book list.\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"            + \"Parameters: PATRON_INDEX BOOK_INDEX (both must be positive integers) \"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"            + \"RETURN_DATE (in dd-MMM-yyyy format and after today\u0027s date)\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"            + \"Example: \" + BORROW_COMMAND_WORD + \" 1 1 28-Feb-2023\";","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_BORROW_BOOK_SUCCESS \u003d \"Patron %1$s borrowed book %2$s until %3$s\";","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_IS_BORROWING \u003d \"Patron %1$s already borrowing a copy of the same book!\\n\";","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    private final Index patronIndex;","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    private final Index bookIndex;","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    private final String returnDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"     * Creates an BorrowCommand to establish a borrow relationship between the","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"     * specified {@code Patron} and the specified {@code Book}","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"     * @param patronIndex The index of the borrower patron in the visible patron list.","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"     * @param bookIndex The index of the borrower book in the visible book list.","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"     * @param returnDate The return date of this book loan. It must be after the current date.","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    public BorrowCommand(Index patronIndex, Index bookIndex, String returnDate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        this.patronIndex \u003d patronIndex;","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        this.bookIndex \u003d bookIndex;","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        this.returnDate \u003d returnDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        List\u003cPatron\u003e lastShownPatronList \u003d model.getFilteredPatronList();","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        if (patronIndex.getZeroBased() \u003e\u003d lastShownPatronList.size()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATRON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        List\u003cBook\u003e lastShownBookList \u003d model.getFilteredBookList();","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        if (bookIndex.getZeroBased() \u003e\u003d lastShownBookList.size()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        Patron borrower \u003d lastShownPatronList.get(patronIndex.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        Book bookToBorrow \u003d lastShownBookList.get(bookIndex.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        if (model.isBorrowing(borrower, bookToBorrow)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"            throw new CommandException(String.format(MESSAGE_IS_BORROWING, borrower.getName()));","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        if (!isAfterCurrentDate(returnDate)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"            throw new CommandException(Messages.MESSAGE_RETURN_DATE_TOO_EARLY);","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        if (bookToBorrow.isBorrowed()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"                    Messages.MESSAGE_BOOK_ALREADY_BORROWED, bookToBorrow.getBookName()));","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        model.borrowBook(borrower, bookToBorrow, returnDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        model.updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"        return new CommandResult(String.format(MESSAGE_BORROW_BOOK_SUCCESS, borrower.getName(),","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"                bookToBorrow.getBookName(), returnDate));","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"                || (other instanceof BorrowCommand // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 patronIndex.equals(((BorrowCommand) other).patronIndex)","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 bookIndex.equals(((BorrowCommand) other).bookIndex)","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 returnDate.equals(((BorrowCommand) other).returnDate)); // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"    private boolean isAfterCurrentDate(String returnDate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"            Date commandReturnDate \u003d STATUS_DATE_FORMAT.parse(returnDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"            return commandReturnDate.after(currentDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"bingsen0806":101}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.LibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":" * Clears the LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"LibTask has been cleared!\";","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"        model.setLibTask(new LibTask());","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":19,"bingsen0806":4}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    public static final String PATRON_COMMAND_GROUP \u003d \"patron\";","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"    public static final String BOOK_COMMAND_GROUP \u003d \"book\";","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    public static final String ADD_COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    public static final String HELP_COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    public static final String EXIT_COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    public static final String CLEAR_COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    public static final String EDIT_COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"    public static final String DELETE_COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"    public static final String FIND_COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    public static final String LIST_COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"    public static final String OVERDUE_COMMAND_WORD \u003d \"overdue\";","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"Halpfrog"},"content":"    public static final String PREVIOUS_COMMAND_WORD \u003d \"u\";","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    public static final String RETURN_COMMAND_WORD \u003d \"return\";","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    public static final String BORROW_COMMAND_WORD \u003d \"borrow\";","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"    public static final String RELATED_COMMAND_WORD \u003d \"related\";","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    public static final String REQUEST_COMMAND_WORD \u003d \"request\";","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yl-ang":1,"-":20,"bingsen0806":11,"aditi2313":5,"Halpfrog":1}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"Halpfrog"},"content":"    /** Th */","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"Halpfrog"},"content":"    private final boolean isPrevious;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"Halpfrog"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean isPrevious) {","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"Halpfrog"},"content":"        this.isPrevious \u003d isPrevious;","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"Halpfrog"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"Halpfrog"},"content":"    public boolean isPrevious() {","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"Halpfrog"},"content":"        return isPrevious;","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":69,"Halpfrog":10}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting LibTask as requested ...\";","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"Halpfrog"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":17,"bingsen0806":1,"Halpfrog":1}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"Halpfrog"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"Halpfrog":1}},{"path":"src/main/java/seedu/address/logic/commands/PreviousCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Halpfrog"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"Halpfrog"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"Halpfrog"},"content":"public class PreviousCommand extends Command {","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"Halpfrog"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here is your previous command.\";","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"Halpfrog"},"content":"    private final String previousCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"Halpfrog"},"content":"    public PreviousCommand(String previousCommand) {","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"Halpfrog"},"content":"        this.previousCommand \u003d previousCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"Halpfrog"},"content":"    public String getMessageForUi() {","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"Halpfrog"},"content":"        return String.format(\"%s|%s\", previousCommand, MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"Halpfrog"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"Halpfrog"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"Halpfrog"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"Halpfrog"},"content":"        return new CommandResult(getMessageForUi(), false, false, true);","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"Halpfrog"},"content":"}","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"Halpfrog":28}},{"path":"src/main/java/seedu/address/logic/commands/ReturnAllBooksCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_BOOKS;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":" * Returns all books borrowed by a patron identified using its displayed index from LibTask.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"public class ReturnAllBooksCommand extends ReturnCommand {","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Returned all books borrowed by: %1$s\\n\";","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    private final Index patronIndex;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"     * Creates an ReturnAllBookCommand to return all books borrowed by the specified {@code Patron}","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    public ReturnAllBooksCommand(Index patronIndex) {","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        this.patronIndex \u003d patronIndex;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        List\u003cPatron\u003e lastShownList \u003d model.getFilteredPatronList();","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        if (patronIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATRON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        Patron borrower \u003d lastShownList.get(patronIndex.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        if (!model.isBorrowingSomeBook(borrower)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_NO_BOOKS_BORROWED, borrower.getName()));","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        List\u003cBook\u003e returnedBooks \u003d model.returnAllBorrowedBooks(borrower);","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        String notification \u003d model.deleteAllRequests(returnedBooks.toArray(Book[]::new));","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        model.updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, borrower.getName()) + notification);","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"                || (other instanceof ReturnAllBooksCommand // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 patronIndex.equals(((ReturnAllBooksCommand) other).patronIndex)); // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"bingsen0806":56}},{"path":"src/main/java/seedu/address/logic/commands/ReturnCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BOOK;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATRON;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"public abstract class ReturnCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_USAGE \u003d RETURN_COMMAND_WORD","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"            + \": Returns all books borrowed by a patron identified by the index number in the displayed patron list,\"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"            + \" or return a specific book identified by the index number in the displayed book list.\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"            + \"PREFIX \\\"\" + PREFIX_PATRON + \"\\\" (return all books by patron) or \\\"\"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"            + PREFIX_BOOK + \"\\\" (return a specific book) \"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"            + \"INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"            + \"Example: \" + RETURN_COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"            + PREFIX_PATRON + \"1\";","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"bingsen0806":18}},{"path":"src/main/java/seedu/address/logic/commands/ReturnOneBookCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_BOOKS;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookStatus;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":" * Returns a book identified using its displayed index from LibTask.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"public class ReturnOneBookCommand extends ReturnCommand {","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Returned book: %1$s\\n\";","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    private final Index bookIndex;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"     * Creates an ReturnOneBookCommand to return the specified {@code Book}","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    public ReturnOneBookCommand(Index bookIndex) {","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        this.bookIndex \u003d bookIndex;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        List\u003cBook\u003e lastShownList \u003d model.getFilteredBookList();","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        if (bookIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        Book bookToReturn \u003d lastShownList.get(bookIndex.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        if (!bookToReturn.isBorrowed()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_BOOK_NOT_BORROWED, bookToReturn.getBookName()));","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        Book updatedAvailableBook \u003d new Book(bookToReturn, BookStatus.createAvailableBookStatus());","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        model.setBook(bookToReturn, updatedAvailableBook);","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        String notification \u003d model.deleteAllRequests(bookToReturn);","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        model.updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, bookToReturn.getBookName()) + notification);","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"                || (other instanceof ReturnOneBookCommand // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 bookIndex.equals(((ReturnOneBookCommand) other).bookIndex)); // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"bingsen0806":58}},{"path":"src/main/java/seedu/address/logic/commands/book/AddBookCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AUTHOR;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ISBN;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":" * Adds a book to LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"public class AddBookCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_USAGE \u003d BOOK_COMMAND_GROUP + \" \" + ADD_COMMAND_WORD","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"            + \": Adds a book to LibTask. \"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"            + PREFIX_ISBN + \"ISBN \"","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"            + \"[\" + PREFIX_AUTHOR + \"AUTHOR]...\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"            + \"Example: \" + BOOK_COMMAND_GROUP + \" \" + ADD_COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"            + PREFIX_NAME + \"Harry Potter \"","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"            + PREFIX_ISBN + \"978-71617-018-8-5 \"","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"            + PREFIX_AUTHOR + \"J. K. Rowling \"","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"            + PREFIX_TAG + \"Adventure \"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"            + PREFIX_TAG + \"Magic\";","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New book added: %1$s.\\n\";","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    private final Book toAdd;","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"     * Creates an AddBookCommand to add the specified {@code Book}","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    public AddBookCommand(Book book) {","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(book);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        toAdd \u003d book;","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        if (model.hasSameIsbnDiffAuthorsOrName(toAdd)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_SAME_ISBN_INCONSISTENT, toAdd.getIsbn()));","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        // Remove all requests for this isbn and notify all requesters who requested for a book with toAdd\u0027s isbn","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        String notification \u003d model.deleteAllRequests(toAdd);","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        model.addBook(toAdd);","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd) + notification);","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"            return true;","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        if (!(other instanceof AddBookCommand)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"            return false;","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        Book otherToAdd \u003d ((AddBookCommand) other).toAdd;","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        // Compare without timeAdded attribute of Book","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        return otherToAdd.getBookName().equals(toAdd.getBookName())","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 otherToAdd.getIsbn().equals(toAdd.getIsbn())","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 otherToAdd.getTags().equals(toAdd.getTags())","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 otherToAdd.getAuthors().equals(toAdd.getAuthors());","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":74}},{"path":"src/main/java/seedu/address/logic/commands/book/DeleteBookCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":" * Deletes a book identified using its displayed index from LibTask.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"public class DeleteBookCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_USAGE \u003d BOOK_COMMAND_GROUP + \" \" + DELETE_COMMAND_WORD","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"            + \": Deletes the book identified by the index number used in the displayed book list.\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"            + \"Example: \" + BOOK_COMMAND_GROUP + \" \" + DELETE_COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_DELETE_BOOK_SUCCESS \u003d \"Deleted Book: %1$s\";","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_DELETE_BORROWED_BOOK \u003d \"You cannot delete a book that is borrowed!\";","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"     * Creates an DeleteBookCommand to delete the specified {@code Book}","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    public DeleteBookCommand(Index targetIndex) {","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        List\u003cBook\u003e lastShownList \u003d model.getFilteredBookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        Book bookToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        if (bookToDelete.isBorrowed()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"            throw new CommandException(MESSAGE_DELETE_BORROWED_BOOK);","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        model.deleteBook(bookToDelete);","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_BOOK_SUCCESS, bookToDelete));","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"                || (other instanceof DeleteBookCommand // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteBookCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":61}},{"path":"src/main/java/seedu/address/logic/commands/book/EditBookCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AUTHOR;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ISBN;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_BOOKS;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":" * Edits the details of an existing book in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":"public class EditBookCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"    public static final String MESSAGE_USAGE \u003d BOOK_COMMAND_GROUP + \" \" + EDIT_COMMAND_WORD","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"            + \": Edits the details of the book at a specified index \"","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"            + \"by the index number used in the displayed book list. \"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"yuqitanyq"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"yuqitanyq"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"yuqitanyq"},"content":"            + \"[\" + PREFIX_ISBN + \"ISBN] \"","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"yuqitanyq"},"content":"            + \"[\" + PREFIX_AUTHOR + \"AUTHOR] \"","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"yuqitanyq"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"yuqitanyq"},"content":"            + \"Example: \" + BOOK_COMMAND_GROUP + \" \" + EDIT_COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"yuqitanyq"},"content":"            + PREFIX_NAME + \"Harry Potter \"","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"yuqitanyq"},"content":"            + PREFIX_ISBN + \"978-71617-018-8-5 \"","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"yuqitanyq"},"content":"            + PREFIX_AUTHOR + \"J. K. Rowling \"","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"yuqitanyq"},"content":"            + PREFIX_TAG + \"Magic\";","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_EDIT_BOOK_SUCCESS \u003d \"Edited Book: %1$s\\n\";","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"yuqitanyq"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least ISBN, author or category must be provided.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_OTHER_BOOKS_EDITED \u003d \"Some other books with the same isbn are also edited.\\n\";","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_SAME_ISBN \u003d \"You cannot change a book\u0027s isbn into another existing isbn!\";","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"yuqitanyq"},"content":"    private final Index index;","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"yuqitanyq"},"content":"    private final EditBookDescriptor editBookDescriptor;","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"yuqitanyq"},"content":"     * @param index of the book in the filtered book list to edit","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"yuqitanyq"},"content":"     * @param editBookDescriptor details to edit the book with","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"yuqitanyq"},"content":"    public EditBookCommand(Index index, EditBookDescriptor editBookDescriptor) {","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"yuqitanyq"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"yuqitanyq"},"content":"        requireNonNull(editBookDescriptor);","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"yuqitanyq"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"yuqitanyq"},"content":"        this.editBookDescriptor \u003d new EditBookDescriptor(editBookDescriptor);","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"yuqitanyq"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"yuqitanyq"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"yuqitanyq"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"yuqitanyq"},"content":"        ObservableList\u003cBook\u003e lastShownList \u003d model.getFilteredBookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"yuqitanyq"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"yuqitanyq"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"yuqitanyq"},"content":"        Book bookToEdit \u003d lastShownList.get(index.getZeroBased()); //change to bookList","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"yuqitanyq"},"content":"        Book editedBook \u003d createEditedBook(bookToEdit, editBookDescriptor);","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        // Do not allow editing isbn of this book if some other books already has the new isbn","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"        if (!editedBook.hasSameIsbn(bookToEdit) \u0026\u0026 model.hasSameIsbn(editedBook)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"            throw new CommandException(MESSAGE_SAME_ISBN);","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        boolean hasSomeOtherBooksEdited \u003d model.setAndEditBook(bookToEdit, editedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"        String additionalInfo \u003d hasSomeOtherBooksEdited ? MESSAGE_OTHER_BOOKS_EDITED : \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"yuqitanyq"},"content":"        model.updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_BOOK_SUCCESS, editedBook) + additionalInfo);","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"yuqitanyq"},"content":"     * Creates and returns a {@code Book} with the details of {@code bookToEdit}","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"yuqitanyq"},"content":"     * edited with {@code editBookDescriptor}.","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"yuqitanyq"},"content":"    private static Book createEditedBook(Book bookToEdit, EditBookDescriptor editBookDescriptor) {","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"yuqitanyq"},"content":"        assert bookToEdit !\u003d null;","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"yuqitanyq"},"content":"        BookName updatedName \u003d editBookDescriptor.getBookName().orElse(bookToEdit.getBookName());","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"yuqitanyq"},"content":"        Isbn updatedIsbn \u003d editBookDescriptor.getIsbn().orElse(bookToEdit.getIsbn());","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"yuqitanyq"},"content":"        List\u003cAuthor\u003e updatedAuthor \u003d editBookDescriptor.getAuthors().orElse(bookToEdit.getAuthors());","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"yuqitanyq"},"content":"        Set\u003cTag\u003e updatedTags \u003d editBookDescriptor.getTags().orElse(bookToEdit.getTags());","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"yuqitanyq"},"content":"        long updatedTimeAdded \u003d bookToEdit.getTimeAdded();","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"        BookStatus bookStatus \u003d bookToEdit.getBookStatus();","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"        Set\u003cPatron\u003e requesters \u003d bookToEdit.getRequesters();","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"        return new Book(updatedName, updatedIsbn, updatedAuthor, updatedTags, updatedTimeAdded, bookStatus, requesters);","lastModifiedDate":"2022-03-21"},{"lineNumber":112,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"yuqitanyq"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"yuqitanyq"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"yuqitanyq"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"yuqitanyq"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"yuqitanyq"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"yuqitanyq"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"yuqitanyq"},"content":"        if (!(other instanceof EditBookCommand)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"yuqitanyq"},"content":"            return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"yuqitanyq"},"content":"        // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand e \u003d (EditBookCommand) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"yuqitanyq"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"yuqitanyq"},"content":"                \u0026\u0026 editBookDescriptor.equals(e.editBookDescriptor);","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"yuqitanyq"},"content":"     * Stores the details to edit the book with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"yuqitanyq"},"content":"     * corresponding field value of the book.","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"yuqitanyq"},"content":"    public static class EditBookDescriptor {","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"yuqitanyq"},"content":"        private BookName bookName;","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"yuqitanyq"},"content":"        private Isbn isbn;","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"yuqitanyq"},"content":"        private List\u003cAuthor\u003e authors;","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"yuqitanyq"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"yuqitanyq"},"content":"        public EditBookDescriptor() {","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"yuqitanyq"},"content":"        /**","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"yuqitanyq"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"yuqitanyq"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"yuqitanyq"},"content":"         */","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"yuqitanyq"},"content":"        public EditBookDescriptor(EditBookDescriptor toCopy) {","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"yuqitanyq"},"content":"            setBookName(toCopy.bookName);","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"yuqitanyq"},"content":"            setIsbn(toCopy.isbn);","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"yuqitanyq"},"content":"            setAuthors(toCopy.authors);","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"yuqitanyq"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"yuqitanyq"},"content":"        /**","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"yuqitanyq"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"yuqitanyq"},"content":"         */","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"yuqitanyq"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"yuqitanyq"},"content":"            return CollectionUtil.isAnyNonNull(bookName, isbn, authors, tags);","lastModifiedDate":"2022-03-10"},{"lineNumber":161,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":162,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"yuqitanyq"},"content":"        public void setBookName(BookName bookname) {","lastModifiedDate":"2022-03-10"},{"lineNumber":164,"author":{"gitId":"yuqitanyq"},"content":"            this.bookName \u003d bookname;","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":166,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"yuqitanyq"},"content":"        public Optional\u003cBookName\u003e getBookName() {","lastModifiedDate":"2022-03-10"},{"lineNumber":168,"author":{"gitId":"yuqitanyq"},"content":"            return Optional.ofNullable(bookName);","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"yuqitanyq"},"content":"        public void setIsbn(Isbn isbn) {","lastModifiedDate":"2022-03-10"},{"lineNumber":172,"author":{"gitId":"yuqitanyq"},"content":"            this.isbn \u003d isbn;","lastModifiedDate":"2022-03-10"},{"lineNumber":173,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":174,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":175,"author":{"gitId":"yuqitanyq"},"content":"        public Optional\u003cIsbn\u003e getIsbn() {","lastModifiedDate":"2022-03-10"},{"lineNumber":176,"author":{"gitId":"yuqitanyq"},"content":"            return Optional.ofNullable(isbn);","lastModifiedDate":"2022-03-10"},{"lineNumber":177,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":178,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":179,"author":{"gitId":"yuqitanyq"},"content":"        public void setAuthors(List\u003cAuthor\u003e authors) {","lastModifiedDate":"2022-03-10"},{"lineNumber":180,"author":{"gitId":"yuqitanyq"},"content":"            this.authors \u003d authors;","lastModifiedDate":"2022-03-10"},{"lineNumber":181,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":182,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":183,"author":{"gitId":"yuqitanyq"},"content":"        public Optional\u003cList\u003cAuthor\u003e\u003e getAuthors() {","lastModifiedDate":"2022-03-10"},{"lineNumber":184,"author":{"gitId":"yuqitanyq"},"content":"            return Optional.ofNullable(authors);","lastModifiedDate":"2022-03-10"},{"lineNumber":185,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":186,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":187,"author":{"gitId":"yuqitanyq"},"content":"        /**","lastModifiedDate":"2022-03-10"},{"lineNumber":188,"author":{"gitId":"yuqitanyq"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-03-10"},{"lineNumber":189,"author":{"gitId":"yuqitanyq"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-10"},{"lineNumber":190,"author":{"gitId":"yuqitanyq"},"content":"         */","lastModifiedDate":"2022-03-10"},{"lineNumber":191,"author":{"gitId":"yuqitanyq"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-10"},{"lineNumber":192,"author":{"gitId":"yuqitanyq"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-03-10"},{"lineNumber":193,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":194,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":195,"author":{"gitId":"yuqitanyq"},"content":"        /**","lastModifiedDate":"2022-03-10"},{"lineNumber":196,"author":{"gitId":"yuqitanyq"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-10"},{"lineNumber":197,"author":{"gitId":"yuqitanyq"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-03-10"},{"lineNumber":198,"author":{"gitId":"yuqitanyq"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-03-10"},{"lineNumber":199,"author":{"gitId":"yuqitanyq"},"content":"         */","lastModifiedDate":"2022-03-10"},{"lineNumber":200,"author":{"gitId":"yuqitanyq"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-03-10"},{"lineNumber":201,"author":{"gitId":"yuqitanyq"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-03-10"},{"lineNumber":202,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":203,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":204,"author":{"gitId":"yuqitanyq"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":205,"author":{"gitId":"yuqitanyq"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":206,"author":{"gitId":"yuqitanyq"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":207,"author":{"gitId":"yuqitanyq"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":208,"author":{"gitId":"yuqitanyq"},"content":"                return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":209,"author":{"gitId":"yuqitanyq"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":210,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":211,"author":{"gitId":"yuqitanyq"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":212,"author":{"gitId":"yuqitanyq"},"content":"            if (!(other instanceof EditBookDescriptor)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":213,"author":{"gitId":"yuqitanyq"},"content":"                return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":214,"author":{"gitId":"yuqitanyq"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":215,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":216,"author":{"gitId":"yuqitanyq"},"content":"            // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":217,"author":{"gitId":"yuqitanyq"},"content":"            EditBookDescriptor e \u003d (EditBookDescriptor) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":218,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":219,"author":{"gitId":"yuqitanyq"},"content":"            return getBookName().equals(e.getBookName())","lastModifiedDate":"2022-03-10"},{"lineNumber":220,"author":{"gitId":"yuqitanyq"},"content":"                    \u0026\u0026 getIsbn().equals(e.getIsbn())","lastModifiedDate":"2022-03-10"},{"lineNumber":221,"author":{"gitId":"yuqitanyq"},"content":"                    \u0026\u0026 getAuthors().equals(e.getAuthors())","lastModifiedDate":"2022-03-10"},{"lineNumber":222,"author":{"gitId":"yuqitanyq"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2022-03-10"},{"lineNumber":223,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":224,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":225,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"yuqitanyq":207,"bingsen0806":18}},{"path":"src/main/java/seedu/address/logic/commands/book/FindBookCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Halpfrog"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"Halpfrog"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"Halpfrog"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AUTHOR;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"Halpfrog"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"Halpfrog"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"Halpfrog"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"Halpfrog"},"content":"public class FindBookCommand extends Command {","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"Halpfrog"},"content":"    public static final String MESSAGE_USAGE \u003d BOOK_COMMAND_GROUP + \" \" + FIND_COMMAND_WORD","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"Halpfrog"},"content":"            + \": Find a book based on the author, tag or book title \"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"Halpfrog"},"content":"            + \"Parameters:\"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"Halpfrog"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] or \"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"Halpfrog"},"content":"            + \"[\" + PREFIX_AUTHOR + \"AUTHOR] or \"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"Halpfrog"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"Halpfrog"},"content":"            + \"A prefix can only be used once\"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"Halpfrog"},"content":"            + \"Example: \" + BOOK_COMMAND_GROUP + \" \" + FIND_COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"Halpfrog"},"content":"            + PREFIX_NAME + \"Harry Potter\";","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"Halpfrog"},"content":"    private final Predicate\u003cBook\u003e predicate;","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"Halpfrog"},"content":"    public FindBookCommand(Predicate\u003cBook\u003e predicate) {","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"Halpfrog"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"Halpfrog"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"Halpfrog"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"Halpfrog"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"Halpfrog"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"Halpfrog"},"content":"        model.updateFilteredBookList(predicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"Halpfrog"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_BOOKS_LISTED_OVERVIEW,","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"Halpfrog"},"content":"                model.getFilteredBookList().size()));","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"Halpfrog"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"Halpfrog":45}},{"path":"src/main/java/seedu/address/logic/commands/book/ListBookCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_BOOKS;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":" * Lists all books in LibTask to the user","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"public class ListBookCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all books\";","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"        model.updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"yuqitanyq":21,"bingsen0806":1}},{"path":"src/main/java/seedu/address/logic/commands/book/RelatedBookCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import java.util.List;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.book.BookRelatedToPatronPredicate;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":" * Lists all books related to an existing patron in libTask.","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"public class RelatedBookCommand extends Command {","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"    public static final String MESSAGE_USAGE \u003d BOOK_COMMAND_GROUP + \" \" + RELATED_COMMAND_WORD","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"            + \": Lists all the books related to the patron at a specified index \"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"            + \"by the index number used in the displayed patron list. \\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"            + \"Example: \" + BOOK_COMMAND_GROUP + \" \" + RELATED_COMMAND_WORD + \" 1 \";","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"    public static final String MESSAGE_RELATED_BOOK_SUCCESS \u003d \"Listed all books related to patron %1$s\";","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"    private final Index patronIndex;","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"     * @param index of patron in the filtered patron list to list all its related books","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"    public RelatedBookCommand(Index index) {","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"        this.patronIndex \u003d index;","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"        List\u003cPatron\u003e lastShownPatronList \u003d model.getFilteredPatronList();","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"        if (patronIndex.getZeroBased() \u003e\u003d lastShownPatronList.size()) {","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATRON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"        Patron patronToRelate \u003d lastShownPatronList.get(patronIndex.getZeroBased());","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"        model.updateFilteredBookList(new BookRelatedToPatronPredicate(patronToRelate));","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"        return new CommandResult(String.format(MESSAGE_RELATED_BOOK_SUCCESS, patronToRelate));","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"            || (other instanceof RelatedBookCommand) // instanceof handles null","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"            \u0026\u0026 patronIndex.equals(((RelatedBookCommand) other).patronIndex);","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"yl-ang":59}},{"path":"src/main/java/seedu/address/logic/commands/book/RequestBookCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_BOOKS;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":" * Requests for a book by a patron, both identified using their displayed index from LibTask.","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"public class RequestBookCommand extends Command {","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_USAGE \u003d REQUEST_COMMAND_WORD","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"            + \": Establishes a request relationship between the patron identified by the index number \"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"            + \" in the displayed patron list and the book identified the index number in the displayed book list.\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"            + \"Parameters: PATRON_INDEX BOOK_INDEX (both must be positive integers)\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"            + \"Example: \" + BOOK_COMMAND_GROUP + \" \" + REQUEST_COMMAND_WORD + \" 1 1\";","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_REQUEST_BOOK_SUCCESS \u003d \"Patron %1$s requested for all books with isbn %2$s\";","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_ALREADY_REQUESTED \u003d \"Patron %1$s already requested for %2$s\";","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_MAX_REQUEST \u003d \"%1$s already has a maximum of 3 requesters!\";","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_HAS_AVAILABLE \u003d \"There is at least one copy of %1$s that is available.\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"            + \"There is no need to request to be notified about this book\u0027s availability.\";","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_IS_BORROWING \u003d \"Patron %1$s already borrowing a copy of the same book!\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"            + \"There is no need to for the patron to request for a book he/she has already borrowed.\";","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    private static final int MAX_REQUESTS_PER_BOOK \u003d 3;","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    private final Index patronIndex;","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    private final Index bookIndex;","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"     * Creates an RequestBookCommand to establish a request relationship between the","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"     * specified {@code Patron} and the specified {@code Book}","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"     * @param patronIndex The index of the requester patron in the visible patron list.","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"     * @param bookIndex The index of the requester book in the visible book list.","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    public RequestBookCommand(Index patronIndex, Index bookIndex) {","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        this.patronIndex \u003d patronIndex;","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        this.bookIndex \u003d bookIndex;","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        List\u003cPatron\u003e lastShownPatronList \u003d model.getFilteredPatronList();","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        if (patronIndex.getZeroBased() \u003e\u003d lastShownPatronList.size()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATRON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        List\u003cBook\u003e lastShownBookList \u003d model.getFilteredBookList();","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        if (bookIndex.getZeroBased() \u003e\u003d lastShownBookList.size()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        Patron requester \u003d lastShownPatronList.get(patronIndex.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        Book bookToRequest \u003d lastShownBookList.get(bookIndex.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        if (bookToRequest.isRequestedBy(requester)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"                    MESSAGE_ALREADY_REQUESTED, requester.getName(), bookToRequest.getBookName()));","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        if (model.isBorrowing(requester, bookToRequest)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"            throw new CommandException(String.format(MESSAGE_IS_BORROWING, requester.getName()));","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        if (model.hasAvailableCopy(bookToRequest)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"            // Not sure if it will result in better UX if book list is reset to show all books","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"            throw new CommandException(String.format(MESSAGE_HAS_AVAILABLE, bookToRequest.getBookName()));","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        if (bookToRequest.getRequesters().size() \u003e\u003d MAX_REQUESTS_PER_BOOK) {","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"            throw new CommandException(String.format(MESSAGE_MAX_REQUEST, bookToRequest.getBookName()));","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"        model.addRequest(bookToRequest, requester);","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"        model.updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"        return new CommandResult(String.format(MESSAGE_REQUEST_BOOK_SUCCESS, requester.getName(),","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"                bookToRequest.getBookName()));","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"                || (other instanceof RequestBookCommand // instanceof handles nulls","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 patronIndex.equals(((RequestBookCommand) other).patronIndex)","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 bookIndex.equals(((RequestBookCommand) other).bookIndex)); // state check","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"bingsen0806":93}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":17,"bingsen0806":2}},{"path":"src/main/java/seedu/address/logic/commands/patron/AddPatronCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.commands.patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":" * Adds a patron to LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"public class AddPatronCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_USAGE \u003d PATRON_COMMAND_GROUP + \" \" + ADD_COMMAND_WORD","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"            + \": Adds a patron to LibTask. \"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"            + PREFIX_ID + \"ID \"","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"            + \"Example: \" + PATRON_COMMAND_GROUP + \" \" + ADD_COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"            + PREFIX_ID + \"A1234567X \"","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney \";","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New patron added: %1$s\";","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_DUPLICATE_PATRON \u003d \"This patron already exists in LibTask\";","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"    private final Patron toAdd;","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"     * Creates an AddPatronCommand to add the specified {@code Patron}","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"    public AddPatronCommand(Patron patron) {","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"        requireNonNull(patron);","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"        toAdd \u003d patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"        if (model.hasPatron(toAdd)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PATRON);","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"        model.addPatron(toAdd);","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"                || (other instanceof AddPatronCommand // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"                \u0026\u0026 toAdd.equals(((AddPatronCommand) other).toAdd));","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aditi2313":21,"-":44,"bingsen0806":3}},{"path":"src/main/java/seedu/address/logic/commands/patron/DeletePatronCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.commands.patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":" * Deletes a patron identified using it\u0027s displayed index from LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"public class DeletePatronCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_USAGE \u003d PATRON_COMMAND_GROUP + \" \" + DELETE_COMMAND_WORD","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"            + \": Deletes the patron identified by the index number used in the displayed patron list.\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"            + \"Example: \" + PATRON_COMMAND_GROUP + \" \" + DELETE_COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_DELETE_PATRON_SUCCESS \u003d \"Deleted Patron: %1$s\\n\";","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_HAS_BORROWED_BOOKS \u003d \"You cannot delete a patron that has unreturned books!\";","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"    public DeletePatronCommand(Index targetIndex) {","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        List\u003cPatron\u003e lastShownList \u003d model.getFilteredPatronList();","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATRON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"        Patron deletePatron \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        if (model.isBorrowingSomeBook(deletePatron)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"            throw new CommandException(MESSAGE_HAS_BORROWED_BOOKS);","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"        model.deletePatron(deletePatron);","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        String notification \u003d model.updateBookAfterPatronDelete(deletePatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        if (!notification.isEmpty()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"            model.updateFilteredBookList(Model.PREDICATE_SHOW_ALL_BOOKS);","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PATRON_SUCCESS, deletePatron) + notification);","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"                || (other instanceof DeletePatronCommand // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"                \u0026\u0026 targetIndex.equals(((DeletePatronCommand) other).targetIndex));","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aditi2313":15,"-":35,"bingsen0806":11}},{"path":"src/main/java/seedu/address/logic/commands/patron/EditPatronCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.commands.patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATRONS;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Email;","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Id;","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Name;","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Phone;","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":" * Edits the details of an existing patron in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"public class EditPatronCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_USAGE \u003d PATRON_COMMAND_GROUP + \" \" + EDIT_COMMAND_WORD","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"            + \": Edits the details of the patron identified \"","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"            + \"by the index number used in the displayed patron list. \"","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"            + \"[\" + PREFIX_ID + \"ID] \"","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"            + \"Example: \" + PATRON_COMMAND_GROUP + \" \" + EDIT_COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com \";","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_EDIT_PATRON_SUCCESS \u003d \"Edited Patron: %1$s\\n\";","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_DUPLICATE_PATRON \u003d \"This patron already exists in LibTask.\";","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"    private final EditPatronDescriptor editPatronDescriptor;","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"     * @param index of the patron in the filtered patron list to edit","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"     * @param editPatronDescriptor details to edit the patron with","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"    public EditPatronCommand(Index index, EditPatronDescriptor editPatronDescriptor) {","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"        requireNonNull(editPatronDescriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"        this.editPatronDescriptor \u003d new EditPatronDescriptor(editPatronDescriptor);","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"        List\u003cPatron\u003e lastShownList \u003d model.getFilteredPatronList();","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATRON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"        Patron patronToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"aditi2313"},"content":"        Patron editedPatron \u003d createEditedPatron(patronToEdit, editPatronDescriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"aditi2313"},"content":"        if (model.hasEditedPatron(patronToEdit, editedPatron)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PATRON);","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"aditi2313"},"content":"        model.setPatron(patronToEdit, editedPatron);","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"        model.updateFilteredPatronList(PREDICATE_SHOW_ALL_PATRONS);","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        String notification \u003d model.updateBookAfterPatronEdit(patronToEdit, editedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        if (!notification.isEmpty()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"            model.updateFilteredBookList(Model.PREDICATE_SHOW_ALL_BOOKS);","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PATRON_SUCCESS, editedPatron) + notification);","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"aditi2313"},"content":"     * Creates and returns a {@code Patron} with the details of {@code patronToEdit}","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"aditi2313"},"content":"     * edited with {@code editPatronDescriptor}.","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"aditi2313"},"content":"    private static Patron createEditedPatron(Patron patronToEdit, EditPatronDescriptor editPatronDescriptor) {","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"aditi2313"},"content":"        assert patronToEdit !\u003d null;","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"aditi2313"},"content":"        Name updatedName \u003d editPatronDescriptor.getName().orElse(patronToEdit.getName());","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"aditi2313"},"content":"        Phone updatedPhone \u003d editPatronDescriptor.getPhone().orElse(patronToEdit.getPhone());","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"aditi2313"},"content":"        Email updatedEmail \u003d editPatronDescriptor.getEmail().orElse(patronToEdit.getEmail());","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"aditi2313"},"content":"        Id updatedId \u003d editPatronDescriptor.getId().orElse(patronToEdit.getId());","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPatronDescriptor.getTags().orElse(patronToEdit.getTags());","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"aditi2313"},"content":"        return new Patron(updatedName, updatedPhone, updatedEmail, updatedId, updatedTags);","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"aditi2313"},"content":"        if (!(other instanceof EditPatronCommand)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand e \u003d (EditPatronCommand) other;","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"aditi2313"},"content":"                \u0026\u0026 editPatronDescriptor.equals(e.editPatronDescriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"aditi2313"},"content":"     * Stores the details to edit the patron with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-12"},{"lineNumber":131,"author":{"gitId":"aditi2313"},"content":"     * corresponding field value of the patron.","lastModifiedDate":"2022-03-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"aditi2313"},"content":"    public static class EditPatronDescriptor {","lastModifiedDate":"2022-03-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"aditi2313"},"content":"        private Id id;","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"aditi2313"},"content":"        public EditPatronDescriptor() {}","lastModifiedDate":"2022-03-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"aditi2313"},"content":"        public EditPatronDescriptor(EditPatronDescriptor toCopy) {","lastModifiedDate":"2022-03-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"aditi2313"},"content":"            setId(toCopy.id);","lastModifiedDate":"2022-03-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"aditi2313"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, id, tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"aditi2313"},"content":"        public void setId(Id id) {","lastModifiedDate":"2022-03-09"},{"lineNumber":186,"author":{"gitId":"aditi2313"},"content":"            this.id \u003d id;","lastModifiedDate":"2022-03-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"aditi2313"},"content":"        public Optional\u003cId\u003e getId() {","lastModifiedDate":"2022-03-09"},{"lineNumber":190,"author":{"gitId":"aditi2313"},"content":"            return Optional.ofNullable(id);","lastModifiedDate":"2022-03-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"aditi2313"},"content":"            if (!(other instanceof EditPatronDescriptor)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"aditi2313"},"content":"            EditPatronDescriptor e \u003d (EditPatronDescriptor) other;","lastModifiedDate":"2022-03-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"aditi2313"},"content":"                    \u0026\u0026 getId().equals(e.getId())","lastModifiedDate":"2022-03-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"aditi2313":58,"-":165,"bingsen0806":9}},{"path":"src/main/java/seedu/address/logic/commands/patron/FindPatronCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.commands.patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":" * Finds and lists all patrons in LibTask whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"public class FindPatronCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_USAGE \u003d PATRON_COMMAND_GROUP + \" \" + FIND_COMMAND_WORD","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"            + \": Finds all patrons whose names contain any of \"","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"            + \"Example: \" + PATRON_COMMAND_GROUP + \" \" + FIND_COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    public FindPatronCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"        model.updateFilteredPatronList(predicate);","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"                String.format(Messages.MESSAGE_PATRONS_LISTED_OVERVIEW, model.getFilteredPatronList().size()));","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"                || (other instanceof FindPatronCommand // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"                \u0026\u0026 predicate.equals(((FindPatronCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"aditi2313":13,"-":29,"bingsen0806":1}},{"path":"src/main/java/seedu/address/logic/commands/patron/ListPatronCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.commands.patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATRONS;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":" * Lists all patrons in LibTask to the user.","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"public class ListPatronCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all patrons\";","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"        model.updateFilteredPatronList(PREDICATE_SHOW_ALL_PATRONS);","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aditi2313":7,"-":16,"bingsen0806":1}},{"path":"src/main/java/seedu/address/logic/commands/patron/OverduePatronCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.commands.patron;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":" * Lists all patrons in LibTask that has overdue books to the user.","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"public class OverduePatronCommand extends Command {","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all patrons with overdue books\";","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"        model.updateFilteredPatronList(model::hasOverdueBooks);","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"aditi2313":21,"bingsen0806":2}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if and only if the prefix queried has exactly one value.","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasExactlyOneValue(Prefix queryPrefix) {","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        return getAllValues(queryPrefix).size() \u003d\u003d 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if and only if exactly one prefix has non-empty value among all queried prefixes.","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasExactlyOneQueriedPrefix(Prefix... queryPrefixes) {","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        return getNonEmptyPrefixes(queryPrefixes).size() \u003d\u003d 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"     * Returns a list of prefixes that have values, among all the queried prefixes.","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"     * @param prefixes The list of prefixes to query","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"    public List\u003cPrefix\u003e getNonEmptyPrefixes(Prefix... prefixes) {","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        return Stream.of(prefixes).filter(prefix -\u003e getValue(prefix).isPresent())","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"-":60,"bingsen0806":26}},{"path":"src/main/java/seedu/address/logic/parser/BorrowCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.book.BookStatus.STATUS_DATE_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.BorrowCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":" * Parses input arguments and creates a new BorrowCommand object","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"public class BorrowCommandParser implements Parser\u003cBorrowCommand\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    private static final String VALIDATION_REGEX \u003d \"^\\\\d+\\\\s+\\\\d+\\\\s+\\\\d{2}-[a-zA-Z]{3}-\\\\d{4}$\";","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"     * Parses the given {@code String} of arguments in the context of the BorrowCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"     * and returns an BorrowCommand object for execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    public BorrowCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"        if (!trimmedArgs.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, BorrowCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"        String[] borrowInfo \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        String returnDate \u003d borrowInfo[2];","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"        // Ensures date can be parsed because regex does not check for all invalid cases.","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        // Check is done here instead of BookStatus class so that invalid date error is not","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        // thrown from BookStatus, therefore hiding BookStatus from end user.","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"            STATUS_DATE_FORMAT.parse(returnDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        } catch (java.text.ParseException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, BorrowCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"            Index patronIndex \u003d ParserUtil.parseIndex(borrowInfo[0]);","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"            Index bookIndex \u003d ParserUtil.parseIndex(borrowInfo[1]);","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"            return new BorrowCommand(patronIndex, bookIndex, returnDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, BorrowCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"bingsen0806":49}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    public static final Prefix PREFIX_ISBN \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    public static final Prefix PREFIX_AUTHOR \u003d new Prefix(\"a/\");","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    public static final Prefix PREFIX_PATRON \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    public static final Prefix PREFIX_BOOK \u003d new Prefix(\"b/\");","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":14,"aditi2313":1,"bingsen0806":4}},{"path":"src/main/java/seedu/address/logic/parser/LibTaskParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.Command.CLEAR_COMMAND_WORD;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.Command.EXIT_COMMAND_WORD;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.Command.HELP_COMMAND_WORD;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"Halpfrog"},"content":"import static seedu.address.logic.commands.Command.PREVIOUS_COMMAND_WORD;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.Command.RETURN_COMMAND_WORD;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"Halpfrog"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.logic.commands.PreviousCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.book.BookCommandParser;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.patron.PatronCommandParser;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"public class LibTaskParser {","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Halpfrog"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"Halpfrog"},"content":"     * Used to store the last n commands for easy reference.","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"Halpfrog"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"Halpfrog"},"content":"    private LinkedList\u003cString\u003e previousCommands \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"Halpfrog"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"Halpfrog"},"content":"     * Shows the last valid comma","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"Halpfrog"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"Halpfrog"},"content":"     * @return A String of the past commands","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"Halpfrog"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"Halpfrog"},"content":"    public String getPreviousCommand() {","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"Halpfrog"},"content":"        if (previousCommands \u003d\u003d null || previousCommands.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"Halpfrog"},"content":"            return \"\";","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"Halpfrog"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"Halpfrog"},"content":"        return previousCommands.poll();","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"Halpfrog"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"Halpfrog"},"content":"     * Keeps track of Commands inputted.","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"Halpfrog"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"Halpfrog"},"content":"    public void storePreviousCommand(String command) {","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"Halpfrog"},"content":"        if (command.trim().equals(PREVIOUS_COMMAND_WORD)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"Halpfrog"},"content":"            return;","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"Halpfrog"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"Halpfrog"},"content":"        previousCommands.push(command);","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"        case Command.PATRON_COMMAND_GROUP:","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"aditi2313"},"content":"            return new PatronCommandParser().parse(arguments);","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        case Command.BOOK_COMMAND_GROUP:","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"            return new BookCommandParser().parse(arguments);","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        case Command.BORROW_COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"            return new BorrowCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        case CLEAR_COMMAND_WORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"            return new ClearCommand();","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"        case EXIT_COMMAND_WORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        case HELP_COMMAND_WORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":98,"author":{"gitId":"Halpfrog"},"content":"        case PREVIOUS_COMMAND_WORD:","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"Halpfrog"},"content":"            return new PreviousCommand(getPreviousCommand());","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"        case RETURN_COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"            return new ReturnCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":50,"bingsen0806":22,"Halpfrog":34,"aditi2313":3}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Email;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Id;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Name;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Phone;","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"     * Parses {@code String oneBasedIndex} into an {@code Index} and returns it.","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"     * Parses a {@code String id} into an {@code Id}.","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"     * @throws ParseException if the given {@code id} is invalid.","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"aditi2313"},"content":"    public static Id parseId(String address) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"        String trimmedId \u003d address.trim();","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"        if (!Id.isValidId(trimmedId)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"aditi2313"},"content":"            throw new ParseException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"        return new Id(trimmedId);","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"     * Parses a {@code String author} into a {@code Author}.","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"     * @throws ParseException if the given {@code author} is invalid.","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"    public static Author parseAuthor(String author) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(author);","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"        String trimmedAuthor \u003d author.trim();","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"        if (!Author.isValidAuthor(trimmedAuthor)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"            throw new ParseException(Author.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"        return new Author(trimmedAuthor);","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"     * Parses {@code Collection\u003cString\u003e authors} into a {@code List\u003cAuthor\u003e}.","lastModifiedDate":"2022-03-11"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"    public static List\u003cAuthor\u003e parseAuthors(Collection\u003cString\u003e authors) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(authors);","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"        final List\u003cAuthor\u003e authorList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"        for (String authorName : authors) {","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"            authorList.add(parseAuthor(authorName));","lastModifiedDate":"2022-03-11"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"        return authorList;","lastModifiedDate":"2022-03-11"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"     * Parses a {@code String bookName} into a {@code BookName}.","lastModifiedDate":"2022-03-11"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"     * @throws ParseException if the given {@code bookName} is invalid.","lastModifiedDate":"2022-03-11"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"    public static BookName parseBookName(String bookName) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(bookName);","lastModifiedDate":"2022-03-11"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"        String trimmedBookName \u003d bookName.trim();","lastModifiedDate":"2022-03-11"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"        if (!BookName.isValidBookName(trimmedBookName)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"            throw new ParseException(BookName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"        return new BookName(trimmedBookName);","lastModifiedDate":"2022-03-11"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":173,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"     * Parses a {@code String isbn} into a {@code Isbn}.","lastModifiedDate":"2022-03-11"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-11"},{"lineNumber":177,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"     * @throws ParseException if the given {@code isbn} is invalid.","lastModifiedDate":"2022-03-11"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"    public static Isbn parseIsbn(String isbn) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":181,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(isbn);","lastModifiedDate":"2022-03-11"},{"lineNumber":182,"author":{"gitId":"bingsen0806"},"content":"        String trimmedIsbn \u003d isbn.trim();","lastModifiedDate":"2022-03-11"},{"lineNumber":183,"author":{"gitId":"bingsen0806"},"content":"        if (!Isbn.isValidIsbn(trimmedIsbn)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":184,"author":{"gitId":"bingsen0806"},"content":"            throw new ParseException(Isbn.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":185,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":186,"author":{"gitId":"bingsen0806"},"content":"        return new Isbn(trimmedIsbn);","lastModifiedDate":"2022-03-11"},{"lineNumber":187,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"},{"lineNumber":189,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"yuqitanyq":5,"-":111,"bingsen0806":62,"aditi2313":11}},{"path":"src/main/java/seedu/address/logic/parser/ReturnCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BOOK;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATRON;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.ReturnAllBooksCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.ReturnCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.ReturnOneBookCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":" * Parses input arguments and creates a new ReturnCommand object","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"public class ReturnCommandParser implements Parser\u003cReturnCommand\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"     * Parses the given {@code String} of arguments in the context of the ReturnCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"     * and returns an ReturnCommand object for execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    public ReturnCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PATRON, PREFIX_BOOK);","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"        if (!isValidPrefixes(argMultimap) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReturnCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"            Index index \u003d getPatronOrBookIndex(argMultimap);","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"            return getSpecificReturnCommand(argMultimap, index);","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReturnCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if and only if the given {@code ArgumentMultimap} has exactly one of patron prefix or book prefix","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"     * with non-empty value, and the prefix with non-empty value has exactly one value.","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    private boolean isValidPrefixes(ArgumentMultimap argMultimap) {","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        boolean hasOnlyOneTypeOfPrefix \u003d argMultimap.hasExactlyOneQueriedPrefix(PREFIX_PATRON, PREFIX_BOOK);","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        // Assume only one type of prefix is present from here onwards","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        boolean hasExactlyOneIndex \u003d argMultimap.hasExactlyOneValue(PREFIX_PATRON)","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"                || argMultimap.hasExactlyOneValue(PREFIX_BOOK);","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        if (!hasOnlyOneTypeOfPrefix || !hasExactlyOneIndex) {","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"    private Index getPatronOrBookIndex(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        if (argMultimap.hasExactlyOneValue(PREFIX_PATRON)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"            return ParserUtil.parseIndex(argMultimap.getValue(PREFIX_PATRON).get());","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        if (argMultimap.hasExactlyOneValue(PREFIX_BOOK)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"            return ParserUtil.parseIndex(argMultimap.getValue(PREFIX_BOOK).get());","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        // The code below should not be reached unless there is no patron or book prefix","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReturnCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"    private ReturnCommand getSpecificReturnCommand(ArgumentMultimap argMultimap, Index index) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        if (argMultimap.hasExactlyOneValue(PREFIX_PATRON)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"            return new ReturnAllBooksCommand(index);","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        if (argMultimap.hasExactlyOneValue(PREFIX_BOOK)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"            return new ReturnOneBookCommand(index);","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        // The code below should not be reached unless there is no patron or book prefix","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReturnCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"bingsen0806":73}},{"path":"src/main/java/seedu/address/logic/parser/book/AddBookCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.parser.book;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AUTHOR;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ISBN;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import java.util.Date;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.book.AddBookCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":" * Parses input arguments and creates a new AddBookCommand object","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"public class AddBookCommandParser implements Parser\u003cAddBookCommand\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"     * Parses the given {@code String} of arguments in the context of the AddBookCommand","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"     * and returns an AddBookCommand object for execution.","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    public AddBookCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ISBN, PREFIX_AUTHOR, PREFIX_TAG);","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ISBN)","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddBookCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        BookName bookName \u003d ParserUtil.parseBookName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        Isbn isbn \u003d ParserUtil.parseIsbn(argMultimap.getValue(PREFIX_ISBN).get());","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        List\u003cAuthor\u003e authorList \u003d ParserUtil.parseAuthors(argMultimap.getAllValues(PREFIX_AUTHOR));","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        BookStatus availableStatus \u003d BookStatus.createAvailableBookStatus();","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        Book book \u003d new Book(bookName, isbn, authorList, tagList, new Date().getTime(), availableStatus,","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"                new HashSet\u003c\u003e());","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        return new AddBookCommand(book);","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":67}},{"path":"src/main/java/seedu/address/logic/parser/book/BookCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.parser.book;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.book.ListBookCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.LibTaskParser;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":" * Parses user input that is already processed by LibTaskParser into a Command object","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":" *","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":" * @see LibTaskParser","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"public class BookCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"     * @param userInput user input string that is alaready processed by {@code LibTaskParser}","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    public Command parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        case Command.ADD_COMMAND_WORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"            return new AddBookCommandParser().parse(arguments);","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        case Command.DELETE_COMMAND_WORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"            return new DeleteBookCommandParser().parse(arguments);","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"yuqitanyq"},"content":"        case Command.EDIT_COMMAND_WORD:","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"yuqitanyq"},"content":"            return new EditBookCommandParser().parse(arguments);","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"yuqitanyq"},"content":"        case Command.LIST_COMMAND_WORD:","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"yuqitanyq"},"content":"            return new ListBookCommand();","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"        case Command.RELATED_COMMAND_WORD:","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"            return new RelatedBookCommandParser().parse(arguments);","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        case Command.REQUEST_COMMAND_WORD:","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"            return new RequestBookCommandParser().parse(arguments);","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"Halpfrog"},"content":"        case Command.FIND_COMMAND_WORD:","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"Halpfrog"},"content":"            return new FindBookParser().parse(arguments);","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"yl-ang":2,"yuqitanyq":5,"bingsen0806":16,"-":46,"Halpfrog":2}},{"path":"src/main/java/seedu/address/logic/parser/book/DeleteBookCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.parser.book;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.book.DeleteBookCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":" * Parses input arguments and creates a new DeleteBookCommand object","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"public class DeleteBookCommandParser implements Parser\u003cDeleteBookCommand\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteBookCommand","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"     * and returns an DeleteBookCommand object for execution.","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    public DeleteBookCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"            return new DeleteBookCommand(index);","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteBookCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":30}},{"path":"src/main/java/seedu/address/logic/parser/book/EditBookCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package seedu.address.logic.parser.book;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AUTHOR;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ISBN;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.book.EditBookCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.book.EditBookCommand.EditBookDescriptor;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":" * Parses input arguments and create a new EditBookCommand object","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"public class EditBookCommandParser implements Parser\u003cEditBookCommand\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"     * Parses the given {@code String} of arguments in the context of the EditBookCommand","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"     * and returns an EditBookCommand object for execution.","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"    public EditBookCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ISBN, PREFIX_AUTHOR, PREFIX_TAG);","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"yuqitanyq"},"content":"        Index index;","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"yuqitanyq"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"yuqitanyq"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"yuqitanyq"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"yuqitanyq"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditBookCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"yuqitanyq"},"content":"        EditBookDescriptor editBookDescriptor \u003d new EditBookDescriptor();","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"yuqitanyq"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"yuqitanyq"},"content":"            editBookDescriptor.setBookName(ParserUtil.parseBookName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"yuqitanyq"},"content":"        if (argMultimap.getValue(PREFIX_ISBN).isPresent()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"yuqitanyq"},"content":"            editBookDescriptor.setIsbn(ParserUtil.parseIsbn(argMultimap.getValue(PREFIX_ISBN).get()));","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"yuqitanyq"},"content":"        parseAuthorsForEdit(argMultimap.getAllValues(PREFIX_AUTHOR)).ifPresent(editBookDescriptor::setAuthors);","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"yuqitanyq"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editBookDescriptor::setTags);","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"yuqitanyq"},"content":"        if (!editBookDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"yuqitanyq"},"content":"            throw new ParseException(EditBookCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"yuqitanyq"},"content":"        return new EditBookCommand(index, editBookDescriptor);","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"yuqitanyq"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"yuqitanyq"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"yuqitanyq"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"yuqitanyq"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"yuqitanyq"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"yuqitanyq"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"yuqitanyq"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"yuqitanyq"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"yuqitanyq"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"yuqitanyq"},"content":"     * Parses {@code Collection\u003cString\u003e authors} into a {@code Optional\u003cList\u003cAuthor\u003e\u003e} if {@code authors} is non-empty.","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"yuqitanyq"},"content":"     * If {@code authors} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"yuqitanyq"},"content":"     * {@code List\u003cAuthor\u003e} containing zero authors.","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"yuqitanyq"},"content":"    private Optional\u003cList\u003cAuthor\u003e\u003e parseAuthorsForEdit(Collection\u003cString\u003e authors) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"yuqitanyq"},"content":"        assert authors !\u003d null;","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"yuqitanyq"},"content":"        if (authors.isEmpty()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"yuqitanyq"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"yuqitanyq"},"content":"        Collection\u003cString\u003e authorList \u003d authors.size() \u003d\u003d 1 \u0026\u0026 authors.contains(\"\") ? Collections.emptyList() : authors;","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"yuqitanyq"},"content":"        return Optional.of(ParserUtil.parseAuthors(authorList));","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"yuqitanyq":99}},{"path":"src/main/java/seedu/address/logic/parser/book/FindBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Halpfrog"},"content":"package seedu.address.logic.parser.book;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"Halpfrog"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"Halpfrog"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AUTHOR;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"Halpfrog"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"Halpfrog"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"Halpfrog"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"Halpfrog"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.logic.commands.book.FindBookCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.model.book.BookAuthorContainsKeywordsPredicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.model.book.BookNameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.model.book.BookTagContainsKeywordsPredicate;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"Halpfrog"},"content":"public class FindBookParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"Halpfrog"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"Halpfrog"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"Halpfrog"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"Halpfrog"},"content":"     * @param args user input string that is already processed by {@code LibTaskParser}","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"Halpfrog"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"Halpfrog"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"Halpfrog"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"Halpfrog"},"content":"    public Command parse(String args) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"Halpfrog"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"Halpfrog"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_AUTHOR, PREFIX_TAG);","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"Halpfrog"},"content":"        if (!argMultimap.hasExactlyOneQueriedPrefix(PREFIX_NAME, PREFIX_AUTHOR, PREFIX_TAG)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"Halpfrog"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindBookCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"Halpfrog"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"Halpfrog"},"content":"        List\u003cPrefix\u003e prefixes \u003d argMultimap.getNonEmptyPrefixes(PREFIX_NAME, PREFIX_AUTHOR, PREFIX_TAG);","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"Halpfrog"},"content":"        Prefix queriedPrefix \u003d prefixes.get(0);","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"Halpfrog"},"content":"        if (!argMultimap.hasExactlyOneValue(queriedPrefix)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"Halpfrog"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindBookCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"Halpfrog"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"Halpfrog"},"content":"        String argument \u003d (argMultimap.getValue(queriedPrefix)).get();","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"Halpfrog"},"content":"        return new FindBookCommand(parsePredicate(queriedPrefix, List.of(argument)));","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"Halpfrog"},"content":"    private static Predicate\u003cBook\u003e parsePredicate(Prefix prefix, List\u003cString\u003e args) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"Halpfrog"},"content":"        if (PREFIX_AUTHOR.equals(prefix)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"Halpfrog"},"content":"            return new BookAuthorContainsKeywordsPredicate(args);","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"Halpfrog"},"content":"        } else if (PREFIX_NAME.equals(prefix)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"Halpfrog"},"content":"            return new BookNameContainsKeywordsPredicate(args);","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"Halpfrog"},"content":"        } else if (PREFIX_TAG.equals(prefix)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"Halpfrog"},"content":"            return new BookTagContainsKeywordsPredicate(args);","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"Halpfrog"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"Halpfrog"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindBookCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"Halpfrog"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"Halpfrog":59}},{"path":"src/main/java/seedu/address/logic/parser/book/RelatedBookCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package seedu.address.logic.parser.book;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"import seedu.address.logic.commands.book.RelatedBookCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":" * Parses input arguments and create a new RelatedBookCommand object","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"public class RelatedBookCommandParser implements Parser\u003cRelatedBookCommand\u003e {","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"     * Parses the given {@code String} of arguments in the context of the RelatedBookCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"     * and returns a RelatedBookCommand object for execution.","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"    public RelatedBookCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"        Index index;","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"        try {","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"            index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"                    RelatedBookCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"        return new RelatedBookCommand(index);","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"yl-ang":6,"yuqitanyq":31}},{"path":"src/main/java/seedu/address/logic/parser/book/RequestBookCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.parser.book;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.book.RequestBookCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":" * Parses input arguments and creates a new RequestBookCommand object","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"public class RequestBookCommandParser implements Parser\u003cRequestBookCommand\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    private static final String VALIDATION_REGEX \u003d \"^\\\\d+\\\\s+\\\\d+$\";","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"     * Parses the given {@code String} of arguments in the context of the RequestBookCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"     * and returns an RequestBookCommand object for execution.","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    public RequestBookCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"        if (!trimmedArgs.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RequestBookCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        String[] requestInfo \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"            Index patronIndex \u003d ParserUtil.parseIndex(requestInfo[0]);","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"            Index bookIndex \u003d ParserUtil.parseIndex(requestInfo[1]);","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"            return new RequestBookCommand(patronIndex, bookIndex);","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RequestBookCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"bingsen0806":38}},{"path":"src/main/java/seedu/address/logic/parser/patron/AddPatronCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.parser.patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.AddPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Email;","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Id;","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Name;","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Phone;","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":" * Parses input arguments and creates a new AddPatronCommand object","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"public class AddPatronCommandParser implements Parser\u003cAddPatronCommand\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"    public AddPatronCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ID, PREFIX_TAG);","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ID, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatronCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"        Id id \u003d ParserUtil.parseId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"        Patron patron \u003d new Patron(name, phone, email, id, tagList);","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"        return new AddPatronCommand(patron);","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"aditi2313":22,"-":43}},{"path":"src/main/java/seedu/address/logic/parser/patron/DeletePatronCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.parser.patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.DeletePatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":" * Parses input arguments and creates a new DeletePatronCommand object","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"public class DeletePatronCommandParser implements Parser\u003cDeletePatronCommand\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    public DeletePatronCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"            return new DeletePatronCommand(index);","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePatronCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"aditi2313":9,"-":22}},{"path":"src/main/java/seedu/address/logic/parser/patron/EditPatronCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.parser.patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand.EditPatronDescriptor;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":" * Parses input arguments and creates a new EditPatronCommand object","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"public class EditPatronCommandParser implements Parser\u003cEditPatronCommand\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"    public EditPatronCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ID, PREFIX_TAG);","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"                    EditPatronCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"        EditPatronDescriptor editPatronDescriptor \u003d new EditPatronCommand.EditPatronDescriptor();","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"            editPatronDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"            editPatronDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"            editPatronDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"        if (argMultimap.getValue(PREFIX_ID).isPresent()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"            editPatronDescriptor.setId(ParserUtil.parseId(argMultimap.getValue(PREFIX_ID).get()));","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPatronDescriptor::setTags);","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"        if (!editPatronDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"            throw new ParseException(EditPatronCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"        return new EditPatronCommand(index, editPatronDescriptor);","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"aditi2313":24,"-":63}},{"path":"src/main/java/seedu/address/logic/parser/patron/FindPatronCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.parser.patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.FindPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":" * Parses input arguments and creates a new FindPatronCommand object","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"public class FindPatronCommandParser implements Parser\u003cFindPatronCommand\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"     * Parses the given {@code String} of arguments in the context of the FindPatronCommand","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"     * and returns a FindPatronCommand object for execution.","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"    public FindPatronCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPatronCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"        return new FindPatronCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"aditi2313":11,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/patron/PatronCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.parser.patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.ListPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.OverduePatronCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.LibTaskParser;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":" * Parses user input that is already processed by LibTaskParser into a Command object","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":" *","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":" * @see LibTaskParser","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"public class PatronCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"     * @param userInput user input string that is alaready processed by {@code LibTaskParser}","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"    public Command parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"        case Command.ADD_COMMAND_WORD:","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"            return new AddPatronCommandParser().parse(arguments);","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"        case Command.EDIT_COMMAND_WORD:","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"            return new EditPatronCommandParser().parse(arguments);","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"        case Command.DELETE_COMMAND_WORD:","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"            return new DeletePatronCommandParser().parse(arguments);","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"        case Command.FIND_COMMAND_WORD:","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"            return new FindPatronCommandParser().parse(arguments);","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"        case Command.OVERDUE_COMMAND_WORD:","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"            return new OverduePatronCommand();","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"        case Command.LIST_COMMAND_WORD:","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"            return new ListPatronCommand();","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"        default:","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aditi2313":65,"bingsen0806":4}},{"path":"src/main/java/seedu/address/model/LibTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookList;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.UniquePatronList;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":" * Wraps all data at the LibTask level","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":" * Duplicates are not allowed (by .isSamePatron comparison)","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"public class LibTask implements ReadOnlyLibTask {","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    private final UniquePatronList patrons;","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    private final BookList books;","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"        patrons \u003d new UniquePatronList();","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        books \u003d new BookList();","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    public LibTask() {}","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"     * Creates an LibTask using the Patrons in the {@code toBeCopied}","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    public LibTask(ReadOnlyLibTask toBeCopied) {","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"     * Replaces the contents of the patron list with {@code patrons}.","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"     * {@code patrons} must not contain duplicate patrons.","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"    public void setPatrons(List\u003cPatron\u003e patrons) {","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"        this.patrons.setPatrons(patrons);","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"     * Replaces the contents of the book list with {@code books}.","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    public void setBooks(List\u003cBook\u003e books) {","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        this.books.setBooks(books);","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"     * Resets the existing data of this {@code LibTask} with {@code newData}.","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"    public void resetData(ReadOnlyLibTask newData) {","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"        setPatrons(newData.getPatronList());","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        setBooks(newData.getBookList());","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"    //// patron-level operations","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if a patron with the same identity as {@code patron} exists in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"    public boolean hasPatron(Patron patron) {","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"aditi2313"},"content":"        requireNonNull(patron);","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"aditi2313"},"content":"        return patrons.contains(patron);","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if a book with the same identity as {@code book} exists in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasBook(Book book) {","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(book);","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        return books.contains(book);","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if there is some book in this LibTask\u0027s book list with the same isbn, but different book name or","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"     * different set of authors as {@code bookToCheck}.","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasSameIsbnDiffAuthorsOrName(Book bookToCheck) {","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(bookToCheck);","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        return books.hasSameIsbnDiffAuthorsOrName(bookToCheck);","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if there is some book in this LibTask\u0027s book list with the same isbn as {@code bookToCheck}.","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasSameIsbn(Book bookToCheck) {","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(bookToCheck);","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"        return books.hasSameIsbn(bookToCheck);","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"     * Removes all book requests from all books in this LibTask\u0027s book list that has the same isbn as any book in","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"     * {@param booksToDelete}.","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"     * @return A message string representing the notifications for distinct book request that were deleted.","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"    public String deleteAllRequests(Book ... booksToDelete) {","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"        return books.deleteAllRequests(booksToDelete);","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"     * Adds a patron to LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"     * The patron must not already exist in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"aditi2313"},"content":"    public void addPatron(Patron p) {","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"aditi2313"},"content":"        patrons.add(p);","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"     * Adds a book to LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"    public void addBook(Book book) {","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"        books.add(book);","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"aditi2313"},"content":"     * Replaces the given patron {@code target} in the list with {@code editedPatron}.","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"     * {@code target} must exist in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"     * The patron identity of {@code editedPatron} must not be the same as another existing patron in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":138,"author":{"gitId":"aditi2313"},"content":"    public void setPatron(Patron target, Patron editedPatron) {","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"aditi2313"},"content":"        requireNonNull(editedPatron);","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":141,"author":{"gitId":"aditi2313"},"content":"        patrons.setPatron(target, editedPatron);","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"     * Replaces the given book {@code target} in the list with {@code editedBook}.","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"     * {@code target} must exist in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"    public void setBook(Book target, Book editedBook) {","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(editedBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"        books.setBook(target, editedBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"     * Replaces the given book {@code target} with {@code editedBook}. If there are any other books with the same isbn","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"     * as {@code target}, update the authors and names of all those books to ensure consistency about books.","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"     * {@code target} must exist in LibTask.","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"     * @return True if some other book other than target is modified for the sake of consistency.","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"    public boolean setAndEditBook(Book target, Book editedBook) {","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(target, editedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"        return books.setAndEditBook(target, editedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"     * Replaces all books that are borrowed or requested by {@code target} with new book objects such that","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"     * {@code target} is replaced by {@code editedPatron} in the new book\u0027s requesters list and borrower.","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"     * @return A message string representing the notifications for the book updates.","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"    public String updateBookAfterPatronEdit(Patron target, Patron editedPatron) {","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(target, editedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"        return books.updateBookAfterPatronEdit(target, editedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"     * Replaces all books that are borrowed or requested by {@code deletedPatron} with new book objects such that","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"     * {@code deletedPatron} is removed from the new book\u0027s requesters list.","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"bingsen0806"},"content":"     * @return A message string representing the notifications for the book updates.","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"bingsen0806"},"content":"    public String updateBookAfterPatronDelete(Patron deletedPatron) {","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(deletedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"bingsen0806"},"content":"        return books.updateBookAfterPatronDelete(deletedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"bingsen0806"},"content":"     * Replaces all books that have the same isbn as {@code bookToRequest} with new book objects such that","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"bingsen0806"},"content":"     * {@code requester} is added to the new book\u0027s requesters list.","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"bingsen0806"},"content":"    public void addRequest(Book bookToRequest, Patron requester) {","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(bookToRequest, requester);","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"bingsen0806"},"content":"        books.addRequest(bookToRequest, requester);","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if there is at least one available copy of book with the same isbn as {@code book}","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasAvailableCopy(Book book) {","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(book);","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"bingsen0806"},"content":"        return books.hasAvailableCopy(book);","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":205,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":206,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if the specified {@code patron} is currently borrowing a copy book with the same isbn as","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"bingsen0806"},"content":"     * the specified {@code book}.","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":209,"author":{"gitId":"bingsen0806"},"content":"    public boolean isBorrowing(Patron patron, Book book) {","lastModifiedDate":"2022-03-22"},{"lineNumber":210,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(patron, book);","lastModifiedDate":"2022-03-22"},{"lineNumber":211,"author":{"gitId":"bingsen0806"},"content":"        return books.isBorrowing(patron, book);","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":213,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":214,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":215,"author":{"gitId":"bingsen0806"},"content":"     * Replaces all books borrowed by {@code borrower} with the same book, but with available status in LibTask.","lastModifiedDate":"2022-03-16"},{"lineNumber":216,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":217,"author":{"gitId":"bingsen0806"},"content":"     * @return The list of available books that were returned by {@code borrower}","lastModifiedDate":"2022-03-22"},{"lineNumber":218,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":219,"author":{"gitId":"bingsen0806"},"content":"    public List\u003cBook\u003e returnAllBorrowedBooks(Patron borrower) {","lastModifiedDate":"2022-03-22"},{"lineNumber":220,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(borrower);","lastModifiedDate":"2022-03-16"},{"lineNumber":221,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":222,"author":{"gitId":"bingsen0806"},"content":"        return books.returnAllBorrowedBooks(borrower);","lastModifiedDate":"2022-03-22"},{"lineNumber":223,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":224,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":225,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":226,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if the specified patron is currently borrowing at least one book.","lastModifiedDate":"2022-03-16"},{"lineNumber":227,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":228,"author":{"gitId":"bingsen0806"},"content":"    public boolean isBorrowingSomeBook(Patron borrower) {","lastModifiedDate":"2022-03-16"},{"lineNumber":229,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(borrower);","lastModifiedDate":"2022-03-16"},{"lineNumber":230,"author":{"gitId":"bingsen0806"},"content":"        return books.isBorrowingSomeBook(borrower);","lastModifiedDate":"2022-03-16"},{"lineNumber":231,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":232,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":233,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":234,"author":{"gitId":"aditi2313"},"content":"     * Returns true if a specified patron has overdue books.","lastModifiedDate":"2022-03-22"},{"lineNumber":235,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":236,"author":{"gitId":"aditi2313"},"content":"    public boolean hasOverdueBooks(Patron patron) {","lastModifiedDate":"2022-03-22"},{"lineNumber":237,"author":{"gitId":"aditi2313"},"content":"        requireNonNull(patron);","lastModifiedDate":"2022-03-22"},{"lineNumber":238,"author":{"gitId":"aditi2313"},"content":"        return books.hasOverdueBooks(patron);","lastModifiedDate":"2022-03-22"},{"lineNumber":239,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":240,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":241,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":242,"author":{"gitId":"aditi2313"},"content":"     * Returns true if this model contains a model that is not the same as {@code oldPatron} based on","lastModifiedDate":"2022-03-29"},{"lineNumber":243,"author":{"gitId":"aditi2313"},"content":"     * {@link Patron#equals(Object)}, but same as {@code editedPatron} based on {@link Patron#isSamePatron(Patron)}.","lastModifiedDate":"2022-03-29"},{"lineNumber":244,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":245,"author":{"gitId":"aditi2313"},"content":"    boolean hasEditedPatron(Patron oldPatron, Patron editedPatron) {","lastModifiedDate":"2022-03-26"},{"lineNumber":246,"author":{"gitId":"aditi2313"},"content":"        requireAllNonNull(oldPatron, editedPatron);","lastModifiedDate":"2022-03-26"},{"lineNumber":247,"author":{"gitId":"aditi2313"},"content":"        return patrons.hasEditedPatron(oldPatron, editedPatron);","lastModifiedDate":"2022-03-26"},{"lineNumber":248,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":249,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":250,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":251,"author":{"gitId":"bingsen0806"},"content":"     * Replaces the given book {@code bookToBorrow} with a new book with all same fields except status.","lastModifiedDate":"2022-03-16"},{"lineNumber":252,"author":{"gitId":"bingsen0806"},"content":"     * The new status will be {@link seedu.address.model.book.BookStatusType#BORROWED} status","lastModifiedDate":"2022-03-16"},{"lineNumber":253,"author":{"gitId":"bingsen0806"},"content":"     * with {@code borrower} as the borrower and {@returnDate} as the returnDate.","lastModifiedDate":"2022-03-16"},{"lineNumber":254,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":255,"author":{"gitId":"bingsen0806"},"content":"     * Both {@code borrower} {@code bookToBorrow} must exist in LibTask,","lastModifiedDate":"2022-03-16"},{"lineNumber":256,"author":{"gitId":"bingsen0806"},"content":"     * and {@code returnDate} must be in dd-MMM-yyyy format.","lastModifiedDate":"2022-03-16"},{"lineNumber":257,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":258,"author":{"gitId":"bingsen0806"},"content":"    public void borrowBook(Patron borrower, Book bookToBorrow, String returnDate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":259,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(borrower, bookToBorrow, returnDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":260,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":261,"author":{"gitId":"bingsen0806"},"content":"        books.borrowBook(borrower, bookToBorrow, returnDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":262,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":263,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":265,"author":{"gitId":"bingsen0806"},"content":"     * Removes {@code key} from this {@code LibTask}.","lastModifiedDate":"2022-03-13"},{"lineNumber":266,"author":{"gitId":"bingsen0806"},"content":"     * {@code key} must exist in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":268,"author":{"gitId":"aditi2313"},"content":"    public void removePatron(Patron key) {","lastModifiedDate":"2022-03-11"},{"lineNumber":269,"author":{"gitId":"aditi2313"},"content":"        patrons.remove(key);","lastModifiedDate":"2022-03-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":273,"author":{"gitId":"bingsen0806"},"content":"     * Removes {@code key} from this {@code LibTask}.","lastModifiedDate":"2022-03-13"},{"lineNumber":274,"author":{"gitId":"bingsen0806"},"content":"     * {@code key} must exist in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":275,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":276,"author":{"gitId":"bingsen0806"},"content":"    public void removeBook(Book key) {","lastModifiedDate":"2022-03-10"},{"lineNumber":277,"author":{"gitId":"bingsen0806"},"content":"        books.remove(key);","lastModifiedDate":"2022-03-10"},{"lineNumber":278,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":279,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"aditi2313"},"content":"        return patrons.asUnmodifiableObservableList().size() + \" patrons\";","lastModifiedDate":"2022-03-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"aditi2313"},"content":"    public ObservableList\u003cPatron\u003e getPatronList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":290,"author":{"gitId":"aditi2313"},"content":"        return patrons.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-11"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":293,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":294,"author":{"gitId":"bingsen0806"},"content":"    public ObservableList\u003cBook\u003e getBookList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":295,"author":{"gitId":"bingsen0806"},"content":"        return books.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-10"},{"lineNumber":296,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":297,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":301,"author":{"gitId":"bingsen0806"},"content":"                || (other instanceof LibTask // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":302,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 patrons.equals(((LibTask) other).patrons)","lastModifiedDate":"2022-03-13"},{"lineNumber":303,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 books.equals(((LibTask) other).books));","lastModifiedDate":"2022-03-13"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":308,"author":{"gitId":"aditi2313"},"content":"        return Objects.hash(patrons, books);","lastModifiedDate":"2022-03-11"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":78,"bingsen0806":189,"aditi2313":43}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    Predicate\u003cPatron\u003e PREDICATE_SHOW_ALL_PATRONS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    Predicate\u003cBook\u003e PREDICATE_SHOW_ALL_BOOKS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"     * Returns the user preLibTask file path.","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    Path getLibTaskFilePath();","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"     * Sets the user preLibTask file path.","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    void setLibTaskFilePath(Path libTaskFilePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"     * Replace LibTask data with the data in {@code libTask}.","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    void setLibTask(ReadOnlyLibTask libTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"    /** Returns the LibTask */","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    ReadOnlyLibTask getLibTask();","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if a patron with the same identity as {@code patron} exists in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"    boolean hasPatron(Patron patron);","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if a book with the same identity as {@code book} exists in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"    boolean hasBook(Book book);","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if there is some book in this model\u0027s book list with the same isbn, but different book name or","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"     * different set of authors as {@code bookToCheck}.","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    boolean hasSameIsbnDiffAuthorsOrName(Book bookToCheck);","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if there is some book in this model\u0027s book list with the same isbn as {@code bookToCheck}.","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"    boolean hasSameIsbn(Book bookToCheck);","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"     * Removes all book requests from all books in this model\u0027s book list that has the same isbn as any book in","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"     * {@param books}.","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"     * @return A message string representing the notifications for distinct book request that were deleted.","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"    String deleteAllRequests(Book ... books);","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"     * Deletes the given patron.","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"     * The patron must exist in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"aditi2313"},"content":"    void deletePatron(Patron target);","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"     * Deletes the given book.","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"     * The book must exist in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"    void deleteBook(Book target);","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"aditi2313"},"content":"     * Adds the given patron.","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"     * {@code patron} must not already exist in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"aditi2313"},"content":"    void addPatron(Patron patron);","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"     * Adds the given book.","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"    void addBook(Book book);","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"aditi2313"},"content":"     * Replaces the given patron {@code target} with {@code editedPatron}.","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"     * {@code target} must exist in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"     * The patron identity of {@code editedPatron} must not be the same as another existing patron in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"aditi2313"},"content":"    void setPatron(Patron target, Patron editedPatron);","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"     * Replaces the given book {@code target} with {@code editedBook}.","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"     * {@code target} must exist in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"     * The book identity of {@code editedBook} must not be the same as another existing book in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"    void setBook(Book target, Book editedBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"     * Replaces the given book {@code target} with {@code editedBook}. If there are any other books with the same isbn","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"     * as {@code target}, update the authors and names of all those books to ensure consistency about books.","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"     * {@code target} must exist in LibTask.","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"     * @return True if some other book other than target is modified for the sake of consistency.","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"    boolean setAndEditBook(Book target, Book editedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"     * Replaces all books that are borrowed or requested by {@code target} with new book objects such that","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"     * {@code target} is replaced by {@code editedPatron} in the new book\u0027s requesters list and borrower.","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"     * @return A message string representing the notifications for the book updates.","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"    String updateBookAfterPatronEdit(Patron target, Patron editedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"     * Replaces all books that are borrowed or requested by {@code deletedPatron} with new book objects such that","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"     * {@code deletedPatron} is removed from the new book\u0027s requesters list.","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"     * @return A message string representing the notifications for the book updates.","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"    String updateBookAfterPatronDelete(Patron deletedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"     * Replaces all books that have the same isbn as {@code bookToRequest} with new book objects such that","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"     * {@code requester} is added to the new book\u0027s requesters list.","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"    void addRequest(Book bookToRequest, Patron requester);","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if there is at least one available copy of book with the same isbn as {@code book}.","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"    boolean hasAvailableCopy(Book book);","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if the specified {@code patron} is currently borrowing a copy book with the same isbn as","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"bingsen0806"},"content":"     * the specified {@code book}.","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"    boolean isBorrowing(Patron patron, Book book);","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"     * Replaces all books borrowed by {@code borrower} with the same book, but with available status in LibTask.","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"     * @return The list of available books that were returned by {@code borrower}","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"    List\u003cBook\u003e returnAllBorrowedBooks(Patron borrower);","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":173,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if the specified patron is currently borrowing at least one book.","lastModifiedDate":"2022-03-16"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"    boolean isBorrowingSomeBook(Patron borrower);","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if a specified patron has overdue books.","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"aditi2313"},"content":"    boolean hasOverdueBooks(Patron patron);","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":184,"author":{"gitId":"aditi2313"},"content":"     * Returns true if this model contains a model that is not the same as {@code oldPatron} based on","lastModifiedDate":"2022-03-29"},{"lineNumber":185,"author":{"gitId":"aditi2313"},"content":"     * {@link Patron#equals(Object)}, but same as {@code editedPatron} based on {@link Patron#isSamePatron(Patron)}.","lastModifiedDate":"2022-03-29"},{"lineNumber":186,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":187,"author":{"gitId":"aditi2313"},"content":"    boolean hasEditedPatron(Patron oldPatron, Patron editedPatron);","lastModifiedDate":"2022-03-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":190,"author":{"gitId":"bingsen0806"},"content":"     * Replaces the given book {@code bookToBorrow} with a new book with all same fields except status.","lastModifiedDate":"2022-03-16"},{"lineNumber":191,"author":{"gitId":"bingsen0806"},"content":"     * The new status will be {@link seedu.address.model.book.BookStatusType#BORROWED} status","lastModifiedDate":"2022-03-16"},{"lineNumber":192,"author":{"gitId":"bingsen0806"},"content":"     * with {@code borrower} as the borrower and {@returnDate} as the returnDate.","lastModifiedDate":"2022-03-16"},{"lineNumber":193,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":194,"author":{"gitId":"bingsen0806"},"content":"     * Both {@code borrower} {@code bookToBorrow} must exist in LibTask,","lastModifiedDate":"2022-03-16"},{"lineNumber":195,"author":{"gitId":"bingsen0806"},"content":"     * and {@code returnDate} must be in dd-MMM-yyyy format.","lastModifiedDate":"2022-03-16"},{"lineNumber":196,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":197,"author":{"gitId":"bingsen0806"},"content":"    void borrowBook(Patron borrower, Book bookToBorrow, String returnDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":198,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":199,"author":{"gitId":"aditi2313"},"content":"    /** Returns an unmodifiable view of the filtered patron list */","lastModifiedDate":"2022-03-11"},{"lineNumber":200,"author":{"gitId":"aditi2313"},"content":"    ObservableList\u003cPatron\u003e getFilteredPatronList();","lastModifiedDate":"2022-03-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":202,"author":{"gitId":"bingsen0806"},"content":"    /** Returns an unmodifiable view of the filtered book list */","lastModifiedDate":"2022-03-10"},{"lineNumber":203,"author":{"gitId":"bingsen0806"},"content":"    ObservableList\u003cBook\u003e getFilteredBookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":204,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":206,"author":{"gitId":"aditi2313"},"content":"     * Updates the filter of the filtered patron list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":209,"author":{"gitId":"aditi2313"},"content":"    void updateFilteredPatronList(Predicate\u003cPatron\u003e predicate);","lastModifiedDate":"2022-03-11"},{"lineNumber":210,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":211,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":212,"author":{"gitId":"bingsen0806"},"content":"     * Updates the filter of the filtered book list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-10"},{"lineNumber":213,"author":{"gitId":"bingsen0806"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-10"},{"lineNumber":214,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":215,"author":{"gitId":"bingsen0806"},"content":"    void updateFilteredBookList(Predicate\u003cBook\u003e predicate);","lastModifiedDate":"2022-03-10"},{"lineNumber":216,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":72,"bingsen0806":124,"aditi2313":21}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":" * Represents the in-memory model of LibTask data.","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    private final LibTask libTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"    private final FilteredList\u003cPatron\u003e filteredPatrons;","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    private final FilteredList\u003cBook\u003e filteredBooks;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"     * Initializes a ModelManager with the given libTask and userPrefs.","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    public ModelManager(ReadOnlyLibTask libTask, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(libTask, userPrefs);","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        logger.fine(\"Initializing with LibTask: \" + libTask + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        this.libTask \u003d new LibTask(libTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        filteredPatrons \u003d new FilteredList\u003c\u003e(this.libTask.getPatronList());","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        filteredBooks \u003d new FilteredList\u003c\u003e(this.libTask.getBookList());","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        this(new LibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    public Path getLibTaskFilePath() {","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        return userPrefs.getLibTaskFilePath();","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"    public void setLibTaskFilePath(Path libTaskFilePath) {","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(libTaskFilePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"        userPrefs.setLibTaskFilePath(libTaskFilePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d LibTask \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"    public void setLibTask(ReadOnlyLibTask libTask) {","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        this.libTask.resetData(libTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"    public ReadOnlyLibTask getLibTask() {","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"        return libTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"aditi2313"},"content":"    public boolean hasPatron(Patron patron) {","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"aditi2313"},"content":"        requireNonNull(patron);","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        return libTask.hasPatron(patron);","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasBook(Book book) {","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(book);","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"        return libTask.hasBook(book);","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasSameIsbnDiffAuthorsOrName(Book bookToCheck) {","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(bookToCheck);","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"        return libTask.hasSameIsbnDiffAuthorsOrName(bookToCheck);","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasSameIsbn(Book bookToCheck) {","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(bookToCheck);","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"        return libTask.hasSameIsbn(bookToCheck);","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"    public String deleteAllRequests(Book ... books) {","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"        return libTask.deleteAllRequests(books);","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":124,"author":{"gitId":"aditi2313"},"content":"    public void deletePatron(Patron target) {","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"        libTask.removePatron(target);","lastModifiedDate":"2022-03-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"    public void deleteBook(Book target) {","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"        libTask.removeBook(target);","lastModifiedDate":"2022-03-13"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":134,"author":{"gitId":"aditi2313"},"content":"    public void addPatron(Patron patron) {","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"        libTask.addPatron(patron);","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"aditi2313"},"content":"        updateFilteredPatronList(PREDICATE_SHOW_ALL_PATRONS);","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"    public void addBook(Book book) {","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"        libTask.addBook(book);","lastModifiedDate":"2022-03-13"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"        updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":146,"author":{"gitId":"aditi2313"},"content":"    public void setPatron(Patron target, Patron editedPatron) {","lastModifiedDate":"2022-03-11"},{"lineNumber":147,"author":{"gitId":"aditi2313"},"content":"        requireAllNonNull(target, editedPatron);","lastModifiedDate":"2022-03-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"        libTask.setPatron(target, editedPatron);","lastModifiedDate":"2022-03-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"    public void setBook(Book target, Book editedBook) {","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(target, editedBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"        libTask.setBook(target, editedBook);","lastModifiedDate":"2022-03-13"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"    public boolean setAndEditBook(Book target, Book editedBook) {","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(target, editedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"bingsen0806"},"content":"        return libTask.setAndEditBook(target, editedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"    public String updateBookAfterPatronEdit(Patron target, Patron editedPatron) {","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(target, editedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"        return libTask.updateBookAfterPatronEdit(target, editedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"    public String updateBookAfterPatronDelete(Patron deletedPatron) {","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(deletedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"        return libTask.updateBookAfterPatronDelete(deletedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"    public void addRequest(Book bookToRequest, Patron requester) {","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(bookToRequest, requester);","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"        libTask.addRequest(bookToRequest, requester);","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasAvailableCopy(Book book) {","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(book);","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"bingsen0806"},"content":"        return libTask.hasAvailableCopy(book);","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"bingsen0806"},"content":"    public boolean isBorrowing(Patron patron, Book book) {","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(patron, book);","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"bingsen0806"},"content":"        return libTask.isBorrowing(patron, book);","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":196,"author":{"gitId":"bingsen0806"},"content":"    public List\u003cBook\u003e returnAllBorrowedBooks(Patron borrower) {","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(borrower);","lastModifiedDate":"2022-03-16"},{"lineNumber":198,"author":{"gitId":"bingsen0806"},"content":"        return libTask.returnAllBorrowedBooks(borrower);","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":200,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":201,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"bingsen0806"},"content":"    public boolean isBorrowingSomeBook(Patron borrower) {","lastModifiedDate":"2022-03-16"},{"lineNumber":203,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(borrower);","lastModifiedDate":"2022-03-16"},{"lineNumber":204,"author":{"gitId":"bingsen0806"},"content":"        return libTask.isBorrowingSomeBook(borrower);","lastModifiedDate":"2022-03-16"},{"lineNumber":205,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":206,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":207,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"aditi2313"},"content":"    public boolean hasOverdueBooks(Patron patron) {","lastModifiedDate":"2022-03-22"},{"lineNumber":209,"author":{"gitId":"aditi2313"},"content":"        requireNonNull(patron);","lastModifiedDate":"2022-03-22"},{"lineNumber":210,"author":{"gitId":"aditi2313"},"content":"        return libTask.hasOverdueBooks(patron);","lastModifiedDate":"2022-03-22"},{"lineNumber":211,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":214,"author":{"gitId":"aditi2313"},"content":"     * Returns true if this model contains a model that is not the same as {@code oldPatron} based on","lastModifiedDate":"2022-03-29"},{"lineNumber":215,"author":{"gitId":"aditi2313"},"content":"     * {@link Patron#equals(Object)}, but same as {@code editedPatron} based on {@link Patron#isSamePatron(Patron)}.","lastModifiedDate":"2022-03-29"},{"lineNumber":216,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":217,"author":{"gitId":"aditi2313"},"content":"    public boolean hasEditedPatron(Patron oldPatron, Patron editedPatron) {","lastModifiedDate":"2022-03-26"},{"lineNumber":218,"author":{"gitId":"aditi2313"},"content":"        requireAllNonNull(oldPatron, editedPatron);","lastModifiedDate":"2022-03-26"},{"lineNumber":219,"author":{"gitId":"aditi2313"},"content":"        return libTask.hasEditedPatron(oldPatron, editedPatron);","lastModifiedDate":"2022-03-26"},{"lineNumber":220,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":221,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":222,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":223,"author":{"gitId":"bingsen0806"},"content":"    public void borrowBook(Patron borrower, Book bookToBorrow, String returnDate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":224,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(borrower, bookToBorrow, returnDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":225,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":226,"author":{"gitId":"bingsen0806"},"content":"        libTask.borrowBook(borrower, bookToBorrow, returnDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":227,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":228,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":229,"author":{"gitId":"aditi2313"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Patron List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":232,"author":{"gitId":"aditi2313"},"content":"     * Returns an unmodifiable view of the list of {@code Patron} backed by the internal list of","lastModifiedDate":"2022-03-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":236,"author":{"gitId":"aditi2313"},"content":"    public ObservableList\u003cPatron\u003e getFilteredPatronList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":237,"author":{"gitId":"aditi2313"},"content":"        return filteredPatrons;","lastModifiedDate":"2022-03-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":240,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":241,"author":{"gitId":"bingsen0806"},"content":"     * Returns an unmodifiable view of the list of {@code Book} backed by the internal list of","lastModifiedDate":"2022-03-10"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-10"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":245,"author":{"gitId":"bingsen0806"},"content":"    public ObservableList\u003cBook\u003e getFilteredBookList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":246,"author":{"gitId":"bingsen0806"},"content":"        return filteredBooks;","lastModifiedDate":"2022-03-10"},{"lineNumber":247,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":248,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":250,"author":{"gitId":"aditi2313"},"content":"    public void updateFilteredPatronList(Predicate\u003cPatron\u003e predicate) {","lastModifiedDate":"2022-03-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":252,"author":{"gitId":"aditi2313"},"content":"        filteredPatrons.setPredicate(predicate);","lastModifiedDate":"2022-03-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":256,"author":{"gitId":"bingsen0806"},"content":"    public void updateFilteredBookList(Predicate\u003cBook\u003e predicate) {","lastModifiedDate":"2022-03-10"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-10"},{"lineNumber":258,"author":{"gitId":"bingsen0806"},"content":"        filteredBooks.setPredicate(predicate);","lastModifiedDate":"2022-03-10"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":275,"author":{"gitId":"bingsen0806"},"content":"        return libTask.equals(other.libTask)","lastModifiedDate":"2022-03-13"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":277,"author":{"gitId":"aditi2313"},"content":"                \u0026\u0026 filteredPatrons.equals(other.filteredPatrons)","lastModifiedDate":"2022-03-12"},{"lineNumber":278,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 filteredBooks.equals(other.filteredBooks);","lastModifiedDate":"2022-03-10"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":126,"bingsen0806":126,"aditi2313":29}},{"path":"src/main/java/seedu/address/model/ReadOnlyLibTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":" * Unmodifiable view of LibTask","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"public interface ReadOnlyLibTask {","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"     * Returns an unmodifiable view of the patrons list.","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"     * This list will not contain any duplicate patrons.","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    ObservableList\u003cPatron\u003e getPatronList();","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"     * Returns an unmodifiable view of the books list.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    ObservableList\u003cBook\u003e getBookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":11,"bingsen0806":7,"aditi2313":4}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    Path getLibTaskFilePath();","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":15,"bingsen0806":1}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    private Path libTaskFilePath \u003d Paths.get(\"data\" , \"libtask.json\");","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        setLibTaskFilePath(newUserPrefs.getLibTaskFilePath());","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"    public Path getLibTaskFilePath() {","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        return libTaskFilePath;","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    public void setLibTaskFilePath(Path libTaskFilePath) {","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(libTaskFilePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        this.libTaskFilePath \u003d libTaskFilePath;","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 libTaskFilePath.equals(o.libTaskFilePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        return Objects.hash(guiSettings, libTaskFilePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        sb.append(\"\\nLocal data file location : \" + libTaskFilePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":77,"bingsen0806":10}},{"path":"src/main/java/seedu/address/model/book/Author.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":" * Represents a Author in LibTask.","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAuthor(String)}","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"public class Author {","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"            \"Author names should only contain alphanumeric characters, spaces and dot, \"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"            + \"and it should not be blank, and it must start with an alphanumeric character.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    /*","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"     * The name should also contain at least one alphanumeric character,","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"     * and contains no non-alphanumeric characters other than the dot character.","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} .]*\";","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    public final String fullAuthorName;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a {@code AuthorName}.","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"     * @param name A valid author name.","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    public Author(String name) {","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        checkArgument(isValidAuthor(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        fullAuthorName \u003d name;","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if a given string can be converted to a valid author.","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    public static boolean isValidAuthor(String test) {","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        return fullAuthorName;","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"            || (other instanceof Author // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"            \u0026\u0026 getAuthorNameForComparison().equals(((Author) other).getAuthorNameForComparison())); // state check","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        return getAuthorNameForComparison().hashCode();","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"     * Returns the full name of the author, converted to lowercase and without whitespaces.","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"    private String getAuthorNameForComparison() {","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        String[] splittedName \u003d fullAuthorName.trim().toLowerCase().split(\"\\\\s+\");","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        Arrays.stream(splittedName).forEachOrdered(s -\u003e builder.append(s));","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":72}},{"path":"src/main/java/seedu/address/model/book/Book.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":" * Represents a Book in LibTask.","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"public class Book {","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    public static final String TIME_ADDED_MESSAGE_CONSTRAINTS \u003d \"Time added should be able to be parsed to long.\\n\";","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    // Identity fields","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    private final BookName bookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    private final Isbn isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    private final long timeAdded;","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    // Data fields","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    private final List\u003cAuthor\u003e authors \u003d new ArrayList\u003cAuthor\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    private final BookStatus bookStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    private final Set\u003cPatron\u003e requesters \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    public Book(BookName bookName, Isbn isbn, List\u003cAuthor\u003e authors, Set\u003cTag\u003e tags, long timeAdded,","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"                BookStatus bookStatus, Set\u003cPatron\u003e requesters) {","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(bookName, isbn, authors, tags, bookStatus, requesters);","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        this.bookName \u003d bookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        this.isbn \u003d isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        this.authors.addAll(authors);","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        this.timeAdded \u003d timeAdded;","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        this.bookStatus \u003d bookStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        this.requesters.addAll(requesters);","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a Book that is same as {@code originalBook} in every aspect except book status.","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    public Book(Book originalBook, BookStatus updatedBookStatus) {","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        this (originalBook.getBookName(), originalBook.getIsbn(), originalBook.getAuthors(),","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"                originalBook.getTags(), originalBook.getTimeAdded(), updatedBookStatus, originalBook.getRequesters());","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"     * Returns a Book that is same as {@code originalBook} in every aspect, but with no requesters.","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    public Book getBookWithEmptyRequest() {","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        return new Book(getBookName(), getIsbn(), getAuthors(), getTags(), getTimeAdded(), getBookStatus(),","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"                new HashSet\u003c\u003e());","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"     * Returns a Book that is consistent with {@code editedBook}, but has all other fields same as this book.","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"     * Two books are consistent if they either do not have the same isbn, or have the same isbn, book name, and authors.","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"    public Book getConsistentReplacement(Book editedBook) {","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(editedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        return new Book(editedBook.getBookName(), editedBook.getIsbn(), editedBook.getAuthors(), getTags(),","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"                getTimeAdded(), getBookStatus(), getRequesters());","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"     * Returns a Book with the exact same fields as this book, but with the specified old requester replaced with","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"     * the edited requester in its list of requesters.","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"     * @param oldRequester The old requester in this book\u0027s requester list to be replaced. It must not be null.","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"     * @param editedRequester The edited version of the old requester to replace the old requester in this book\u0027s","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"     *                        requester list. It must not be null.","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"    public Book editRequester(Patron oldRequester, Patron editedRequester) {","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(oldRequester, editedRequester);","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        return updateRequester(oldRequester, Optional.of(editedRequester));","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"     * Returns a Book with the exact same fields as this book, but with the specified old requester deleted from its","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"     * list of requesters.","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"     * @param oldRequester The old requester in this book\u0027s requester list to be deleted. It must not be null.","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"    public Book deleteRequester(Patron oldRequester) {","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(oldRequester);","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"        return updateRequester(oldRequester, Optional.empty());","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"     * Returns a Book with the exact same fields as this book, but with the specified requester added to its","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"     * list of requesters.","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"     * @param requester The requester to be added to this book\u0027s requester list. It must not be null.","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"    public Book addRequester(Patron requester) {","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(requester);","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"        HashSet\u003cPatron\u003e newRequesters \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"        newRequesters.addAll(getRequesters());","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"        newRequesters.add(requester);","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"        return new Book(getBookName(), getIsbn(), getAuthors(), getTags(), getTimeAdded(), getBookStatus(),","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"                newRequesters);","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"     * Returns a Book with the exact same fields as this book, but with its borrower replaced with the edited borrower.","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"     * This book must be borrowed before {@code editBorrower} is called.","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"     * @param editedBorrower The updated version of borrower. It must not be null","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"    public Book editBorrower(Patron editedBorrower) {","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(editedBorrower);","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"        assert isBorrowed();","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"        BookStatus newStatus \u003d bookStatus.editBorrower(editedBorrower);","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"        return new Book(this, newStatus);","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"    public BookName getBookName() {","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"        return bookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"    public Isbn getIsbn() {","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"        return isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"    public long getTimeAdded() {","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"        return timeAdded;","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"    public List\u003cAuthor\u003e getAuthors() {","lastModifiedDate":"2022-03-09"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"        return Collections.unmodifiableList(authors);","lastModifiedDate":"2022-03-09"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-09"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-09"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-03-09"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"     * Returns an immutable requester set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-21"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-21"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"    public Set\u003cPatron\u003e getRequesters() {","lastModifiedDate":"2022-03-21"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"        return Collections.unmodifiableSet(requesters);","lastModifiedDate":"2022-03-21"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"    public BookStatus getBookStatus() {","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"bingsen0806"},"content":"        return bookStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"     * Returns a String representing the borrow date of this book, or an empty string if this book is not borrowed.","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"    public String getBorrowDateString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"        return bookStatus.getBorrowDateString();","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":173,"author":{"gitId":"bingsen0806"},"content":"     * Returns a String representing the return date of this book, or an empty string if this book is not borrowed.","lastModifiedDate":"2022-03-15"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"    public String getReturnDateString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"        return bookStatus.getReturnDateString();","lastModifiedDate":"2022-03-15"},{"lineNumber":177,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"     * Returns a String representing the borrower\u0027s name of this book, or an empty string if this book is not borrowed.","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":182,"author":{"gitId":"bingsen0806"},"content":"    public String getBorrowerName() {","lastModifiedDate":"2022-03-15"},{"lineNumber":183,"author":{"gitId":"bingsen0806"},"content":"        return bookStatus.getBorrowerName();","lastModifiedDate":"2022-03-15"},{"lineNumber":184,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":185,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":186,"author":{"gitId":"bingsen0806"},"content":"    public boolean isAvailable() {","lastModifiedDate":"2022-03-15"},{"lineNumber":187,"author":{"gitId":"bingsen0806"},"content":"        return bookStatus.isAvailable();","lastModifiedDate":"2022-03-15"},{"lineNumber":188,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":189,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":190,"author":{"gitId":"bingsen0806"},"content":"    public boolean isBorrowed() {","lastModifiedDate":"2022-03-15"},{"lineNumber":191,"author":{"gitId":"bingsen0806"},"content":"        return bookStatus.isBorrowed();","lastModifiedDate":"2022-03-15"},{"lineNumber":192,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":193,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":194,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":195,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if this book is borrowed by the specified patron.","lastModifiedDate":"2022-03-16"},{"lineNumber":196,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":197,"author":{"gitId":"bingsen0806"},"content":"    public boolean isBorrowedBy(Patron patron) {","lastModifiedDate":"2022-03-16"},{"lineNumber":198,"author":{"gitId":"bingsen0806"},"content":"        if (!isBorrowed()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":199,"author":{"gitId":"bingsen0806"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":200,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":201,"author":{"gitId":"bingsen0806"},"content":"        return bookStatus.getBorrower().map(p -\u003e p.equals(patron)).orElse(false);","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":203,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":204,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":205,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if this book is requested by the specified patron.","lastModifiedDate":"2022-03-21"},{"lineNumber":206,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":207,"author":{"gitId":"bingsen0806"},"content":"    public boolean isRequestedBy(Patron patron) {","lastModifiedDate":"2022-03-21"},{"lineNumber":208,"author":{"gitId":"bingsen0806"},"content":"        return requesters.contains(patron);","lastModifiedDate":"2022-03-21"},{"lineNumber":209,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":210,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":211,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":212,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if both books have the same isbn.","lastModifiedDate":"2022-03-09"},{"lineNumber":213,"author":{"gitId":"bingsen0806"},"content":"     * This defines a weaker notion of equality between two books.","lastModifiedDate":"2022-03-09"},{"lineNumber":214,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":215,"author":{"gitId":"bingsen0806"},"content":"    public boolean isSameBook(Book otherBook) {","lastModifiedDate":"2022-03-09"},{"lineNumber":216,"author":{"gitId":"bingsen0806"},"content":"        if (otherBook \u003d\u003d this) {","lastModifiedDate":"2022-03-09"},{"lineNumber":217,"author":{"gitId":"bingsen0806"},"content":"            return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":218,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":219,"author":{"gitId":"bingsen0806"},"content":"        return otherBook !\u003d null","lastModifiedDate":"2022-03-09"},{"lineNumber":220,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 otherBook.getIsbn().equals(getIsbn());","lastModifiedDate":"2022-03-09"},{"lineNumber":221,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":222,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":223,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":224,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if both books have the same set of authors.","lastModifiedDate":"2022-03-21"},{"lineNumber":225,"author":{"gitId":"bingsen0806"},"content":"     * Authors are considered to be equal based on {@link Author#equals(Object)}","lastModifiedDate":"2022-03-21"},{"lineNumber":226,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":227,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasSameAuthors(Book other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":228,"author":{"gitId":"bingsen0806"},"content":"        HashSet\u003cAuthor\u003e thisAuthors \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":229,"author":{"gitId":"bingsen0806"},"content":"        thisAuthors.addAll(authors);","lastModifiedDate":"2022-03-21"},{"lineNumber":230,"author":{"gitId":"bingsen0806"},"content":"        HashSet\u003cAuthor\u003e otherAuthors \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":231,"author":{"gitId":"bingsen0806"},"content":"        otherAuthors.addAll(other.authors);","lastModifiedDate":"2022-03-21"},{"lineNumber":232,"author":{"gitId":"bingsen0806"},"content":"        return thisAuthors.equals(otherAuthors);","lastModifiedDate":"2022-03-21"},{"lineNumber":233,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":234,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":235,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":236,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if this book is borrowed and is overdue.","lastModifiedDate":"2022-03-22"},{"lineNumber":237,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":238,"author":{"gitId":"bingsen0806"},"content":"    public boolean isOverdue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":239,"author":{"gitId":"bingsen0806"},"content":"        return bookStatus.isOverdue();","lastModifiedDate":"2022-03-22"},{"lineNumber":240,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":241,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":242,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":243,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if both books have the same isbn.","lastModifiedDate":"2022-03-21"},{"lineNumber":244,"author":{"gitId":"bingsen0806"},"content":"     * Isbn are considered to be equal based on {@link Isbn#equals(Object)}","lastModifiedDate":"2022-03-21"},{"lineNumber":245,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":246,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasSameIsbn(Book other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":247,"author":{"gitId":"bingsen0806"},"content":"        return isbn.equals(other.isbn);","lastModifiedDate":"2022-03-21"},{"lineNumber":248,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":249,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":250,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":251,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if both books have the same book name.","lastModifiedDate":"2022-03-22"},{"lineNumber":252,"author":{"gitId":"bingsen0806"},"content":"     * Book names are considered to be equal based on {@link BookName#equals(Object)}","lastModifiedDate":"2022-03-22"},{"lineNumber":253,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":254,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasSameName(Book other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":255,"author":{"gitId":"bingsen0806"},"content":"        return bookName.equals(other.bookName);","lastModifiedDate":"2022-03-22"},{"lineNumber":256,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":257,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":258,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":259,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if both books have the same identity and data fields.","lastModifiedDate":"2022-03-09"},{"lineNumber":260,"author":{"gitId":"bingsen0806"},"content":"     * This defines a stronger notion of equality between two books.","lastModifiedDate":"2022-03-09"},{"lineNumber":261,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":262,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":263,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":264,"author":{"gitId":"bingsen0806"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-09"},{"lineNumber":265,"author":{"gitId":"bingsen0806"},"content":"            return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":266,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":267,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":268,"author":{"gitId":"bingsen0806"},"content":"        if (!(other instanceof Book)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":269,"author":{"gitId":"bingsen0806"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":270,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":271,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":272,"author":{"gitId":"bingsen0806"},"content":"        Book otherBook \u003d (Book) other;","lastModifiedDate":"2022-03-09"},{"lineNumber":273,"author":{"gitId":"bingsen0806"},"content":"        return otherBook.getBookName().equals(getBookName())","lastModifiedDate":"2022-03-09"},{"lineNumber":274,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 hasSameAuthors(otherBook)","lastModifiedDate":"2022-03-21"},{"lineNumber":275,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 otherBook.getTags().equals(getTags())","lastModifiedDate":"2022-03-09"},{"lineNumber":276,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 otherBook.getIsbn().equals(getIsbn())","lastModifiedDate":"2022-03-11"},{"lineNumber":277,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 otherBook.timeAdded \u003d\u003d timeAdded","lastModifiedDate":"2022-03-15"},{"lineNumber":278,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 otherBook.bookStatus.equals(bookStatus)","lastModifiedDate":"2022-03-21"},{"lineNumber":279,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 otherBook.requesters.equals(requesters);","lastModifiedDate":"2022-03-21"},{"lineNumber":280,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":281,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":282,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":283,"author":{"gitId":"bingsen0806"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-09"},{"lineNumber":284,"author":{"gitId":"bingsen0806"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-09"},{"lineNumber":285,"author":{"gitId":"bingsen0806"},"content":"        return Objects.hash(bookName, isbn, authors, tags, timeAdded, bookStatus, requesters);","lastModifiedDate":"2022-03-21"},{"lineNumber":286,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":287,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":288,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":289,"author":{"gitId":"bingsen0806"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":290,"author":{"gitId":"bingsen0806"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-09"},{"lineNumber":291,"author":{"gitId":"bingsen0806"},"content":"        builder.append(getBookName())","lastModifiedDate":"2022-03-09"},{"lineNumber":292,"author":{"gitId":"bingsen0806"},"content":"                .append(\"; Isbn: \")","lastModifiedDate":"2022-03-09"},{"lineNumber":293,"author":{"gitId":"bingsen0806"},"content":"                .append(getIsbn());","lastModifiedDate":"2022-03-09"},{"lineNumber":294,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":295,"author":{"gitId":"bingsen0806"},"content":"        List\u003cAuthor\u003e authors \u003d getAuthors();","lastModifiedDate":"2022-03-09"},{"lineNumber":296,"author":{"gitId":"bingsen0806"},"content":"        if (!authors.isEmpty()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":297,"author":{"gitId":"bingsen0806"},"content":"            builder.append(\"; Authors: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":298,"author":{"gitId":"bingsen0806"},"content":"            authors.forEach(author -\u003e builder.append(author.toString() + \" \"));","lastModifiedDate":"2022-03-22"},{"lineNumber":299,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":300,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":301,"author":{"gitId":"bingsen0806"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-03-09"},{"lineNumber":302,"author":{"gitId":"bingsen0806"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":303,"author":{"gitId":"bingsen0806"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":304,"author":{"gitId":"bingsen0806"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-03-09"},{"lineNumber":305,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":306,"author":{"gitId":"bingsen0806"},"content":"        builder.append(\"; Status: \").append(bookStatus.toString());","lastModifiedDate":"2022-03-15"},{"lineNumber":307,"author":{"gitId":"bingsen0806"},"content":"        if (!requesters.isEmpty()) {","lastModifiedDate":"2022-03-21"},{"lineNumber":308,"author":{"gitId":"bingsen0806"},"content":"            builder.append(\"; Requested by: \");","lastModifiedDate":"2022-03-21"},{"lineNumber":309,"author":{"gitId":"bingsen0806"},"content":"            requesters.forEach(r -\u003e builder.append(r.getName()));","lastModifiedDate":"2022-03-21"},{"lineNumber":310,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":311,"author":{"gitId":"bingsen0806"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":312,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":313,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":314,"author":{"gitId":"bingsen0806"},"content":"    private Book updateRequester(Patron oldRequester, Optional\u003cPatron\u003e editedRequester) {","lastModifiedDate":"2022-03-22"},{"lineNumber":315,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(oldRequester, editedRequester);","lastModifiedDate":"2022-03-22"},{"lineNumber":316,"author":{"gitId":"bingsen0806"},"content":"        assert isRequestedBy(oldRequester);","lastModifiedDate":"2022-03-22"},{"lineNumber":317,"author":{"gitId":"bingsen0806"},"content":"        HashSet\u003cPatron\u003e newRequesters \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":318,"author":{"gitId":"bingsen0806"},"content":"        newRequesters.addAll(getRequesters());","lastModifiedDate":"2022-03-22"},{"lineNumber":319,"author":{"gitId":"bingsen0806"},"content":"        newRequesters.remove(oldRequester);","lastModifiedDate":"2022-03-22"},{"lineNumber":320,"author":{"gitId":"bingsen0806"},"content":"        editedRequester.ifPresent(newRequesters::add);","lastModifiedDate":"2022-03-22"},{"lineNumber":321,"author":{"gitId":"bingsen0806"},"content":"        return new Book(getBookName(), getIsbn(), getAuthors(), getTags(), getTimeAdded(), getBookStatus(),","lastModifiedDate":"2022-03-22"},{"lineNumber":322,"author":{"gitId":"bingsen0806"},"content":"                newRequesters);","lastModifiedDate":"2022-03-22"},{"lineNumber":323,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":324,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":324}},{"path":"src/main/java/seedu/address/model/book/BookAuthorContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Halpfrog"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"Halpfrog"},"content":"import java.util.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"Halpfrog"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"Halpfrog"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"Halpfrog"},"content":" * Tests that a {@code Books}\u0027s {@code Author} matches any of the keywords given.","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"Halpfrog"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"Halpfrog"},"content":"public class BookAuthorContainsKeywordsPredicate implements Predicate\u003cBook\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"Halpfrog"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"Halpfrog"},"content":"    public BookAuthorContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"Halpfrog"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"Halpfrog"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"Halpfrog"},"content":"    public boolean test(Book book) {","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"Halpfrog"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"Halpfrog"},"content":"                .anyMatch(keywords -\u003e book.getAuthors().stream().anyMatch(x -\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"Halpfrog"},"content":"                        x.toString().toUpperCase().contains(keywords.toUpperCase())));","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"Halpfrog"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"Halpfrog"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"Halpfrog"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"Halpfrog"},"content":"                || (other instanceof BookAuthorContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"Halpfrog"},"content":"                \u0026\u0026 keywords.equals(((BookAuthorContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"Halpfrog"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"Halpfrog":29}},{"path":"src/main/java/seedu/address/model/book/BookList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":" * A list of persons that does not allow nulls.","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":" *","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"public class BookList implements Iterable\u003cBook\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    private final ObservableList\u003cBook\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    private final ObservableList\u003cBook\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if the list contains an equivalent book as the given argument.","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"     * Equivalence is defined based on {@link Book#isSameBook(Book)}","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"     * @param toCheck The book to be checked.","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    public boolean contains(Book toCheck) {","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        return internalList.stream().anyMatch(toCheck::isSameBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"     * Adds a book to the list.","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    public void add(Book book) {","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(book);","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        internalList.add(book);","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"     * Replaces the book {@code target} in the list with {@code editedBook}.","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    public void setBook(Book target, Book editedBook) {","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(target, editedBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"            throw new BookNotFoundException();","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        internalList.set(index, editedBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"     * Replaces the given book {@code target} with {@code editedBook}. If there are any other books with the same isbn","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"     * as {@code target}, update the authors and names of all those books to ensure consistency about books.","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"     * {@code target} must exist in LibTask.","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"     * @return True if some other book other than target is modified for the sake of consistency.","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"    public boolean setAndEditBook(Book target, Book editedBook) {","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        // setBook must be done first, otherwise tags will not be updated","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        setBook(target, editedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        boolean hasModifiedOtherBooks \u003d false;","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        for (Book book : internalList) {","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"            if (!book.hasSameIsbn(target) || book.equals(editedBook)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"                continue;","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"            if (!book.hasSameIsbn(editedBook) || !book.hasSameName(editedBook) || !book.hasSameAuthors(editedBook)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"                Book updatedConsistentBook \u003d book.getConsistentReplacement(editedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"                setBook(book, updatedConsistentBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"                hasModifiedOtherBooks \u003d true;","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        return hasModifiedOtherBooks;","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"     * Replaces all books that are borrowed or requested by {@code target} with new book objects such that","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"     * {@code target} is replaced by {@code editedPatron} in the new book\u0027s requesters list and borrower.","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"     * @return A message string representing the notifications for the book updates.","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"    public String updateBookAfterPatronEdit(Patron target, Patron editedPatron) {","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(target, editedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        return updatePatronBorrowedBooks(target, editedPatron) + updatePatronRequestedBooks(target, editedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"     * Replaces all books that are borrowed or requested by {@code deletedPatron} with new book objects such that","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"     * {@code deletedPatron} is removed from the new book\u0027s requesters list.","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"     * @return A message string representing the notifications for the book updates.","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"    public String updateBookAfterPatronDelete(Patron deletedPatron) {","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(deletedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"        boolean hasModifiedSomeBooks \u003d false;","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"        for (Book book : internalList) {","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"            if (!book.isRequestedBy(deletedPatron)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"                continue;","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"            Book updatedBook \u003d book.deleteRequester(deletedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"            setBook(book, updatedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"            hasModifiedSomeBooks \u003d true;","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"        return hasModifiedSomeBooks","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"                ? String.format(\"%s is also deleted from the requesters list of some books\\n\", deletedPatron.getName())","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"                : \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"     * Replaces all books that have the same isbn as {@code bookToRequest} with new book objects such that","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"     * {@code requester} is added to the new book\u0027s requesters list.","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"    public void addRequest(Book bookToRequest, Patron requester) {","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(bookToRequest, requester);","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"        for (Book book : internalList) {","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"            if (!book.hasSameIsbn(bookToRequest)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"                continue;","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"            Book updatedBook \u003d book.addRequester(requester);","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"            setBook(book, updatedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if there is at least one available copy of book with the same isbn as {@code book}","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasAvailableCopy(Book book) {","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(book);","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"        return internalList.stream().anyMatch(b -\u003e b.hasSameIsbn(book) \u0026\u0026 b.isAvailable());","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if the specified {@code patron} is currently borrowing a copy book with the same isbn as","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"     * the specified {@code book}.","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"    public boolean isBorrowing(Patron patron, Book book) {","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(patron, book);","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"        return internalList.stream().anyMatch(b -\u003e b.hasSameIsbn(book) \u0026\u0026 b.isBorrowedBy(patron));","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"     * Removes the equivalent book from the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"     * The book must exist in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"    public void remove(Book toRemove) {","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"            throw new BookNotFoundException();","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":162,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"    public void setBooks(BookList replacement) {","lastModifiedDate":"2022-03-10"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-10"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"     * Replaces the contents of this list with {@code books}.","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"     * {@code books} must not contain duplicate books.","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"    public void setBooks(List\u003cBook\u003e books) {","lastModifiedDate":"2022-03-10"},{"lineNumber":173,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(books);","lastModifiedDate":"2022-03-10"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"        internalList.setAll(books);","lastModifiedDate":"2022-03-10"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":177,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"     * Replaces all books borrowed by {@code borrower} with the same book, but with available status in this book list.","lastModifiedDate":"2022-03-16"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"     * @return The list of available books that were returned by {@code borrower}","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":182,"author":{"gitId":"bingsen0806"},"content":"    public List\u003cBook\u003e returnAllBorrowedBooks(Patron borrower) {","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"bingsen0806"},"content":"        ArrayList\u003cBook\u003e returnedBooks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"bingsen0806"},"content":"        for (Book book : internalList) {","lastModifiedDate":"2022-03-16"},{"lineNumber":185,"author":{"gitId":"bingsen0806"},"content":"            if (!book.isBorrowedBy(borrower)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":186,"author":{"gitId":"bingsen0806"},"content":"                continue;","lastModifiedDate":"2022-03-16"},{"lineNumber":187,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":188,"author":{"gitId":"bingsen0806"},"content":"            Book updatedAvailableBook \u003d new Book(book, BookStatus.createAvailableBookStatus());","lastModifiedDate":"2022-03-16"},{"lineNumber":189,"author":{"gitId":"bingsen0806"},"content":"            setBook(book, updatedAvailableBook);","lastModifiedDate":"2022-03-16"},{"lineNumber":190,"author":{"gitId":"bingsen0806"},"content":"            returnedBooks.add(updatedAvailableBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":192,"author":{"gitId":"bingsen0806"},"content":"        return returnedBooks;","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":194,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":195,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if there is some other book in this book list with the same isbn, but different book name or","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"bingsen0806"},"content":"     * different set of authors as {@code bookToCheck}.","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasSameIsbnDiffAuthorsOrName(Book bookToCheck) {","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"bingsen0806"},"content":"        return internalList.stream().anyMatch(book -\u003e book.hasSameIsbn(bookToCheck)","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 (!book.hasSameAuthors(bookToCheck) || !book.hasSameName(bookToCheck)));","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":205,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if there is some book in this book list with the same isbn as {@code bookToCheck}.","lastModifiedDate":"2022-03-22"},{"lineNumber":206,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasSameIsbn(Book bookToCheck) {","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"bingsen0806"},"content":"        return internalList.stream().anyMatch(book -\u003e book.hasSameIsbn(bookToCheck));","lastModifiedDate":"2022-03-22"},{"lineNumber":209,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":210,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":211,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"bingsen0806"},"content":"     * Removes all book requests from all books in this book list that has the same isbn as any book in {@param books}","lastModifiedDate":"2022-03-22"},{"lineNumber":213,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":214,"author":{"gitId":"bingsen0806"},"content":"     * @return A message string representing the notifications for distinct book request that were deleted.","lastModifiedDate":"2022-03-22"},{"lineNumber":215,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":216,"author":{"gitId":"bingsen0806"},"content":"    public String deleteAllRequests(Book ... books) {","lastModifiedDate":"2022-03-22"},{"lineNumber":217,"author":{"gitId":"bingsen0806"},"content":"        HashSet\u003cIsbn\u003e notifiedBooks \u003d new HashSet\u003c\u003e(); // To prevent adding the same notification multiple times","lastModifiedDate":"2022-03-22"},{"lineNumber":218,"author":{"gitId":"bingsen0806"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-22"},{"lineNumber":219,"author":{"gitId":"bingsen0806"},"content":"        List\u003cBook\u003e booksToProcess \u003d Arrays.stream(books).collect(Collectors.toList());","lastModifiedDate":"2022-03-22"},{"lineNumber":220,"author":{"gitId":"bingsen0806"},"content":"        for (Book book : booksToProcess) {","lastModifiedDate":"2022-03-22"},{"lineNumber":221,"author":{"gitId":"bingsen0806"},"content":"            if (notifiedBooks.contains(book.getIsbn())) {","lastModifiedDate":"2022-03-22"},{"lineNumber":222,"author":{"gitId":"bingsen0806"},"content":"                continue;","lastModifiedDate":"2022-03-22"},{"lineNumber":223,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":224,"author":{"gitId":"bingsen0806"},"content":"            notifiedBooks.add(book.getIsbn());","lastModifiedDate":"2022-03-22"},{"lineNumber":225,"author":{"gitId":"bingsen0806"},"content":"            builder.append(deleteRequestSingleBook(book));","lastModifiedDate":"2022-03-22"},{"lineNumber":226,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":227,"author":{"gitId":"bingsen0806"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":228,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":229,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":230,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":231,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if the specified patron is currently borrowing at least one book.","lastModifiedDate":"2022-03-16"},{"lineNumber":232,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":233,"author":{"gitId":"bingsen0806"},"content":"    public boolean isBorrowingSomeBook(Patron borrower) {","lastModifiedDate":"2022-03-16"},{"lineNumber":234,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(borrower);","lastModifiedDate":"2022-03-16"},{"lineNumber":235,"author":{"gitId":"bingsen0806"},"content":"        return internalList.stream().anyMatch(book -\u003e book.isBorrowedBy(borrower));","lastModifiedDate":"2022-03-16"},{"lineNumber":236,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":237,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":238,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":239,"author":{"gitId":"aditi2313"},"content":"     * Returns true if a specified patron has overdue books.","lastModifiedDate":"2022-03-22"},{"lineNumber":240,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":241,"author":{"gitId":"aditi2313"},"content":"    public boolean hasOverdueBooks(Patron patron) {","lastModifiedDate":"2022-03-22"},{"lineNumber":242,"author":{"gitId":"aditi2313"},"content":"        requireNonNull(patron);","lastModifiedDate":"2022-03-22"},{"lineNumber":243,"author":{"gitId":"aditi2313"},"content":"        return internalList.stream().anyMatch(book -\u003e book.isBorrowedBy(patron) \u0026\u0026 book.getBookStatus().isOverdue());","lastModifiedDate":"2022-03-22"},{"lineNumber":244,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":245,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":246,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":247,"author":{"gitId":"bingsen0806"},"content":"     * Replaces the given book {@code bookToBorrow} with a new book with all same fields except status.","lastModifiedDate":"2022-03-16"},{"lineNumber":248,"author":{"gitId":"bingsen0806"},"content":"     * The new status will be {@link seedu.address.model.book.BookStatusType#BORROWED} status","lastModifiedDate":"2022-03-16"},{"lineNumber":249,"author":{"gitId":"bingsen0806"},"content":"     * with {@code borrower} as the borrower and {@returnDate} as the returnDate.","lastModifiedDate":"2022-03-16"},{"lineNumber":250,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":251,"author":{"gitId":"bingsen0806"},"content":"     * Both {@code borrower} {@code bookToBorrow} must exist in LibTask,","lastModifiedDate":"2022-03-16"},{"lineNumber":252,"author":{"gitId":"bingsen0806"},"content":"     * and {@code returnDate} must be in dd-MMM-yyyy format.","lastModifiedDate":"2022-03-16"},{"lineNumber":253,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":254,"author":{"gitId":"bingsen0806"},"content":"    public void borrowBook(Patron borrower, Book bookToBorrow, String returnDate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":255,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(borrower, bookToBorrow, returnDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":256,"author":{"gitId":"bingsen0806"},"content":"        BookStatus borrowedStatus \u003d new BookStatus(BookStatusType.BORROWED,","lastModifiedDate":"2022-03-16"},{"lineNumber":257,"author":{"gitId":"bingsen0806"},"content":"                Optional.of(borrower), Optional.of(BookStatus.getCurrentDateString()), Optional.of(returnDate));","lastModifiedDate":"2022-03-16"},{"lineNumber":258,"author":{"gitId":"bingsen0806"},"content":"        Book updatedBook \u003d new Book(bookToBorrow, borrowedStatus);","lastModifiedDate":"2022-03-16"},{"lineNumber":259,"author":{"gitId":"bingsen0806"},"content":"        setBook(bookToBorrow, updatedBook);","lastModifiedDate":"2022-03-16"},{"lineNumber":260,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":261,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":262,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":263,"author":{"gitId":"bingsen0806"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-10"},{"lineNumber":264,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":265,"author":{"gitId":"bingsen0806"},"content":"    public ObservableList\u003cBook\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":266,"author":{"gitId":"bingsen0806"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":267,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":268,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":269,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":270,"author":{"gitId":"bingsen0806"},"content":"    public Iterator\u003cBook\u003e iterator() {","lastModifiedDate":"2022-03-10"},{"lineNumber":271,"author":{"gitId":"bingsen0806"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-10"},{"lineNumber":272,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":273,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":274,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":275,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":276,"author":{"gitId":"bingsen0806"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":277,"author":{"gitId":"bingsen0806"},"content":"                || (other instanceof BookList // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":278,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 internalList.equals(((BookList) other).internalList));","lastModifiedDate":"2022-03-10"},{"lineNumber":279,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":280,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":281,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":282,"author":{"gitId":"bingsen0806"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":283,"author":{"gitId":"bingsen0806"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":284,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":285,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":286,"author":{"gitId":"bingsen0806"},"content":"    private String deleteRequestSingleBook(Book bookToDelete) {","lastModifiedDate":"2022-03-22"},{"lineNumber":287,"author":{"gitId":"bingsen0806"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-22"},{"lineNumber":288,"author":{"gitId":"bingsen0806"},"content":"        boolean hasNotified \u003d false; // flag to prevent appending the same notification many times","lastModifiedDate":"2022-03-22"},{"lineNumber":289,"author":{"gitId":"bingsen0806"},"content":"        for (Book book : internalList) {","lastModifiedDate":"2022-03-22"},{"lineNumber":290,"author":{"gitId":"bingsen0806"},"content":"            if (!book.hasSameIsbn(bookToDelete) || book.getRequesters().isEmpty()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":291,"author":{"gitId":"bingsen0806"},"content":"                continue;","lastModifiedDate":"2022-03-22"},{"lineNumber":292,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":293,"author":{"gitId":"bingsen0806"},"content":"            if (!hasNotified) {","lastModifiedDate":"2022-03-22"},{"lineNumber":294,"author":{"gitId":"bingsen0806"},"content":"                book.getRequesters().stream().forEach(requester -\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":295,"author":{"gitId":"bingsen0806"},"content":"                        builder.append(String.format(\"You should notify %s about availability of %s\\n\",","lastModifiedDate":"2022-03-22"},{"lineNumber":296,"author":{"gitId":"bingsen0806"},"content":"                                requester.getName(), book.getBookName())));","lastModifiedDate":"2022-03-22"},{"lineNumber":297,"author":{"gitId":"bingsen0806"},"content":"                hasNotified \u003d true;","lastModifiedDate":"2022-03-22"},{"lineNumber":298,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":299,"author":{"gitId":"bingsen0806"},"content":"            Book updatedBookEmptyRequest \u003d book.getBookWithEmptyRequest();","lastModifiedDate":"2022-03-22"},{"lineNumber":300,"author":{"gitId":"bingsen0806"},"content":"            setBook(book, updatedBookEmptyRequest);","lastModifiedDate":"2022-03-22"},{"lineNumber":301,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":302,"author":{"gitId":"bingsen0806"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":303,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":304,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":305,"author":{"gitId":"bingsen0806"},"content":"    private String updatePatronBorrowedBooks(Patron target, Patron editedPatron) {","lastModifiedDate":"2022-03-22"},{"lineNumber":306,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(target, editedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":307,"author":{"gitId":"bingsen0806"},"content":"        boolean hasModifiedSomeBooks \u003d false;","lastModifiedDate":"2022-03-22"},{"lineNumber":308,"author":{"gitId":"bingsen0806"},"content":"        for (Book book : internalList) {","lastModifiedDate":"2022-03-22"},{"lineNumber":309,"author":{"gitId":"bingsen0806"},"content":"            if (!book.isBorrowedBy(target)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":310,"author":{"gitId":"bingsen0806"},"content":"                continue;","lastModifiedDate":"2022-03-22"},{"lineNumber":311,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":312,"author":{"gitId":"bingsen0806"},"content":"            Book updatedBook \u003d book.editBorrower(editedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":313,"author":{"gitId":"bingsen0806"},"content":"            setBook(book, updatedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":314,"author":{"gitId":"bingsen0806"},"content":"            hasModifiedSomeBooks \u003d true;","lastModifiedDate":"2022-03-22"},{"lineNumber":315,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":316,"author":{"gitId":"bingsen0806"},"content":"        return hasModifiedSomeBooks","lastModifiedDate":"2022-03-22"},{"lineNumber":317,"author":{"gitId":"bingsen0806"},"content":"                ? String.format(\"Borrower information of %s is also edited in some books\\n\", editedPatron.getName())","lastModifiedDate":"2022-03-22"},{"lineNumber":318,"author":{"gitId":"bingsen0806"},"content":"                : \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":319,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":320,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":321,"author":{"gitId":"bingsen0806"},"content":"    private String updatePatronRequestedBooks(Patron target, Patron editedPatron) {","lastModifiedDate":"2022-03-22"},{"lineNumber":322,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(target, editedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":323,"author":{"gitId":"bingsen0806"},"content":"        boolean hasModifiedSomeBooks \u003d false;","lastModifiedDate":"2022-03-22"},{"lineNumber":324,"author":{"gitId":"bingsen0806"},"content":"        for (Book book : internalList) {","lastModifiedDate":"2022-03-22"},{"lineNumber":325,"author":{"gitId":"bingsen0806"},"content":"            if (!book.isRequestedBy(target)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":326,"author":{"gitId":"bingsen0806"},"content":"                continue;","lastModifiedDate":"2022-03-22"},{"lineNumber":327,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":328,"author":{"gitId":"bingsen0806"},"content":"            Book updatedBook \u003d book.editRequester(target, editedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":329,"author":{"gitId":"bingsen0806"},"content":"            setBook(book, updatedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":330,"author":{"gitId":"bingsen0806"},"content":"            hasModifiedSomeBooks \u003d true;","lastModifiedDate":"2022-03-22"},{"lineNumber":331,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":332,"author":{"gitId":"bingsen0806"},"content":"        return hasModifiedSomeBooks","lastModifiedDate":"2022-03-22"},{"lineNumber":333,"author":{"gitId":"bingsen0806"},"content":"                ? String.format(\"Requester information of %s is also edited in some books\\n\", editedPatron.getName())","lastModifiedDate":"2022-03-22"},{"lineNumber":334,"author":{"gitId":"bingsen0806"},"content":"                : \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":335,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":336,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":328,"aditi2313":8}},{"path":"src/main/java/seedu/address/model/book/BookName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":" * Represents a Book\u0027s name in LibTask.","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBookName(String)}","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"public class BookName {","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"            \"Book names should only contain alphanumeric characters and spaces, \"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"        + \"and it should not be blank, and it must start with an alphanumeric character.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    /*","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"     * The name should also contain at least one alphanumeric character,","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"     * and contains no non-alphanumeric characters other than \u0027 character and : character.","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} \\\\\u0027\\\\:]*\";","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    public final String fullBookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a {@code BookName}.","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"     * @param bookname A valid book name.","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    public BookName(String bookname) {","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(bookname);","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        checkArgument(isValidBookName(bookname), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        fullBookName \u003d bookname;","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if a given string is a valid book name.","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    public static boolean isValidBookName(String test) {","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        return fullBookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"                || (other instanceof BookName) //instanceof handle nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 getBookNameForComparison().equals(((BookName) other).getBookNameForComparison());","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        return getBookNameForComparison().hashCode();","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"     * Returns the book name, converted to lowercase and without whitespaces.","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"    private String getBookNameForComparison() {","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        String[] splittedName \u003d fullBookName.trim().toLowerCase().split(\"\\\\s+\");","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        Arrays.stream(splittedName).forEachOrdered(s -\u003e builder.append(s));","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":71}},{"path":"src/main/java/seedu/address/model/book/BookNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":" * Tests that a {@code Book}\u0027s {@code BookName} matches any of the keywords given.","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"public class BookNameContainsKeywordsPredicate implements Predicate\u003cBook\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"    public BookNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    public boolean test(Book book) {","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"Halpfrog"},"content":"                .anyMatch(keyword -\u003e book.getBookName().toString().toUpperCase().contains(keyword.toUpperCase()));","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"                || (other instanceof BookNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 keywords.equals(((BookNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":28,"Halpfrog":1}},{"path":"src/main/java/seedu/address/model/book/BookRelatedToPatronPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":" * Tests that a {@code Book}\u0027s {@code isBorrowedBy} matches the given patron.","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"public class BookRelatedToPatronPredicate implements Predicate\u003cBook\u003e {","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"    private final Patron patronToRelate;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"    public BookRelatedToPatronPredicate(Patron patronToRelate) {","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"        this.patronToRelate \u003d patronToRelate;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"    public boolean test(Book book) {","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"        return book.isBorrowedBy(patronToRelate) || book.isRequestedBy(patronToRelate);","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"                || (other instanceof BookRelatedToPatronPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"                \u0026\u0026 patronToRelate.equals(((BookRelatedToPatronPredicate) other).patronToRelate)); // state check","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"yl-ang":28,"bingsen0806":1}},{"path":"src/main/java/seedu/address/model/book/BookStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.book.BookStatusType.AVAILABLE;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.book.BookStatusType.BORROWED;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import java.util.Date;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":" * Represents a BookStatus in LibTask.","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStatus(BookStatusType, Optional, Optional, Optional)}","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"public class BookStatus {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"            \"An available book status must not contain any borrower, borrowDate and return date \"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"                    + \"and a borrowed status must contain borrower, borrowDate and return date,\"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"                    + \"and date must be in dd-MMM-yyyy format.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    public static final SimpleDateFormat STATUS_DATE_FORMAT \u003d new SimpleDateFormat(\"dd-MMM-yyyy\");","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{2}-[a-zA-Z]{3}-\\\\d{4}$\";","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    private final BookStatusType bookStatusType;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    private final Optional\u003cPatron\u003e borrower;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    private final Optional\u003cDate\u003e borrowDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    private final Optional\u003cDate\u003e returnDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a {@code BookStatus}.","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"     * @param bookStatusType The status of this book.","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"     * @param borrower The patron who borrows this book, if any.","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"     * @param borrowDate The borrowDate of this book, if any.","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"     * @param returnDate The returnDate of this book, if any.","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    public BookStatus(BookStatusType bookStatusType, Optional\u003cPatron\u003e borrower, Optional\u003cString\u003e borrowDate,","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"                      Optional\u003cString\u003e returnDate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(bookStatusType, borrower, borrowDate, returnDate);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        checkArgument(isValidStatus(bookStatusType, borrower, borrowDate, returnDate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        this.borrowDate \u003d borrowDate.map(BookStatus::parseToDate);","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        this.returnDate \u003d returnDate.map(BookStatus::parseToDate);","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        this.bookStatusType \u003d bookStatusType;","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        this.borrower \u003d borrower;","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"     * A static function for creating an AVAILABLE book status.","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"     * @return An AVAILABLE BookStatus object.","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    public static BookStatus createAvailableBookStatus() {","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        return new BookStatus(AVAILABLE, Optional.empty(), Optional.empty(),","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"                Optional.empty());","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"     * Returns a BookStatus with the exact same fields as this book status, but with its borrower replaced with the","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"     * edited borrower. This book status must be of borrowed type before {@code editBorrower} is called.","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"     * @param editedBorrower The updated version of borrower. It must not be null","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    public BookStatus editBorrower(Patron editedBorrower) {","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(editedBorrower);","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        assert isBorrowed();","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        Optional\u003cString\u003e borrowDateString \u003d borrowDate.map(STATUS_DATE_FORMAT::format);","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        Optional\u003cString\u003e returnDateString \u003d returnDate.map(STATUS_DATE_FORMAT::format);","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        return new BookStatus(bookStatusType, Optional.of(editedBorrower), borrowDateString, returnDateString);","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    public static String getCurrentDateString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        return STATUS_DATE_FORMAT.format(new Date());","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if a given parameters can be converted to a valid book status.","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"    public static boolean isValidStatus(BookStatusType bookStatusType, Optional\u003cPatron\u003e borrower,","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"                                        Optional\u003cString\u003e borrowDate, Optional\u003cString\u003e returnDate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(bookStatusType, borrower, borrowDate, returnDate);","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        // A book with available status should not have any borrower, borrowing or returning dates","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        boolean isAvailableConstraintsSatisfied \u003d bookStatusType \u003d\u003d AVAILABLE","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 borrower.isEmpty() \u0026\u0026 borrowDate.isEmpty() \u0026\u0026 returnDate.isEmpty();","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"        // A book with borrowed status must have corresponding borrower, borrow and return dates.","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"        String borrowDateString \u003d borrowDate.orElse(\"\");","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"        String returnDateString \u003d returnDate.orElse(\"\");","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"        boolean isValidBorrowRegex \u003d borrowDateString.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        boolean isValidReturnRegex \u003d returnDateString.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        boolean isBorrowedConstraintsSatisfied \u003d bookStatusType \u003d\u003d BORROWED","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 borrower.isPresent() \u0026\u0026 borrowDate.isPresent()","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 returnDate.isPresent() \u0026\u0026 isValidBorrowRegex \u0026\u0026 isValidReturnRegex","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 isParseable(borrowDateString) \u0026\u0026 isParseable(returnDateString);","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"        return isAvailableConstraintsSatisfied || isBorrowedConstraintsSatisfied;","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if the status is AVAILABLE status.","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"    public boolean isAvailable() {","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"        return bookStatusType \u003d\u003d AVAILABLE;","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if the status is BORROWED status.","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"    public boolean isBorrowed() {","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"        return bookStatusType \u003d\u003d BORROWED;","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"     * Returns a String representing the borrow date of this book, or an empty string if this book is not borrowed.","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"    public String getBorrowDateString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"        if (borrowDate.isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"            return \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"        return STATUS_DATE_FORMAT.format(borrowDate.get());","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"     * Returns a String representing the return date of this book, or an empty string if this book is not borrowed.","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"    public String getReturnDateString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"        if (returnDate.isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"            return \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"        return STATUS_DATE_FORMAT.format(returnDate.get());","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if this book is overdue.","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"aditi2313"},"content":"    public boolean isOverdue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"        if (!isBorrowed()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"aditi2313"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"        String returnDateString \u003d getReturnDateString();","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"aditi2313"},"content":"        String currentDateString \u003d STATUS_DATE_FORMAT.format(new Date());","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"aditi2313"},"content":"        Date currentDate \u003d parseToDate(currentDateString);","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"aditi2313"},"content":"        Date returnDate \u003d parseToDate(returnDateString);","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"        return currentDate.after(returnDate);","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"     * Returns a String representing the borrower\u0027s name of this book, or an empty string if this book is not borrowed.","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"    public String getBorrowerName() {","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"        return borrower.map(patron -\u003e patron.getName().toString()).orElse(\"\");","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"    public Optional\u003cPatron\u003e getBorrower() {","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"        return borrower;","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"bingsen0806"},"content":"    public String getBookStatusTypeString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"        return bookStatusType.toString();","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"        builder.append(bookStatusType.toString());","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"        if (isBorrowed()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"            builder.append(\"; Borrowed by: \").append(borrower.map(b -\u003e b.getName()).get());","lastModifiedDate":"2022-03-21"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"            builder.append(\"; Borrow Date: \").append(borrowDate.map(date -\u003e STATUS_DATE_FORMAT.format(date)).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":173,"author":{"gitId":"bingsen0806"},"content":"            builder.append(\"; Return Date: \").append(returnDate.map(date -\u003e STATUS_DATE_FORMAT.format(date)).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-15"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":177,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"        BookStatus otherBookStatus \u003d (BookStatus) other;","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"bingsen0806"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":182,"author":{"gitId":"bingsen0806"},"content":"                || (other instanceof BookStatus // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":183,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 bookStatusType \u003d\u003d ((BookStatus) other).bookStatusType","lastModifiedDate":"2022-03-15"},{"lineNumber":184,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 borrower.equals(otherBookStatus.borrower)","lastModifiedDate":"2022-03-15"},{"lineNumber":185,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 borrowDate.equals(otherBookStatus.borrowDate)","lastModifiedDate":"2022-03-15"},{"lineNumber":186,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 returnDate.equals(otherBookStatus.returnDate)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":187,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":188,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":189,"author":{"gitId":"bingsen0806"},"content":"    private static Date parseToDate(String dateString) throws IllegalArgumentException {","lastModifiedDate":"2022-03-15"},{"lineNumber":190,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":191,"author":{"gitId":"bingsen0806"},"content":"            return STATUS_DATE_FORMAT.parse(dateString);","lastModifiedDate":"2022-03-15"},{"lineNumber":192,"author":{"gitId":"bingsen0806"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":193,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":194,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":195,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":196,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":197,"author":{"gitId":"bingsen0806"},"content":"    private static boolean isParseable(String dateString) {","lastModifiedDate":"2022-03-15"},{"lineNumber":198,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"bingsen0806"},"content":"            STATUS_DATE_FORMAT.parse(dateString);","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"bingsen0806"},"content":"            return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":201,"author":{"gitId":"bingsen0806"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":202,"author":{"gitId":"bingsen0806"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":203,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":204,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":205,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"bingsen0806":196,"aditi2313":9}},{"path":"src/main/java/seedu/address/model/book/BookStatusType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"public enum BookStatusType {","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"    AVAILABLE, BORROWED;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Book status type must be Available or Borrowed.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"        switch(this) {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"        case AVAILABLE: return \"Available\";","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"        case BORROWED: return \"Borrowed\";","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"        default: throw new IllegalArgumentException();","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"bingsen0806":16}},{"path":"src/main/java/seedu/address/model/book/BookTagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Halpfrog"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"Halpfrog"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"Halpfrog"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"Halpfrog"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"Halpfrog"},"content":" * Test that a {@code Book}\u0027s {@code BookTag} matches any of the keywords given","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"Halpfrog"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"Halpfrog"},"content":"public class BookTagContainsKeywordsPredicate implements Predicate\u003cBook\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"Halpfrog"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"Halpfrog"},"content":"    public BookTagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"Halpfrog"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"Halpfrog"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"Halpfrog"},"content":"    public boolean test(Book book) {","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"Halpfrog"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"Halpfrog"},"content":"                .anyMatch(keywords -\u003e book.getTags().stream().anyMatch(x -\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"Halpfrog"},"content":"                        x.toString().toUpperCase().contains(keywords.toUpperCase())));","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"Halpfrog"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"Halpfrog"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"Halpfrog"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"Halpfrog"},"content":"                || (other instanceof BookTagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"Halpfrog"},"content":"                \u0026\u0026 keywords.equals(((BookTagContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"Halpfrog"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"Halpfrog":31}},{"path":"src/main/java/seedu/address/model/book/Isbn.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"public class Isbn {","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"    public static final String SPECIAL_CHARACTERS \u003d \"-\";","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Isbn should adhere to the following constraints:\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"            + \"1. Contain only digits and at most one \\\"\" + SPECIAL_CHARACTERS + \"\\\" character between digits,\"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"            + \" and must start and end with digit characters.\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"            + \"2. Contain exactly 10 digits or 13 digits\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"            + \"3. For 10-digit Isbn, the sum of [position]x[digit at position] must be divisible by 11\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"            + \"4. For 13-digit Isbn, the digits must start with 978 or 979, and have correct check sum.\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"            + \"The check sum:\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"            + \"    - is defined as [weight of position]x[digit at position] and must be divisible by 10\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"            + \"    - weight is 1 if position is odd and 3 otherwise\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"            + \"5. Position is the 1-based index of the digit in the isbn input after removal of \\\"\"","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"            + SPECIAL_CHARACTERS + \"\\\" character.\\n\";","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALIDATION_REGEX_ISBN \u003d \"^[0-9]+(-?[0-9]+)+$\";","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    private static final int ISBN10_CHECKSUM_DIVIDER \u003d 11;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    private static final int ISBN13_CHECKSUM_DIVIDER \u003d 10;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    private static final int ISBN10_LENGTH \u003d 10;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    private static final int ISBN13_LENGTH \u003d 13;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    private static final int ISBN13_VALID_PREFIX1 \u003d 978;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    private static final int ISBN13_VALID_PREFIX2 \u003d 979;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    private final String isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a {@code Isbn}","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"     * @param isbn A valid isbn.","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    public Isbn(String isbn) {","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(isbn);","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        checkArgument(isValidIsbn(isbn), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        this.isbn \u003d isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if a given string is a valid isbn.","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    public static boolean isValidIsbn(String test) {","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        if (!test.matches(VALIDATION_REGEX_ISBN)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        String isbnWithoutHyphen \u003d removeHyphen(test);","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        if (isbnWithoutHyphen.length() \u003d\u003d ISBN10_LENGTH) {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"            return isValidIsbn10(isbnWithoutHyphen);","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        if (isbnWithoutHyphen.length() \u003d\u003d ISBN13_LENGTH) {","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"            return isValidIsbn13(isbnWithoutHyphen);","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"    private static String removeHyphen(String fullIsbn) {","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        String[] isbnParts \u003d fullIsbn.split(\"-\");","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        StringBuilder isbnWithoutHyphen \u003d new StringBuilder();","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        for (String substring: isbnParts) {","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"            isbnWithoutHyphen.append(substring);","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        return isbnWithoutHyphen.toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"    private static boolean isValidIsbn10(String isbnWithoutHyphen) {","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        assert isbnWithoutHyphen.length() \u003d\u003d ISBN10_LENGTH : \"isbn length is not correct.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        int checkSum \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        for (int i \u003d 0; i \u003c ISBN10_LENGTH; i++) {","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"            int weight \u003d ISBN10_LENGTH - i;","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"            int digitAtPosition \u003d Integer.parseInt(isbnWithoutHyphen.substring(i, i + 1));","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"            checkSum +\u003d weight * digitAtPosition;","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        return checkSum % ISBN10_CHECKSUM_DIVIDER \u003d\u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"    private static boolean isValidIsbn13(String isbnWithoutHyphen) {","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"        assert isbnWithoutHyphen.length() \u003d\u003d ISBN13_LENGTH : \"isbn length is not correct.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        // Checks for valid prefix","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        int prefix \u003d Integer.parseInt(isbnWithoutHyphen.substring(0, 3));","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"        boolean hasValidPrefix \u003d prefix \u003d\u003d ISBN13_VALID_PREFIX1 || prefix \u003d\u003d ISBN13_VALID_PREFIX2;","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        // Checks for valid check sum","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        int checkSum \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        for (int i \u003d 0; i \u003c ISBN13_LENGTH; i++) {","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"            // weights alternate between 1 and 3 according to Isbn standards","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"            int weight \u003d i % 2 \u003d\u003d 0 ? 1 : 3;","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"            int digitAtPosition \u003d Integer.parseInt(isbnWithoutHyphen.substring(i, i + 1));","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"            checkSum +\u003d weight * digitAtPosition;","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        boolean hasValidCheckSum \u003d checkSum % ISBN13_CHECKSUM_DIVIDER \u003d\u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        return hasValidPrefix \u0026\u0026 hasValidCheckSum;","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"        return removeHyphen(isbn);","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"                || (other instanceof Isbn // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 removeHyphen(isbn).equals(removeHyphen(((Isbn) other).isbn))); // state check","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"        return removeHyphen(isbn).hashCode();","lastModifiedDate":"2022-03-21"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":116}},{"path":"src/main/java/seedu/address/model/book/exceptions/BookNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book.exceptions;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":" * Signals that the operation is unable to find the specified book.","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"public class BookNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":6}},{"path":"src/main/java/seedu/address/model/patron/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.model.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":" * Represents a Patron\u0027s email in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"            + \"3. Total length of email must be up to 50 characters.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"        String[] emailArray \u003d test.split(\"\");","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"        return ((emailArray.length \u003c\u003d 50) \u0026\u0026 test.matches(VALIDATION_REGEX));","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"                \u0026\u0026 getEmailForComparison().equals(((Email) other).getEmailForComparison())); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"     * Returns the email of the patron, converted to lowercase.","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"aditi2313"},"content":"    private String getEmailForComparison() {","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"        return value.toLowerCase();","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"aditi2313"},"content":"        return getEmailForComparison().hashCode();","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aditi2313":14,"-":65,"bingsen0806":1}},{"path":"src/main/java/seedu/address/model/patron/Id.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.model.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":" * Represents a Patron\u0027s id in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidId(String)}","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"public class Id {","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Ids must be of format AXXXXXXXX, and should not be blank\";","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"     * The first character of the id must not be a whitespace,","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"     * Constructs an {@code Id}.","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"     * @param id A valid id.","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"    public Id(String id) {","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"        value \u003d id;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"     * Returns true if a given string is a valid id.","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"    public static boolean isValidId(String test) {","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        String[] idArray \u003d test.split(\"\");","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"        return ((idArray.length \u003d\u003d 9) \u0026\u0026 idArray[0].equals(\"A\") \u0026\u0026 test.matches(VALIDATION_REGEX));","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"                || (other instanceof Id // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"                \u0026\u0026 getIdForComparison().equals(((Id) other).getIdForComparison())); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"     * Returns the id of the patron, converted to lowercase.","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"    private String getIdForComparison() {","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"        return value.toLowerCase();","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"        return getIdForComparison().hashCode();","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aditi2313":26,"-":38,"bingsen0806":1}},{"path":"src/main/java/seedu/address/model/patron/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.model.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":" * Represents a Patron\u0027s name in the address book.","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"            \"Names should only contain upto a max of 40 alphanumeric characters and spaces, and should not be blank.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"        String[] nameArray \u003d test.split(\"\");","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"        return ((nameArray.length \u003c 40) \u0026\u0026 test.matches(VALIDATION_REGEX));","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"                \u0026\u0026 getPatronNameForComparison().equals(((Name) other).getPatronNameForComparison())); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"     * Returns the full name of the patron, converted to lowercase and without whitespaces.","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"    private String getPatronNameForComparison() {","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"        String[] splittedName \u003d fullName.trim().toLowerCase().split(\"\\\\s+\");","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"        Arrays.stream(splittedName).forEachOrdered(s -\u003e builder.append(s));","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"        return getPatronNameForComparison().hashCode();","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aditi2313":19,"-":53}},{"path":"src/main/java/seedu/address/model/patron/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.model.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":" * Tests that a {@code Patron}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPatron\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"    public boolean test(Patron patron) {","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(patron.getName().fullName, keyword));","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"aditi2313":5,"-":26}},{"path":"src/main/java/seedu/address/model/patron/Patron.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.model.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":" * Represents a Patron in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"public class Patron {","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"    private final Id id;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"    public Patron(Name name, Phone phone, Email email, Id id, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"        requireAllNonNull(name, phone, email, id, tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"    public Id getId() {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"        return id;","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"     * Returns true if both patrons have the same name, id or emails.","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"     * This defines a weaker notion of equality between two patrons.","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"    public boolean isSamePatron(Patron otherPatron) {","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"        if (otherPatron \u003d\u003d this) {","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"        return otherPatron !\u003d null","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"                \u0026\u0026 (otherPatron.getName().equals(getName())","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"aditi2313"},"content":"                || otherPatron.getId().equals(getId())","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"                || otherPatron.getEmail().equals(getEmail()));","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"    public Patron copy() {","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"        return new Patron(name, phone, email, id, getTags());","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"     * Returns true if both patrons have the same identity and data fields.","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"aditi2313"},"content":"     * This defines a stronger notion of equality between two patrons.","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"aditi2313"},"content":"        if (!(other instanceof Patron)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"aditi2313"},"content":"        Patron otherPatron \u003d (Patron) other;","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"aditi2313"},"content":"        return otherPatron.getName().equals(getName())","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"aditi2313"},"content":"                \u0026\u0026 otherPatron.getPhone().equals(getPhone())","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"aditi2313"},"content":"                \u0026\u0026 otherPatron.getEmail().equals(getEmail())","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"aditi2313"},"content":"                \u0026\u0026 otherPatron.getId().equals(getId())","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"aditi2313"},"content":"                \u0026\u0026 otherPatron.getTags().equals(getTags());","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"aditi2313"},"content":"        return Objects.hash(name, phone, email, id, tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"aditi2313"},"content":"                .append(\"; Id: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"aditi2313"},"content":"                .append(getId());","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aditi2313":28,"-":98,"bingsen0806":3}},{"path":"src/main/java/seedu/address/model/patron/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.model.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":" * Represents a Patron\u0027s phone number in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aditi2313":1,"-":51,"bingsen0806":1}},{"path":"src/main/java/seedu/address/model/patron/UniquePatronList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.model.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.exceptions.DuplicatePatronException;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.exceptions.PatronNotFoundException;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":" * A list of patrons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":" * A patron is considered unique by comparing using {@code Patron#isSamePatron(Patron)}. As such, adding and updating of","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":" * patrons uses Patron#isSamePatron(Patron) for equality so as to ensure that the patron being added or updated is","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":" * unique in terms of identity in the UniquePatronList. However, the removal of a patron uses Patron#equals(Object) so","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":" * as to ensure that the patron with exactly the same fields will be removed.","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":" * @see Patron#isSamePatron(Patron)","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"public class UniquePatronList implements Iterable\u003cPatron\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"    private final ObservableList\u003cPatron\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"    private final ObservableList\u003cPatron\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"     * Returns true if the list contains an equivalent patron as the given argument.","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"    public boolean contains(Patron toCheck) {","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePatron);","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"     * Adds a patron to the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"     * The patron must not already exist in the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"    public void add(Patron toAdd) {","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"            throw new DuplicatePatronException();","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"     * Replaces the patron {@code target} in the list with {@code editedPatron}.","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"     * The patron identity of {@code editedPatron} must not be the same as another existing patron in the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"    public void setPatron(Patron target, Patron editedPatron) {","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"        requireAllNonNull(target, editedPatron);","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"            throw new PatronNotFoundException();","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"        if (!target.isSamePatron(editedPatron) \u0026\u0026 contains(editedPatron)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"            throw new DuplicatePatronException();","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"        internalList.set(index, editedPatron);","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"     * Removes the equivalent patron from the list.","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"     * The patron must exist in the list.","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"    public void remove(Patron toRemove) {","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"            throw new PatronNotFoundException();","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"    public void setPatrons(UniquePatronList replacement) {","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"     * Replaces the contents of this list with {@code patrons}.","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"aditi2313"},"content":"     * {@code patrons} must not contain duplicate patrons.","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"aditi2313"},"content":"    public void setPatrons(List\u003cPatron\u003e patrons) {","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"aditi2313"},"content":"        requireAllNonNull(patrons);","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"aditi2313"},"content":"        if (!patronsAreUnique(patrons)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"aditi2313"},"content":"            throw new DuplicatePatronException();","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"aditi2313"},"content":"        internalList.setAll(patrons);","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"aditi2313"},"content":"     * Returns true if this patron list contains a patron that is not the same as {@code oldPatron} based on","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"aditi2313"},"content":"     * {@link Patron#equals(Object)}, but same as {@code editedPatron} based on {@link Patron#isSamePatron(Patron)}.","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"aditi2313"},"content":"    public boolean hasEditedPatron(Patron oldPatron, Patron editedPatron) {","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"aditi2313"},"content":"        requireAllNonNull(oldPatron, editedPatron);","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"        return internalList.stream().anyMatch(patron -\u003e !patron.equals(oldPatron) \u0026\u0026 patron.isSamePatron(editedPatron));","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"aditi2313"},"content":"    public ObservableList\u003cPatron\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"aditi2313"},"content":"    public Iterator\u003cPatron\u003e iterator() {","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"aditi2313"},"content":"                || (other instanceof UniquePatronList // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":125,"author":{"gitId":"aditi2313"},"content":"                        \u0026\u0026 internalList.equals(((UniquePatronList) other).internalList));","lastModifiedDate":"2022-03-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"aditi2313"},"content":"     * Returns true if {@code patrons} contains only unique patrons.","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"aditi2313"},"content":"    private boolean patronsAreUnique(List\u003cPatron\u003e patrons) {","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"aditi2313"},"content":"        for (int i \u003d 0; i \u003c patrons.size() - 1; i++) {","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"aditi2313"},"content":"            for (int j \u003d i + 1; j \u003c patrons.size(); j++) {","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"aditi2313"},"content":"                if (patrons.get(i).isSamePatron(patrons.get(j))) {","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aditi2313":57,"-":89}},{"path":"src/main/java/seedu/address/model/patron/exceptions/DuplicatePatronException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.model.patron.exceptions;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":" * Signals that the operation will result in duplicate Patrons (Patrons are considered duplicates if they have the same","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":" * identity).","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"public class DuplicatePatronException extends RuntimeException {","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"    public DuplicatePatronException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"        super(\"Operation would result in duplicate patrons\");","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"aditi2313":11}},{"path":"src/main/java/seedu/address/model/patron/exceptions/PatronNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.model.patron.exceptions;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":" * Signals that the operation is unable to find the specified patron.","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"public class PatronNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"aditi2313":6}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":" * Represents a Tag in LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":53,"bingsen0806":1}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.book.BookStatusType.BORROWED;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.LibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ReadOnlyLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Email;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Id;","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Name;","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Phone;","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":" * Contains utility methods for populating {@code LibTask} with sample data.","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    public static final long SAMPLE_BOOK_CREATED_TIME \u003d 1646989653388L;","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    public static final BookStatus SAMPLE_AVAILABLE_STATUS \u003d BookStatus.createAvailableBookStatus();","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    private static final BookStatus ALGORITHMS_STATUS \u003d new BookStatus(BORROWED, Optional.of(getSamplePatrons()[0]),","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"            Optional.of(\"17-Mar-2022\"), Optional.of(\"28-Mar-2022\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    private static final BookStatus SEMAPHORE_STATUS \u003d BookStatus.createAvailableBookStatus();","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    private static final BookStatus MAZE_RUNNER_STATUS \u003d BookStatus.createAvailableBookStatus();","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    private static final BookStatus AI_STATUS \u003d new BookStatus(BORROWED, Optional.of(getSamplePatrons()[0]),","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"            Optional.of(\"14-Mar-2022\"), Optional.of(\"28-Mar-2022\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    private static final BookStatus CINDERELLA_STATUS \u003d BookStatus.createAvailableBookStatus();","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    public static BookStatus getSampleBorrowedStatus() {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        return new BookStatus(BORROWED,","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"                Optional.ofNullable(getSamplePatrons()[0]),","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"                Optional.ofNullable(\"14-Feb-2022\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"                Optional.ofNullable(\"28-Feb-2022\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"    public static Patron[] getSamplePatrons() {","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"        return new Patron[] {","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"            new Patron(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"                new Id(\"A0123451H\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"computing\")),","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"            new Patron(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"                new Id(\"A0123452H\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"science\", \"graduate\")),","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"            new Patron(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"                new Id(\"A0123453H\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"business\")),","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"            new Patron(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"                new Id(\"A0123454H\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"fass\")),","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"            new Patron(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"                new Id(\"A0123455H\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"computing\")),","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"            new Patron(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"                new Id(\"A0123456H\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"science\"))","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    public static Book[] getSampleBooks() {","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        return new Book[] {","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"            new Book(new BookName(\"Harry Potter and The Philosopher\u0027s Stone\"), new Isbn(\"978-71617-018-8-5\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"                getAuthorList(\"J. K. Rowling\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"Adventure\", \"Magic\"), SAMPLE_BOOK_CREATED_TIME,","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"                    SAMPLE_AVAILABLE_STATUS, new HashSet\u003c\u003e()),","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"            new Book(new BookName(\"The Hunger Games: MockingJay\"), new Isbn(\"9786029293883\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"                getAuthorList(\"Suzanne Collins\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"Thriller\", \"Scifi\", \"Adventure\"), SAMPLE_BOOK_CREATED_TIME,","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"                    getSampleBorrowedStatus(), new HashSet\u003c\u003e()),","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"            new Book(new BookName(\"Introduction to Algorithms\"), new Isbn(\"978-03-71-88850-6\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"                getAuthorList(\"Cormen\", \"Leiserson\", \"Rivest\", \"Stein\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"ComputerScience\", \"Mathematics\"), SAMPLE_BOOK_CREATED_TIME,","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"                    ALGORITHMS_STATUS, getRequesters().get(0)),","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"            new Book(new BookName(\"The Little Book of Semaphores\"), new Isbn(\"4992719864\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"                getAuthorList(),","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"ComputerScience\", \"Technology\"), SAMPLE_BOOK_CREATED_TIME,","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"                    SEMAPHORE_STATUS, getRequesters().get(1)),","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"            new Book(new BookName(\"The Maze Runner\"), new Isbn(\"1-474-59282-1\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"                getAuthorList(\"James Dashner1\", \"James Dashner2\", \"James Dashner3\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"Adventure\", \"Romance\", \"Scifi\"), SAMPLE_BOOK_CREATED_TIME,","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"                    MAZE_RUNNER_STATUS, getRequesters().get(2)),","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"            new Book(new BookName(\"Artificial Intelligence: A Modern Approach\"), new Isbn(\"9780131038059\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"                getAuthorList(\"Peter Norvig\", \"Stuart J. Russell\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"Technology\"), SAMPLE_BOOK_CREATED_TIME,","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"                    AI_STATUS, getRequesters().get(3)),","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"            new Book(new BookName(\"Cinderella\"), new Isbn(\"9781409580454\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"                getAuthorList(),","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(), SAMPLE_BOOK_CREATED_TIME,","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"                    CINDERELLA_STATUS, getRequesters().get(4))","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"        };","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"    public static ReadOnlyLibTask getSampleLibTask() {","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"        LibTask sampleAb \u003d new LibTask();","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"aditi2313"},"content":"        for (Patron samplePatron : getSamplePatrons()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"aditi2313"},"content":"            sampleAb.addPatron(samplePatron);","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"        for (Book sampleBook : getSampleBooks()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"            sampleAb.addBook(sampleBook);","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"     * Returns a list of authors containing the list of strings given.","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"    public static ArrayList\u003cAuthor\u003e getAuthorList(String... strings) {","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"                .map(Author::new)","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"     * Returns a requester set containing the list of requesters given.","lastModifiedDate":"2022-03-21"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"    public static Set\u003cPatron\u003e getRequesterSet(Patron... requesters) {","lastModifiedDate":"2022-03-21"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"        return Arrays.stream(requesters)","lastModifiedDate":"2022-03-21"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"                .map(r -\u003e r.copy())","lastModifiedDate":"2022-03-21"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-03-21"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"    private static ArrayList\u003cHashSet\u003cPatron\u003e\u003e getRequesters() {","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"        ArrayList\u003cHashSet\u003cPatron\u003e\u003e listOfRequesters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"        HashSet\u003cPatron\u003e algorithmsRequesters \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"        algorithmsRequesters.add(getSamplePatrons()[1]);","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"        algorithmsRequesters.add(getSamplePatrons()[2]);","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"        listOfRequesters.add(algorithmsRequesters);","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"        listOfRequesters.add(new HashSet\u003c\u003e()); // for \"The Little Book of Semaphores\"","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"        listOfRequesters.add(new HashSet\u003c\u003e()); // for \"Maze Runner\"","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"        HashSet\u003cPatron\u003e aiRequesters \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"        aiRequesters.add(getSamplePatrons()[2]);","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"        aiRequesters.add(getSamplePatrons()[3]);","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"        listOfRequesters.add(aiRequesters);","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"        listOfRequesters.add(new HashSet\u003c\u003e()); // for \"Cinderella\"","lastModifiedDate":"2022-03-30"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"        return listOfRequesters;","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"-":29,"bingsen0806":112,"aditi2313":21}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAuthor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":" * Jackson-friendly version of {@link Author}.","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"public class JsonAdaptedAuthor {","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    private final String authorName;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a {@code JsonAdaptedAuthor} with the given {@code authorName}.","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    public JsonAdaptedAuthor(String authorName) {","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"        this.authorName \u003d authorName;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"     * Converts a given {@code Author} into this class for Jackson use.","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    public JsonAdaptedAuthor(Author source) {","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        authorName \u003d source.fullAuthorName;","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    @JsonValue","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    public String getTagName() {","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        return authorName;","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"     * Converts this Jackson-friendly adapted author object into the model\u0027s {@code Author} object.","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted author.","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    public Author toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        if (!Author.isValidAuthor(authorName)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(Author.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        return new Author(authorName);","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":49}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":" * Jackson-friendly version of {@link Book}.","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"class JsonAdaptedBook {","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Book\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    private final String isbn;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    private final String bookName;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    private final List\u003cJsonAdaptedAuthor\u003e authors \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    private final String timeAdded;","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    private final JsonAdaptedBookStatus bookStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    private final List\u003cJsonAdaptedPatron\u003e requesters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a {@code JsonAdaptedBook} with the given book details.","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    public JsonAdaptedBook(@JsonProperty(\"bookName\") String bookName, @JsonProperty(\"isbn\") String isbn,","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        @JsonProperty(\"authors\") List\u003cJsonAdaptedAuthor\u003e authors,","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        @JsonProperty(\"timeAdded\") String timeAdded,","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        @JsonProperty(\"bookStatus\") JsonAdaptedBookStatus bookStatus,","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        @JsonProperty(\"requesters\") List\u003cJsonAdaptedPatron\u003e requesters) {","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        this.bookName \u003d bookName;","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        this.isbn \u003d isbn;","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        if (authors !\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"            this.authors.addAll(authors);","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        this.bookStatus \u003d bookStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        this.timeAdded \u003d timeAdded;","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        if (requesters !\u003d null) {","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"            this.requesters.addAll(requesters);","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"     * Converts a given {@code Book} into this class for Jackson use.","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    public JsonAdaptedBook(Book source) {","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        bookName \u003d source.getBookName().fullBookName;","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        isbn \u003d source.getIsbn().toString();","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        authors.addAll(source.getAuthors().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"                .map(JsonAdaptedAuthor::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        timeAdded \u003d Long.toString(source.getTimeAdded());","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        bookStatus \u003d new JsonAdaptedBookStatus(source.getBookStatus());","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        requesters.addAll(source.getRequesters().stream()","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"                .map(JsonAdaptedPatron::new)","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"     * Converts this Jackson-friendly adapted book object into the model\u0027s {@code Book} object.","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted book.","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"    public Book toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        final List\u003cTag\u003e bookTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"            bookTags.add(tag.toModelType());","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        final List\u003cPatron\u003e bookRequesters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        for (JsonAdaptedPatron requester : requesters) {","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"            bookRequesters.add(requester.toModelType());","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"        final List\u003cAuthor\u003e bookAuthors \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        for (JsonAdaptedAuthor author : authors) {","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"            bookAuthors.add(author.toModelType());","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"        if (bookName \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"                BookName.class.getSimpleName()));","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"        if (!BookName.isValidBookName(bookName)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(BookName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"        final BookName modelName \u003d new BookName(bookName);","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"        if (isbn \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Isbn.class.getSimpleName()));","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"        if (!Isbn.isValidIsbn(isbn)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(Isbn.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"        final Isbn modelIsbn \u003d new Isbn(isbn);","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(bookTags);","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"        final Set\u003cPatron\u003e modelRequesters \u003d new HashSet\u003c\u003e(bookRequesters);","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"        if (bookStatus \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"                    BookStatus.class.getSimpleName()));","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"        final BookStatus modelBookStatus \u003d bookStatus.toModelType();","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"        if (timeAdded \u003d\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Long.class.getSimpleName()));","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"            final long timeBookAdded \u003d Long.parseLong(timeAdded);","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"            return new Book(modelName, modelIsbn, bookAuthors, modelTags, timeBookAdded, modelBookStatus,","lastModifiedDate":"2022-03-21"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"                    modelRequesters);","lastModifiedDate":"2022-03-21"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(Book.TIME_ADDED_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":135}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedBookStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.book.BookStatus.VALIDATION_REGEX;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.book.BookStatus.isValidStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.book.BookStatusType.AVAILABLE;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.book.BookStatusType.BORROWED;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import com.fasterxml.jackson.annotation.JsonInclude;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookStatusType;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":" * Jackson-friendly version of {@link BookStatus}.","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"public class JsonAdaptedBookStatus {","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"BookStatus\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    private final String bookStatusType;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    @JsonInclude(JsonInclude.Include.NON_NULL)","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    private final JsonAdaptedPatron borrower;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    @JsonInclude(JsonInclude.Include.NON_NULL)","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    private final String borrowDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    @JsonInclude(JsonInclude.Include.NON_NULL)","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    private final String returnDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a {@code JsonAdaptedBookStatus} with the given book status details.","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    public JsonAdaptedBookStatus(@JsonProperty(\"bookStatusType\") String bookStatusType,","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"                                 @JsonProperty(\"borrower\") JsonAdaptedPatron borrower,","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"                                 @JsonProperty(\"borrowDate\") String borrowDate,","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"                                 @JsonProperty(\"returnDate\") String returnDate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        this.bookStatusType \u003d bookStatusType;","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        this.borrower \u003d borrower;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        this.borrowDate \u003d borrowDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        this.returnDate \u003d returnDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"     * Converts a given {@code Book} into this class for Jackson use.","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    public JsonAdaptedBookStatus(BookStatus source) {","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        bookStatusType \u003d source.getBookStatusTypeString();","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        borrower \u003d source.getBorrower().map(JsonAdaptedPatron::new).orElse(null);","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        borrowDate \u003d source.isBorrowed() ? source.getBorrowDateString() : null;","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        returnDate \u003d source.isBorrowed() ? source.getReturnDateString() : null;","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"     * Converts this Jackson-friendly adapted book status object into the model\u0027s {@code BookStatus} object.","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted book status.","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"    public BookStatus toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        final BookStatusType modelStatusType;","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        if (bookStatusType \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"                    BookStatusType.class.getSimpleName()));","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        if (bookStatusType.equalsIgnoreCase(AVAILABLE.toString())) {","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"            modelStatusType \u003d AVAILABLE;","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        } else if (bookStatusType.equalsIgnoreCase(BORROWED.toString())) {","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"            modelStatusType \u003d BORROWED;","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(BookStatusType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"        final Optional\u003cPatron\u003e modelBorrower;","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        if (borrower \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"            modelBorrower \u003d Optional.empty();","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"            modelBorrower \u003d Optional.of(borrower.toModelType());","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"        final Optional\u003cString\u003e modelBorrowDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        final Optional\u003cString\u003e modelReturnDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        if (borrowDate \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"            modelBorrowDate \u003d Optional.empty();","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        } else if (!borrowDate.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(BookStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"            modelBorrowDate \u003d Optional.of(borrowDate);","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"        if (returnDate \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"            modelReturnDate \u003d Optional.empty();","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        } else if (!returnDate.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(BookStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"        } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"            modelReturnDate \u003d Optional.of(returnDate);","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"        if (!isValidStatus(modelStatusType, modelBorrower, modelBorrowDate, modelReturnDate)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(BookStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"        return new BookStatus(modelStatusType, modelBorrower, modelBorrowDate, modelReturnDate);","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"bingsen0806":106}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPatron.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Email;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Id;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Name;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Phone;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":" * Jackson-friendly version of {@link Patron}.","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"class JsonAdaptedPatron {","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Patron\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"    private final String id;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"     * Constructs a {@code JsonAdaptedPatron} with the given patron details.","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"    public JsonAdaptedPatron(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"id\") String id,","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"     * Converts a given {@code Patron} into this class for Jackson use.","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"    public JsonAdaptedPatron(Patron source) {","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"        id \u003d source.getId().value;","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"     * Converts this Jackson-friendly adapted patron object into the model\u0027s {@code Patron} object.","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted patron.","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"    public Patron toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"        final List\u003cTag\u003e patronTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"aditi2313"},"content":"            patronTags.add(tag.toModelType());","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"aditi2313"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"aditi2313"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Id.class.getSimpleName()));","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"aditi2313"},"content":"        if (!Id.isValidId(id)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"aditi2313"},"content":"            throw new IllegalValueException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"aditi2313"},"content":"        final Id modelAddress \u003d new Id(id);","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"aditi2313"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(patronTags);","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"        return new Patron(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":81,"aditi2313":28}},{"path":"src/main/java/seedu/address/storage/JsonLibTaskStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ReadOnlyLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":" * A class to access LibTask data stored as a json file on the hard disk.","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"public class JsonLibTaskStorage implements LibTaskStorage {","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonLibTaskStorage.class);","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    public JsonLibTaskStorage(Path filePath) {","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    public Path getLibTaskFilePath() {","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    public Optional\u003cReadOnlyLibTask\u003e readLibTask() throws DataConversionException {","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        return readLibTask(filePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"     * Similar to {@link #readLibTask()}.","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    public Optional\u003cReadOnlyLibTask\u003e readLibTask(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        Optional\u003cJsonSerializableLibTask\u003e jsonLibTask \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"                filePath, JsonSerializableLibTask.class);","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        if (!jsonLibTask.isPresent()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"            return Optional.of(jsonLibTask.get().toModelType());","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"    public void saveLibTask(ReadOnlyLibTask libTask) throws IOException {","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        saveLibTask(libTask, filePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"     * Similar to {@link #saveLibTask(ReadOnlyLibTask)}.","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    public void saveLibTask(ReadOnlyLibTask libTask, Path filePath) throws IOException {","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(libTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableLibTask(libTask), filePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":60,"bingsen0806":20}},{"path":"src/main/java/seedu/address/storage/JsonSerializableLibTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.LibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ReadOnlyLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":" * An Immutable LibTask that is serializable to JSON format.","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"@JsonRootName(value \u003d \"libTask\")","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"class JsonSerializableLibTask {","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_DUPLICATE_PATRON \u003d \"Patrons list contains duplicate patron(s).\";","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    private final List\u003cJsonAdaptedPatron\u003e patrons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    private final List\u003cJsonAdaptedBook\u003e books \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a {@code JsonSerializableLibTask} with the given patrons.","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    public JsonSerializableLibTask(@JsonProperty(\"patrons\") List\u003cJsonAdaptedPatron\u003e patrons,","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"                                   @JsonProperty(\"books\") List\u003cJsonAdaptedBook\u003e books) {","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"        this.patrons.addAll(patrons);","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        this.books.addAll(books);","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"     * Converts a given {@code ReadOnlyLibTask} into this class for Jackson use.","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableLibTask}.","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    public JsonSerializableLibTask(ReadOnlyLibTask source) {","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"        patrons.addAll(source.getPatronList().stream().map(JsonAdaptedPatron::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        books.addAll(source.getBookList().stream().map(JsonAdaptedBook::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"     * Converts this LibTask into the model\u0027s {@code LibTask} object.","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    public LibTask toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        LibTask libTask \u003d new LibTask();","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"        for (JsonAdaptedPatron jsonAdaptedPatron : patrons) {","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"            Patron patron \u003d jsonAdaptedPatron.toModelType();","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"            if (libTask.hasPatron(patron)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PATRON);","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"            libTask.addPatron(patron);","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        for (JsonAdaptedBook jsonAdaptedBook : books) {","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"            Book book \u003d jsonAdaptedBook.toModelType();","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"            libTask.addBook(book);","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        return libTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":36,"bingsen0806":25,"aditi2313":8}},{"path":"src/main/java/seedu/address/storage/LibTaskStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.LibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ReadOnlyLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":" * Represents a storage for {@link LibTask}.","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"public interface LibTaskStorage {","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"    Path getLibTaskFilePath();","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"     * Returns LibTask data as a {@link ReadOnlyLibTask}.","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    Optional\u003cReadOnlyLibTask\u003e readLibTask() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"     * @see #getLibTaskFilePath()","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    Optional\u003cReadOnlyLibTask\u003e readLibTask(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"     * Saves the given {@link ReadOnlyLibTask} to the storage.","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"     * @param libTask cannot be null.","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    void saveLibTask(ReadOnlyLibTask libTask) throws IOException;","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"     * @see #saveLibTask(ReadOnlyLibTask)","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    void saveLibTask(ReadOnlyLibTask libTask, Path filePath) throws IOException;","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":32,"bingsen0806":14}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ReadOnlyLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"public interface Storage extends LibTaskStorage, UserPrefsStorage {","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    Path getLibTaskFilePath();","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    Optional\u003cReadOnlyLibTask\u003e readLibTask() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    void saveLibTask(ReadOnlyLibTask libTask) throws IOException;","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":27,"bingsen0806":5}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ReadOnlyLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":" * Manages storage of LibTask data in local storage.","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    private LibTaskStorage libTaskStorage;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"     * Creates a {@code StorageManager} with the given {@code LibTaskStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    public StorageManager(LibTaskStorage libTaskStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"        this.libTaskStorage \u003d libTaskStorage;","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d LibTask methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"    public Path getLibTaskFilePath() {","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        return libTaskStorage.getLibTaskFilePath();","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    public Optional\u003cReadOnlyLibTask\u003e readLibTask() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        return readLibTask(libTaskStorage.getLibTaskFilePath());","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    public Optional\u003cReadOnlyLibTask\u003e readLibTask(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        return libTaskStorage.readLibTask(filePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"    public void saveLibTask(ReadOnlyLibTask libTask) throws IOException {","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        saveLibTask(libTask, libTaskStorage.getLibTaskFilePath());","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"    public void saveLibTask(ReadOnlyLibTask libTask, Path filePath) throws IOException {","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"        libTaskStorage.saveLibTask(libTask, filePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":61,"bingsen0806":17}},{"path":"src/main/java/seedu/address/ui/BookCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":" * An UI component that displays information of a {@code Book}.","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"public class BookCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"    private static final String FXML \u003d \"BookListCard.fxml\";","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on LibTask level 4\u003c/a\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"    public final Book book;","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"    private Label name;","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"    private Label bookCardDisplayId;","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"    private Label authors;","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"    private Label isbn;","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"    private FlowPane bookCategoryTags;","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"    private FlowPane bookAvailableTag;","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"    private FlowPane bookBorrowTag;","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"    private Label borrower;","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"    private Label bookReturnDate;","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"    private FlowPane bookRequestTag;","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"    private Label requestedBy;","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"yl-ang"},"content":"     * Creates a {@code Book} with the given {@code Book} and index to display.","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"yl-ang"},"content":"    public BookCard(Book book, int displayedIndex) {","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"yl-ang"},"content":"        super(FXML);","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"yl-ang"},"content":"        requireNonNull(book);","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"yl-ang"},"content":"        this.book \u003d book;","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"yl-ang"},"content":"        bookCardDisplayId.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"yl-ang"},"content":"        name.setText(book.getBookName().toString());","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"yl-ang"},"content":"        setBookCategoryTags(book);","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"yl-ang"},"content":"        setAuthor(book);","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"yl-ang"},"content":"        isbn.setText(\"ISBN: \" + book.getIsbn());","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"yl-ang"},"content":"        setBookStatusDetails(book);","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"yl-ang"},"content":"        setRequestsDetails(book);","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"yl-ang"},"content":"     * Sorts and sets the FXML book category tags with the category data from the supplied book object.","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"yl-ang"},"content":"     * @param book {@code Book} which the book object to obtain the category tags from.","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"yl-ang"},"content":"    public void setBookCategoryTags(Book book) {","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"yl-ang"},"content":"        book.getTags().stream()","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"yl-ang"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"yl-ang"},"content":"                .forEach(tag -\u003e bookCategoryTags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"yl-ang"},"content":"     * Sorts and sets the FXML author label with the author data from the supplied book object.","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"yl-ang"},"content":"     * @param book {@code Book} which the book object to obtain the author data from.","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"yl-ang"},"content":"    public void setAuthor(Book book) {","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"yl-ang"},"content":"        // Author check needed since author is an optional parameter in book command","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"yl-ang"},"content":"        if (!book.getAuthors().isEmpty()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"yl-ang"},"content":"            authors.setVisible(true);","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"yl-ang"},"content":"            authors.setManaged(true);","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"yl-ang"},"content":"            String authorsString \u003d book.getAuthors().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"yl-ang"},"content":"                    .sorted(Comparator.comparing(author -\u003e author.toString()))","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"yl-ang"},"content":"                    .map(Author::toString)","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"yl-ang"},"content":"                    .collect(Collectors.joining(\", \"));","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"yl-ang"},"content":"            authors.setText(\"Author: \" + authorsString);","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"yl-ang"},"content":"            return;","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"yl-ang"},"content":"        authors.setVisible(false);","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"yl-ang"},"content":"        authors.setManaged(false);","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"yl-ang"},"content":"     * Sets the FXML book status labels based on the availability status of the supplied book object.","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"yl-ang"},"content":"     * @param book {@code Book} which the book object to obtain availability status, borrower and book return date.","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"yl-ang"},"content":"    public void setBookStatusDetails(Book book) {","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"yl-ang"},"content":"        if (book.isAvailable()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"yl-ang"},"content":"            // hide borrower and book return date details as book is available","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"yl-ang"},"content":"            borrower.setVisible(false);","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"yl-ang"},"content":"            borrower.setManaged(false);","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"yl-ang"},"content":"            bookReturnDate.setVisible(false);","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"yl-ang"},"content":"            bookReturnDate.setManaged(false);","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"yl-ang"},"content":"            bookAvailableTag.getChildren().add(new Label(\"Available\"));","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"yl-ang"},"content":"        } else {","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"yl-ang"},"content":"            // borrower and book return date labels will be set to visible as by default its hidden","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"yl-ang"},"content":"            borrower.setVisible(true);","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"yl-ang"},"content":"            borrower.setManaged(true);","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"yl-ang"},"content":"            bookReturnDate.setVisible(true);","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"yl-ang"},"content":"            bookReturnDate.setManaged(true);","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"yl-ang"},"content":"            Collections.addAll(bookBorrowTag.getChildren(), new Label(\"Borrowed\"));","lastModifiedDate":"2022-03-17"},{"lineNumber":128,"author":{"gitId":"yl-ang"},"content":"            borrower.setText(\"Borrower: \" + book.getBorrowerName());","lastModifiedDate":"2022-03-17"},{"lineNumber":129,"author":{"gitId":"yl-ang"},"content":"            bookReturnDate.setText(\"Return date: \" + book.getReturnDateString());","lastModifiedDate":"2022-03-17"},{"lineNumber":130,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":131,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"yl-ang"},"content":"     * Sorts and sets the FXML book requesters with the requester data from the supplied book object.","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"yl-ang"},"content":"     * @param book {@code Book} which the book object to obtain the requesters from.","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"yl-ang"},"content":"    public void setRequestsDetails(Book book) {","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"yl-ang"},"content":"        // Requester check needed since it is optional","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"yl-ang"},"content":"        if (!book.getRequesters().isEmpty()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"yl-ang"},"content":"            Collections.addAll(bookRequestTag.getChildren(), new Label(\"Requested By\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"yl-ang"},"content":"            requestedBy.setVisible(true);","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"yl-ang"},"content":"            requestedBy.setManaged(true);","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"yl-ang"},"content":"            String requestersString \u003d book.getRequesters().stream()","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"yl-ang"},"content":"                    .sorted(Comparator.comparing(requester -\u003e requester.getName().fullName))","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"yl-ang"},"content":"                    .map(requester -\u003e requester.getName().fullName)","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"yl-ang"},"content":"                    .collect(Collectors.joining(\", \"));","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":149,"author":{"gitId":"yl-ang"},"content":"            requestedBy.setText(requestersString);","lastModifiedDate":"2022-03-24"},{"lineNumber":150,"author":{"gitId":"yl-ang"},"content":"            return;","lastModifiedDate":"2022-03-23"},{"lineNumber":151,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":152,"author":{"gitId":"yl-ang"},"content":"        requestedBy.setVisible(false);","lastModifiedDate":"2022-03-23"},{"lineNumber":153,"author":{"gitId":"yl-ang"},"content":"        requestedBy.setManaged(false);","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":156,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":158,"author":{"gitId":"yl-ang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":159,"author":{"gitId":"yl-ang"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":160,"author":{"gitId":"yl-ang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-06"},{"lineNumber":161,"author":{"gitId":"yl-ang"},"content":"            return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":164,"author":{"gitId":"yl-ang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":165,"author":{"gitId":"yl-ang"},"content":"        if (!(other instanceof BookCard)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"yl-ang"},"content":"            return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":167,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":169,"author":{"gitId":"yl-ang"},"content":"        // state check","lastModifiedDate":"2022-03-06"},{"lineNumber":170,"author":{"gitId":"yl-ang"},"content":"        BookCard card \u003d (BookCard) other;","lastModifiedDate":"2022-03-06"},{"lineNumber":171,"author":{"gitId":"yl-ang"},"content":"        return bookCardDisplayId.getText().equals(card.bookCardDisplayId.getText())","lastModifiedDate":"2022-03-11"},{"lineNumber":172,"author":{"gitId":"yl-ang"},"content":"                \u0026\u0026 book.equals(card.book);","lastModifiedDate":"2022-03-10"},{"lineNumber":173,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":174,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yl-ang":173,"bingsen0806":1}},{"path":"src/main/java/seedu/address/ui/BookListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":" * Panel containing the list of books.","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"public class BookListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"    private static final String FXML \u003d \"BookListPanel.fxml\";","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(BookListPanel.class);","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"    private ListView\u003cBook\u003e bookListView;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"     * Creates a {@code BookListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"    public BookListPanel(ObservableList\u003cBook\u003e bookList) {","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"        super(FXML);","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"        logger.info(\"Creating Book List Panel\");","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"        bookListView.setItems(bookList);","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"        bookListView.setCellFactory(listView -\u003e new BookListViewCell());","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Book} using a {@code BookCard}.","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"    class BookListViewCell extends ListCell\u003cBook\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"        protected void updateItem(Book book, boolean empty) {","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"            super.updateItem(book, empty);","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"            if (empty || book \u003d\u003d null) {","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"                setText(null);","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"            } else {","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"                setGraphic(new BookCard(book, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yl-ang":50}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"            CommandResult commandResult \u003d commandExecutor.execute(commandText);","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"            if (commandResult.isPrevious()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"                final String previousCommand \u003d commandResult.getFeedbackToUser().split(\"\\\\|+\")[0];","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"                commandTextField.setText(previousCommand);","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"                return;","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"            return;","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"yl-ang":8,"-":84}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-w14-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yl-ang":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"    private PatronListPanel patronListPanel;","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"    private BookListPanel bookListPanel;","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"    private StackPane patronListPanelPlaceholder;","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"    private StackPane bookListPanelPlaceholder;","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"aditi2313"},"content":"        patronListPanel \u003d new PatronListPanel(logic.getFilteredPatronList());","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"yl-ang"},"content":"        patronListPanelPlaceholder.getChildren().add(patronListPanel.getRoot());","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"yl-ang"},"content":"        bookListPanel \u003d new BookListPanel(logic.getFilteredBookList());","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"yl-ang"},"content":"        bookListPanelPlaceholder.getChildren().add(bookListPanel.getRoot());","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getLibTaskFilePath());","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"yl-ang"},"content":"    public PatronListPanel getPatronListPanel() {","lastModifiedDate":"2022-03-11"},{"lineNumber":174,"author":{"gitId":"yl-ang"},"content":"        return patronListPanel;","lastModifiedDate":"2022-03-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":189,"author":{"gitId":"yl-ang"},"content":"            if (commandResult.isPrevious()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":190,"author":{"gitId":"yl-ang"},"content":"                final String previousCommandResultText \u003d commandResult.getFeedbackToUser().split(\"\\\\|+\")[1];","lastModifiedDate":"2022-03-13"},{"lineNumber":191,"author":{"gitId":"yl-ang"},"content":"                resultDisplay.setFeedbackToUser(previousCommandResultText);","lastModifiedDate":"2022-03-13"},{"lineNumber":192,"author":{"gitId":"yl-ang"},"content":"                return commandResult;","lastModifiedDate":"2022-03-13"},{"lineNumber":193,"author":{"gitId":"yl-ang"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":194,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":195,"author":{"gitId":"yl-ang"},"content":"            logic.storePreviousCommand(commandText);","lastModifiedDate":"2022-03-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yl-ang":20,"-":191,"aditi2313":1,"bingsen0806":1}},{"path":"src/main/java/seedu/address/ui/PatronCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":" * A UI component that displays information of a {@code Patron}.","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"public class PatronCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"    private static final String FXML \u003d \"PatronListCard.fxml\";","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on LibTask level 4\u003c/a\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"    public final Patron patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"    private Label patronDisplayCardId;","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"    private Label patronId;","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"    private Label phone;","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"    private FlowPane patronRoleTags;","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"     * Creates a {@code PatronCode} with the given {@code Patron} and index to display.","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"    public PatronCard(Patron patron, int displayedIndex) {","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"        requireNonNull(patron);","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"        this.patron \u003d patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"        patronDisplayCardId.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"        name.setText(patron.getName().fullName);","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"        patronId.setText(\"ID: \" + patron.getId().value);","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"        phone.setText(\"Phone: \" + patron.getPhone().value);","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"        email.setText(\"Email: \" + patron.getEmail().value);","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"        patron.getTags().stream()","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"yl-ang"},"content":"                .forEach(tag -\u003e patronRoleTags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"yl-ang"},"content":"        if (!(other instanceof PatronCard)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"yl-ang"},"content":"        PatronCard card \u003d (PatronCard) other;","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"yl-ang"},"content":"        return patronDisplayCardId.getText().equals(card.patronDisplayCardId.getText())","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"yl-ang"},"content":"                \u0026\u0026 patron.equals(card.patron);","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yl-ang":25,"-":53,"aditi2313":1,"bingsen0806":1}},{"path":"src/main/java/seedu/address/ui/PatronListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":" * Panel containing the list of patrons.","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"public class PatronListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    private static final String FXML \u003d \"PatronListPanel.fxml\";","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PatronListPanel.class);","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    private ListView\u003cPatron\u003e patronListView;","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"     * Creates a {@code PatronListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"    public PatronListPanel(ObservableList\u003cPatron\u003e patronList) {","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"        logger.info(\"Creating Patron List Panel\");","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"        patronListView.setItems(patronList);","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"        patronListView.setCellFactory(listView -\u003e new PatronListViewCell());","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Patron} using a {@code PatronCard}.","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"    class PatronListViewCell extends ListCell\u003cPatron\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"        protected void updateItem(Patron patron, boolean empty) {","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"            super.updateItem(patron, empty);","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"            if (empty || patron \u003d\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"                setGraphic(new PatronCard(patron, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yl-ang":1,"-":33,"aditi2313":16}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/libtask_icon.png\";","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yl-ang":1,"-":87}},{"path":"src/main/resources/view/BookListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"        \u003cLabel fx:id\u003d\"bookCardDisplayId\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" textOverrun\u003d\"ELLIPSIS\"/\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"      \u003cFlowPane fx:id\u003d\"bookCategoryTags\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"      \u003c!-- Ensures that the author line will not be rendered if the book doesn\u0027t have an author--\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"      \u003cLabel fx:id\u003d\"authors\" styleClass\u003d\"cell_small_label\" visible\u003d\"false\" managed\u003d\"false\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"      \u003cLabel fx:id\u003d\"isbn\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$isbn\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"      \u003cFlowPane fx:id\u003d\"bookAvailableTag\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"      \u003cFlowPane fx:id\u003d\"bookBorrowTag\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"      \u003c!-- Ensures that the borrower and book return date line will not be rendered if the book is not borrowed--\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"      \u003cLabel fx:id\u003d\"borrower\" styleClass\u003d\"cell_small_label\" visible\u003d\"false\" managed\u003d\"false\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"      \u003cLabel fx:id\u003d\"bookReturnDate\" styleClass\u003d\"cell_small_label\" visible\u003d\"false\" managed\u003d\"false\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"      \u003c!-- Ensures that the requesters label will not be rendered if the book is not requested by anyone--\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"      \u003cFlowPane fx:id\u003d\"bookRequestTag\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"      \u003cLabel fx:id\u003d\"requestedBy\" styleClass\u003d\"cell_small_label\" visible\u003d\"false\" managed\u003d\"false\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yl-ang":44}},{"path":"src/main/resources/view/BookListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"  \u003cListView fx:id\u003d\"bookListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yl-ang":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"yl-ang"},"content":".cell_panel_title_panel {","lastModifiedDate":"2022-03-07"},{"lineNumber":136,"author":{"gitId":"yl-ang"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-07"},{"lineNumber":137,"author":{"gitId":"yl-ang"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2022-03-07"},{"lineNumber":138,"author":{"gitId":"yl-ang"},"content":"    -fx-text-fill: #F2F3F5;","lastModifiedDate":"2022-03-07"},{"lineNumber":139,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-07"},{"lineNumber":140,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":141,"author":{"gitId":"yl-ang"},"content":".cell_panel {","lastModifiedDate":"2022-03-07"},{"lineNumber":142,"author":{"gitId":"yl-ang"},"content":"     -fx-background-color: derive(#808080, 20%);","lastModifiedDate":"2022-03-07"},{"lineNumber":143,"author":{"gitId":"yl-ang"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2022-03-07"},{"lineNumber":144,"author":{"gitId":"yl-ang"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2022-03-07"},{"lineNumber":145,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-07"},{"lineNumber":146,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":300,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"yl-ang"},"content":"/** Different style classes for different types of tags **/","lastModifiedDate":"2022-03-08"},{"lineNumber":353,"author":{"gitId":"yl-ang"},"content":"#patronRoleTags {","lastModifiedDate":"2022-03-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"yl-ang"},"content":"#patronRoleTags .label {","lastModifiedDate":"2022-03-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":367,"author":{"gitId":"yl-ang"},"content":"#bookCategoryTags {","lastModifiedDate":"2022-03-08"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-08"},{"lineNumber":370,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":372,"author":{"gitId":"yl-ang"},"content":"#bookCategoryTags .label {","lastModifiedDate":"2022-03-08"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-08"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2022-03-08"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-08"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-08"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-08"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-08"},{"lineNumber":379,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":380,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":381,"author":{"gitId":"yl-ang"},"content":"#bookAvailableTag {","lastModifiedDate":"2022-03-09"},{"lineNumber":382,"author":{"gitId":"yl-ang"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-08"},{"lineNumber":383,"author":{"gitId":"yl-ang"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-08"},{"lineNumber":384,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":385,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":386,"author":{"gitId":"yl-ang"},"content":"#bookAvailableTag .label {","lastModifiedDate":"2022-03-09"},{"lineNumber":387,"author":{"gitId":"yl-ang"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-17"},{"lineNumber":388,"author":{"gitId":"yl-ang"},"content":"    -fx-background-color: #00D100;","lastModifiedDate":"2022-03-09"},{"lineNumber":389,"author":{"gitId":"yl-ang"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-09"},{"lineNumber":390,"author":{"gitId":"yl-ang"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-09"},{"lineNumber":391,"author":{"gitId":"yl-ang"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-09"},{"lineNumber":392,"author":{"gitId":"yl-ang"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-09"},{"lineNumber":393,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":394,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":395,"author":{"gitId":"yl-ang"},"content":"#bookBorrowTag {","lastModifiedDate":"2022-03-09"},{"lineNumber":396,"author":{"gitId":"yl-ang"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-09"},{"lineNumber":397,"author":{"gitId":"yl-ang"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-09"},{"lineNumber":398,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":399,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":400,"author":{"gitId":"yl-ang"},"content":"#bookBorrowTag .label {","lastModifiedDate":"2022-03-09"},{"lineNumber":401,"author":{"gitId":"yl-ang"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-09"},{"lineNumber":402,"author":{"gitId":"yl-ang"},"content":"    -fx-background-color: #880808;","lastModifiedDate":"2022-03-09"},{"lineNumber":403,"author":{"gitId":"yl-ang"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-08"},{"lineNumber":404,"author":{"gitId":"yl-ang"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-08"},{"lineNumber":405,"author":{"gitId":"yl-ang"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-08"},{"lineNumber":406,"author":{"gitId":"yl-ang"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-08"},{"lineNumber":407,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":408,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":409,"author":{"gitId":"yl-ang"},"content":"#bookRequestTag {","lastModifiedDate":"2022-03-24"},{"lineNumber":410,"author":{"gitId":"yl-ang"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-24"},{"lineNumber":411,"author":{"gitId":"yl-ang"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-24"},{"lineNumber":412,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":413,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":414,"author":{"gitId":"yl-ang"},"content":"#bookRequestTag .label {","lastModifiedDate":"2022-03-24"},{"lineNumber":415,"author":{"gitId":"yl-ang"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-24"},{"lineNumber":416,"author":{"gitId":"yl-ang"},"content":"    -fx-background-color: #ba4a00;","lastModifiedDate":"2022-03-24"},{"lineNumber":417,"author":{"gitId":"yl-ang"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-24"},{"lineNumber":418,"author":{"gitId":"yl-ang"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-24"},{"lineNumber":419,"author":{"gitId":"yl-ang"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-24"},{"lineNumber":420,"author":{"gitId":"yl-ang"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-24"},{"lineNumber":421,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"yl-ang":60,"-":361}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"\u003cfx:root minHeight\u003d\"650\" minWidth\u003d\"950\" onCloseRequest\u003d\"#handleExit\" title\u003d\"LibTask\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"    \u003c!-- LibTask icon from https://www.flaticon.com/free-icon/book_1164651 --\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"    \u003cImage url\u003d\"@/images/libtask_icon.png\" /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"150\" minHeight\u003d\"150\" prefHeight\u003d\"150\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"        \u003cVBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"          \u003c!-- Solution below adapted from https://docs.oracle.com/javafx/2/get_started/fxml_example.fxml.html --\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"          \u003cGridPane alignment\u003d\"CENTER\" VBox.vgrow\u003d\"ALWAYS\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"            \u003cVBox minWidth\u003d\"450.0\" styleClass\u003d\"cell_panel\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"0\" GridPane.vgrow\u003d\"NEVER\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"              \u003cLabel alignment\u003d\"CENTER\" maxWidth\u003d\"Infinity\" prefWidth\u003d\"449.0\" styleClass\u003d\"cell_panel_title_panel\" text\u003d\"Patron List\" textAlignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"yl-ang"},"content":"            \u003cVBox minWidth\u003d\"450.0\" styleClass\u003d\"cell_panel\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"0\" GridPane.vgrow\u003d\"NEVER\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"yl-ang"},"content":"              \u003cLabel alignment\u003d\"CENTER\" maxWidth\u003d\"Infinity\" prefWidth\u003d\"450.0\" styleClass\u003d\"cell_panel_title_panel\" text\u003d\"Book List\" textAlignment\u003d\"CENTER\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"yl-ang"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"            \u003cVBox fx:id\u003d\"patronList\" minWidth\u003d\"450.0\" styleClass\u003d\"pane-with-border\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"1\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":66,"author":{"gitId":"yl-ang"},"content":"                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":68,"author":{"gitId":"yl-ang"},"content":"              \u003cStackPane fx:id\u003d\"patronListPanelPlaceholder\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"-Infinity\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":71,"author":{"gitId":"yl-ang"},"content":"            \u003cVBox fx:id\u003d\"bookList\" minWidth\u003d\"450.0\" styleClass\u003d\"pane-with-border\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"yl-ang"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"yl-ang"},"content":"                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"yl-ang"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"yl-ang"},"content":"              \u003cStackPane fx:id\u003d\"bookListPanelPlaceholder\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"-Infinity\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":76,"author":{"gitId":"yl-ang"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"yl-ang"},"content":"            \u003crowConstraints\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"yl-ang"},"content":"              \u003cRowConstraints maxHeight\u003d\"25\" /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":80,"author":{"gitId":"yl-ang"},"content":"              \u003cRowConstraints maxHeight\u003d\"100\" percentHeight\u003d\"100\" /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":81,"author":{"gitId":"yl-ang"},"content":"            \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":82,"author":{"gitId":"yl-ang"},"content":"            \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"yl-ang"},"content":"              \u003cColumnConstraints percentWidth\u003d\"50\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"yl-ang"},"content":"              \u003cColumnConstraints percentWidth\u003d\"50\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"yl-ang"},"content":"            \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"yl-ang"},"content":"          \u003c/GridPane\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"yl-ang"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"yl-ang":43,"-":49,"aditi2313":1}},{"path":"src/main/resources/view/PatronListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"        \u003cLabel fx:id\u003d\"patronDisplayCardId\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" textOverrun\u003d\"ELLIPSIS\"/\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"      \u003cFlowPane fx:id\u003d\"patronRoleTags\"/\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"      \u003cLabel fx:id\u003d\"patronId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$patronId\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yl-ang":5,"-":31}},{"path":"src/main/resources/view/PatronListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"  \u003cListView fx:id\u003d\"patronListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":7,"aditi2313":1}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"        final Index fifthPatronIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"        assertTrue(fifthPatronIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"        assertTrue(fifthPatronIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"        assertTrue(fifthPatronIndex.equals(fifthPatronIndex));","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"        assertFalse(fifthPatronIndex.equals(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"        assertFalse(fifthPatronIndex.equals(5.0f));","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"        assertFalse(fifthPatronIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":53,"aditi2313":7}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"        assertNotNull(AppUtil.getImage(\"/images/libtask_icon.png\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":35,"bingsen0806":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PATRON_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.Command.PATRON_COMMAND_GROUP;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalPatrons.AMY;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.ListPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ReadOnlyLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.storage.JsonLibTaskStorage;","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"import seedu.address.testutil.PatronBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        JsonLibTaskStorage libTaskStorage \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"                new JsonLibTaskStorage(temporaryFolder.resolve(\"libtask.json\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        StorageManager storage \u003d new StorageManager(libTaskStorage, userPrefsStorage);","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"        String deleteCommand \u003d \"patron delete 9\";","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PATRON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"        String listCommand \u003d PATRON_COMMAND_GROUP + \" \" + Command.LIST_COMMAND_WORD;","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"        assertCommandSuccess(listCommand, ListPatronCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        // Setup LogicManager with JsonLibTaskIoExceptionThrowingStub","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"        JsonLibTaskStorage libTaskStorage \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"                new JsonLibTaskIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionLibTask.json\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"        StorageManager storage \u003d new StorageManager(libTaskStorage, userPrefsStorage);","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"        String addCommand \u003d PATRON_COMMAND_GROUP + \" \" + Command.ADD_COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"aditi2313"},"content":"                + EMAIL_DESC_AMY + ID_DESC_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"aditi2313"},"content":"        Patron expectedPatron \u003d new PatronBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"aditi2313"},"content":"        expectedModel.addPatron(expectedPatron);","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"aditi2313"},"content":"    public void getFilteredPatronList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"aditi2313"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPatronList().remove(0));","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"yl-ang"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"yl-ang"},"content":"    public void getFilteredBookList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"yl-ang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredBookList().remove(0));","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"Halpfrog"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"Halpfrog"},"content":"    public void storePreviousCommand_nullInput_throwsNullPointerException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"Halpfrog"},"content":"        assertThrows(NullPointerException.class, () -\u003e logic.storePreviousCommand(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"Halpfrog"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"    public void storePreviousCommand_validInput_storesInputInLibTask() {","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"Halpfrog"},"content":"        logic.storePreviousCommand(\"test\");","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(\"test\", logic.getLibTaskParser().getPreviousCommand());","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(model.getLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"    private static class JsonLibTaskIoExceptionThrowingStub extends JsonLibTaskStorage {","lastModifiedDate":"2022-03-13"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"        private JsonLibTaskIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-03-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"        public void saveLibTask(ReadOnlyLibTask libTask, Path filePath) throws IOException {","lastModifiedDate":"2022-03-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yl-ang":5,"-":134,"aditi2313":18,"bingsen0806":15,"Halpfrog":7}},{"path":"src/test/java/seedu/address/logic/commands/BookCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BORROW_DATE;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RETURN_DATE;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RETURN_DATE_2;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showBookAtIndex;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatronAtIndex;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_BOOKS;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATRON;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_BOOK;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATRON;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalLibTask;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":" * {@code BorrowCommand}.","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"public class BookCommandTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    private static final int BORROWED_BOOK_ONE_BASED_INDEX \u003d 3; // refers to the book AI in TypicalBooks","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    private Model model;","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    public void setup() {","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        model \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        Patron borrower \u003d model.getFilteredPatronList().get(INDEX_FIRST_PATRON.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        Book bookToBorrow \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        BorrowCommand borrowCommand \u003d new BorrowCommand(INDEX_FIRST_PATRON, INDEX_FIRST_BOOK, VALID_RETURN_DATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(BorrowCommand.MESSAGE_BORROW_BOOK_SUCCESS, borrower.getName(),","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"                bookToBorrow.getBookName(), VALID_RETURN_DATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.borrowBook(borrower, bookToBorrow, VALID_RETURN_DATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        assertCommandSuccess(borrowCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"    public void execute_invalidPatronIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatronList().size() + 1);","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        BorrowCommand borrowCommand \u003d new BorrowCommand(outOfBoundIndex, INDEX_FIRST_BOOK, VALID_RETURN_DATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(borrowCommand, model, Messages.MESSAGE_INVALID_PATRON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"    public void execute_invalidBookIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredBookList().size() + 1);","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        BorrowCommand borrowCommand \u003d new BorrowCommand(INDEX_FIRST_PATRON, outOfBoundIndex, VALID_RETURN_DATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(borrowCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"    public void execute_bookAlreadyBorrowedByOthers_throwsCommandException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        Index borrowedBookIndex \u003d Index.fromZeroBased(BORROWED_BOOK_ONE_BASED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        Book alreadyBorrowedBook \u003d model.getFilteredBookList().get(BORROWED_BOOK_ONE_BASED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"        BorrowCommand borrowCommand \u003d new BorrowCommand(INDEX_SECOND_PATRON, borrowedBookIndex, VALID_RETURN_DATE);","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"                Messages.MESSAGE_BOOK_ALREADY_BORROWED, alreadyBorrowedBook.getBookName());","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(borrowCommand, model, expectedMessage);","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"    public void execute_copyOfBookAlreadyBorrowedBySameBorrower_throwsCommandException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        // The first patron has already borrowed the 3rd book","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        Index borrowedBookIndex \u003d Index.fromZeroBased(BORROWED_BOOK_ONE_BASED_INDEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        BorrowCommand borrowCommand \u003d new BorrowCommand(INDEX_FIRST_PATRON, borrowedBookIndex, VALID_RETURN_DATE);","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"                BorrowCommand.MESSAGE_IS_BORROWING, model.getFilteredPatronList().get(0).getName());","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(borrowCommand, model, expectedMessage);","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"    public void execute_returnDateBeforeCurrentDate_throwsCommandException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        BorrowCommand borrowCommand \u003d new BorrowCommand(INDEX_FIRST_PATRON, INDEX_FIRST_BOOK, VALID_BORROW_DATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_RETURN_DATE_TOO_EARLY);","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(borrowCommand, model, expectedMessage);","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"        showPatronAtIndex(model, INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"        Book bookToBorrow \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"        Patron borrower \u003d model.getFilteredPatronList().get(INDEX_FIRST_PATRON.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"        BorrowCommand borrowCommand \u003d new BorrowCommand(INDEX_FIRST_PATRON, INDEX_FIRST_BOOK, VALID_RETURN_DATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(BorrowCommand.MESSAGE_BORROW_BOOK_SUCCESS, borrower.getName(),","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"                bookToBorrow.getBookName(), VALID_RETURN_DATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"        showPatronAtIndex(expectedModel, INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.borrowBook(borrower, bookToBorrow, VALID_RETURN_DATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"        assertCommandSuccess(borrowCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"    public void execute_invalidPatronIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"        showPatronAtIndex(model, INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PATRON;","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"        // ensures that outOfBoundIndex is still in bounds of patron list","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getLibTask().getPatronList().size());","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"        // ensures that book index is valid and in bounds of filtered book list","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(INDEX_FIRST_BOOK.getZeroBased() \u003c model.getFilteredBookList().size());","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"        BorrowCommand borrowCommand \u003d new BorrowCommand(outOfBoundIndex, INDEX_FIRST_BOOK, VALID_RETURN_DATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(borrowCommand, model, Messages.MESSAGE_INVALID_PATRON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"    public void execute_invalidBookIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"        showPatronAtIndex(model, INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_BOOK;","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"        // ensures that outOfBoundIndex is still in bounds of book list","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getLibTask().getBookList().size());","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"        // ensures that patron index is valid and in bounds of filtered patron list","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(INDEX_FIRST_PATRON.getZeroBased() \u003c model.getFilteredPatronList().size());","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"        BorrowCommand borrowCommand \u003d new BorrowCommand(INDEX_FIRST_PATRON, outOfBoundIndex, VALID_RETURN_DATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(borrowCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"    public void equals() {","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"        BorrowCommand borrowFirstCommand \u003d new BorrowCommand(INDEX_FIRST_PATRON, INDEX_FIRST_BOOK, VALID_RETURN_DATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"        BorrowCommand borrowSecondCommand \u003d new BorrowCommand(INDEX_SECOND_PATRON, INDEX_FIRST_BOOK, VALID_RETURN_DATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"        BorrowCommand borrowThirdCommand \u003d new BorrowCommand(INDEX_FIRST_PATRON, INDEX_SECOND_BOOK, VALID_RETURN_DATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"        BorrowCommand borrowFourthCommand \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"                new BorrowCommand(INDEX_FIRST_PATRON, INDEX_FIRST_BOOK, VALID_RETURN_DATE_2);","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"bingsen0806"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(borrowFirstCommand.equals(borrowFirstCommand));","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"        BorrowCommand borrowFirstCommandCopy \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"                new BorrowCommand(INDEX_FIRST_PATRON, INDEX_FIRST_BOOK, VALID_RETURN_DATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(borrowFirstCommand.equals(borrowFirstCommandCopy));","lastModifiedDate":"2022-03-16"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(borrowFirstCommand.equals(1));","lastModifiedDate":"2022-03-16"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":173,"author":{"gitId":"bingsen0806"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(borrowFirstCommand.equals(null));","lastModifiedDate":"2022-03-16"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"        // different patron index -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(borrowFirstCommand.equals(borrowSecondCommand));","lastModifiedDate":"2022-03-16"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"        // different book index -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(borrowFirstCommand.equals(borrowThirdCommand));","lastModifiedDate":"2022-03-16"},{"lineNumber":181,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":182,"author":{"gitId":"bingsen0806"},"content":"        // different return date -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":183,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(borrowFirstCommand.equals(borrowFourthCommand));","lastModifiedDate":"2022-03-16"},{"lineNumber":184,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":185,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"bingsen0806":185}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.LibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    public void execute_emptyLibTask_success() {","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    public void execute_nonEmptyLibTask_success() {","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"        Model model \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.setLibTask(new LibTask());","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":25,"bingsen0806":7}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"Halpfrog"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"Halpfrog"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"Halpfrog"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false)));","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"    public void test_isShowHelp_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"        CommandResult commandResult \u003d new CommandResult(\"Opened help window.\", true, false, false);","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"        assertTrue(commandResult.isShowHelp());","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"    public void test_isShowHelp_returnFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", false, false, false);","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"        assertFalse(commandResult.isShowHelp());","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"    public void test_isExit_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"        CommandResult commandResult \u003d new CommandResult(\"Exiting LibTask as requested ...\", false,","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"                true, false);","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"        assertTrue(commandResult.isExit());","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"    public void test_isExit_returnFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", false, false, false);","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"yl-ang"},"content":"        assertFalse(commandResult.isExit());","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"yl-ang"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"yl-ang"},"content":"    public void test_isPrevious_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"yl-ang"},"content":"        CommandResult commandResult \u003d new CommandResult(\"Here is your previous command.\", false,","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"yl-ang"},"content":"                false, true);","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"yl-ang"},"content":"        assertTrue(commandResult.isPrevious());","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"yl-ang"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"yl-ang"},"content":"    public void test_isPrevious_returnFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"yl-ang"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", false, false, false);","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"yl-ang"},"content":"        assertFalse(commandResult.isPrevious());","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"Halpfrog"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"Halpfrog"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false).hashCode());","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"yl-ang":36,"-":51,"Halpfrog":5}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AUTHOR;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ISBN;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.book.EditBookCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.LibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.testutil.EditBookDescriptorBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"import seedu.address.testutil.EditPatronDescriptorBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"    public static final String VALID_ID_AMY \u003d \"A0123456H\";","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"    public static final String VALID_ID_BOB \u003d \"A0123457H\";","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_BOOK_NAME_HARRY_POTTER \u003d \"Harry Potter and The Philosopher\u0027s Stone\";","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_BOOK_NAME_HUNGER_GAMES \u003d \"The Hunger Games: MockingJay\";","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_ISBN_HARRY_POTTER \u003d \"978-71617-018-8-5\";","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_ISBN_HARRY_POTTER_2 \u003d \"9787161701885\";","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_ISBN_HUNGER_GAMES \u003d \"9786029293883\";","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_AUTHOR_JK_ROWLING \u003d \"J. K. Rowling\";","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_AUTHOR_SUZANNE_COLLINS \u003d \"Suzanne Collins\";","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_TAG_ADVENTURE \u003d \"Adventure\";","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_TAG_MAGIC \u003d \"Magic\";","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_TAG_THRILLER \u003d \"Thriller\";","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_TAG_SCIFI \u003d \"Scifi\";","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_BORROW_DATE \u003d \"14-Fec-2022\";","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_RETURN_DATE \u003d \"28-Feb-2023\";","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_RETURN_DATE_2 \u003d \"28-Dec-2022\";","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"    public static final String ID_DESC_AMY \u003d \" \" + PREFIX_ID + VALID_ID_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"    public static final String ID_DESC_BOB \u003d \" \" + PREFIX_ID + VALID_ID_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    public static final String BOOK_NAME_DESC_HARRY_POTTER \u003d \" \" + PREFIX_NAME + VALID_BOOK_NAME_HARRY_POTTER;","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"    public static final String BOOK_NAME_DESC_HUNGER_GAMES \u003d \" \" + PREFIX_NAME + VALID_BOOK_NAME_HUNGER_GAMES;","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"    public static final String ISBN_DESC_HARRY_POTTER \u003d \" \" + PREFIX_ISBN + VALID_ISBN_HARRY_POTTER;","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    public static final String ISBN_DESC_HUNGER_GAMES \u003d \" \" + PREFIX_ISBN + VALID_ISBN_HUNGER_GAMES;","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"    public static final String ISBN_DESC_HARRY_POTTER_2 \u003d \" \" + PREFIX_ISBN + VALID_ISBN_HARRY_POTTER_2;","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"    public static final String AUTHOR_DESC_JK_ROWLING \u003d \" \" + PREFIX_AUTHOR + VALID_AUTHOR_JK_ROWLING;","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"    public static final String AUTHOR_DESC_SUZANNE_COLLINS \u003d \" \" + PREFIX_AUTHOR + VALID_AUTHOR_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"    public static final String TAG_DESC_ADVENTURE \u003d \" \" + PREFIX_TAG + VALID_TAG_ADVENTURE;","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"    public static final String TAG_DESC_MAGIC \u003d \" \" + PREFIX_TAG + VALID_TAG_MAGIC;","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"    public static final String TAG_DESC_THRILLER \u003d \" \" + PREFIX_TAG + VALID_TAG_THRILLER;","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"    public static final String TAG_DESC_SCIFI \u003d \" \" + PREFIX_TAG + VALID_TAG_SCIFI;","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"aditi2313"},"content":"    public static final String INVALID_ID_DESC \u003d \" \" + PREFIX_ID; // empty string not allowed for ids","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"    public static final String INVALID_BOOK_NAME_DESC \u003d \" \" + PREFIX_NAME + \"@HarryPotter\"; // \u0027@\u0027 not allowed in names","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"    public static final String INVALID_ISBN_DESC \u003d \" \" + PREFIX_ISBN + \"911a\";","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"    public static final String INVALID_AUTHOR_DESC \u003d \" \" + PREFIX_AUTHOR + \"@@@\"; // \u0027@\u0027 not allowed for author","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"    public static final String INVALID_DATE \u003d \"28Feb2022\";","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"aditi2313"},"content":"    public static final EditPatronCommand.EditPatronDescriptor DESC_AMY;","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"aditi2313"},"content":"    public static final EditPatronCommand.EditPatronDescriptor DESC_BOB;","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"yuqitanyq"},"content":"    public static final EditBookCommand.EditBookDescriptor DESC_HARRY_POTTER;","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"yuqitanyq"},"content":"    public static final EditBookCommand.EditBookDescriptor DESC_HUNGER_GAMES;","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"aditi2313"},"content":"        DESC_AMY \u003d new EditPatronDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"aditi2313"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withId(VALID_ID_AMY)","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"aditi2313"},"content":"        DESC_BOB \u003d new EditPatronDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"aditi2313"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withId(VALID_ID_BOB)","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"yuqitanyq"},"content":"        DESC_HARRY_POTTER \u003d new EditBookDescriptorBuilder().withBookName(VALID_BOOK_NAME_HARRY_POTTER)","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"yuqitanyq"},"content":"                .withIsbn(VALID_ISBN_HARRY_POTTER).withAuthors(VALID_AUTHOR_JK_ROWLING)","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"yuqitanyq"},"content":"                .withTags(VALID_TAG_THRILLER, VALID_TAG_MAGIC).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"yuqitanyq"},"content":"        DESC_HUNGER_GAMES \u003d new EditBookDescriptorBuilder().withBookName(VALID_BOOK_NAME_HUNGER_GAMES)","lastModifiedDate":"2022-03-12"},{"lineNumber":114,"author":{"gitId":"yuqitanyq"},"content":"                .withIsbn(VALID_ISBN_HUNGER_GAMES).withAuthors(VALID_AUTHOR_SUZANNE_COLLINS)","lastModifiedDate":"2022-03-12"},{"lineNumber":115,"author":{"gitId":"yuqitanyq"},"content":"                .withTags(VALID_TAG_THRILLER).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"     * - the LibTask, filtered patron list and selected patron in {@code actualModel} remain unchanged","lastModifiedDate":"2022-03-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"        LibTask expectedLibTask \u003d new LibTask(actualModel.getLibTask());","lastModifiedDate":"2022-03-13"},{"lineNumber":154,"author":{"gitId":"aditi2313"},"content":"        List\u003cPatron\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPatronList());","lastModifiedDate":"2022-03-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedLibTask, actualModel.getLibTask());","lastModifiedDate":"2022-03-13"},{"lineNumber":158,"author":{"gitId":"aditi2313"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPatronList());","lastModifiedDate":"2022-03-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":162,"author":{"gitId":"aditi2313"},"content":"     * Updates {@code model}\u0027s filtered list to show only the patron at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-12"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"     * {@code model}\u0027s LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":165,"author":{"gitId":"aditi2313"},"content":"    public static void showPatronAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-12"},{"lineNumber":166,"author":{"gitId":"aditi2313"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPatronList().size());","lastModifiedDate":"2022-03-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":168,"author":{"gitId":"aditi2313"},"content":"        Patron patron \u003d model.getFilteredPatronList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":169,"author":{"gitId":"aditi2313"},"content":"        final String[] splitName \u003d patron.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-12"},{"lineNumber":170,"author":{"gitId":"aditi2313"},"content":"        model.updateFilteredPatronList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":172,"author":{"gitId":"aditi2313"},"content":"        assertEquals(1, model.getFilteredPatronList().size());","lastModifiedDate":"2022-03-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"     * Updates {@code model}\u0027s filtered list to show only the book at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-11"},{"lineNumber":177,"author":{"gitId":"bingsen0806"},"content":"     * {@code model}\u0027s LibTask.","lastModifiedDate":"2022-03-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"    public static void showBookAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-11"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredBookList().size());","lastModifiedDate":"2022-03-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":182,"author":{"gitId":"bingsen0806"},"content":"        Book book \u003d model.getFilteredBookList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":183,"author":{"gitId":"bingsen0806"},"content":"        model.updateFilteredBookList(x -\u003e x.equals(book));","lastModifiedDate":"2022-03-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":185,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(1, model.getFilteredBookList().size());","lastModifiedDate":"2022-03-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"yuqitanyq":11,"-":105,"bingsen0806":47,"aditi2313":25}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Halpfrog"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":19,"Halpfrog":1}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Halpfrog"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":19,"Halpfrog":1}},{"path":"src/test/java/seedu/address/logic/commands/PreviousCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Halpfrog"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"Halpfrog"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"Halpfrog"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"Halpfrog"},"content":"import static seedu.address.logic.commands.PreviousCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"Halpfrog"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"Halpfrog"},"content":"class PreviousCommandTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"Halpfrog"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"Halpfrog"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"Halpfrog"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"Halpfrog"},"content":"    void getMessageForUi() {","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"Halpfrog"},"content":"        PreviousCommand previousCommand \u003d new PreviousCommand(\"testMessage\");","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"Halpfrog"},"content":"        String expectedMessage \u003d \"testMessage|\" + MESSAGE_SUCCESS;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"Halpfrog"},"content":"        assertEquals(expectedMessage, previousCommand.getMessageForUi());","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"Halpfrog"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"Halpfrog"},"content":"    void execute_previousCommand_success() {","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"Halpfrog"},"content":"        String expectedSuccessMessage \u003d \"|\" + MESSAGE_SUCCESS;","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"Halpfrog"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedSuccessMessage, false, false,","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"Halpfrog"},"content":"                true);","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"Halpfrog"},"content":"        assertCommandSuccess(new PreviousCommand(\"\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"Halpfrog"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"Halpfrog":30}},{"path":"src/test/java/seedu/address/logic/commands/ReturnAllBooksCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatronAtIndex;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATRON;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATRON;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookStatus;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalBooks;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalLibTask;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalPatrons;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":" * {@code ReturnAllBooksCommand}.","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"public class ReturnAllBooksCommandTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    private static final Patron borrower \u003d TypicalPatrons.getTypicalPatrons().get(0);","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    private static final Book borrowedBook \u003d TypicalBooks.getTypicalBooks().get(3);","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    private Model model;","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    public void setup() {","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        model \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        // The fourth book TypicalBooks is already borrowed by the first patron in TypicalPatrons","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        ReturnAllBooksCommand returnCommand \u003d new ReturnAllBooksCommand(INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(ReturnAllBooksCommand.MESSAGE_SUCCESS, borrower.getName());","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        Book updatedBook \u003d new BookBuilder(borrowedBook).withBookStatus(BookStatus.createAvailableBookStatus()).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.setBook(borrowedBook, updatedBook);","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        assertCommandSuccess(returnCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatronList().size() + 1);","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        ReturnAllBooksCommand returnCommand \u003d new ReturnAllBooksCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(returnCommand, model, Messages.MESSAGE_INVALID_PATRON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"    public void execute_patronHasNoBookToReturn_throwsCommandException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        Patron patronIndexTwo \u003d model.getFilteredPatronList().get(INDEX_SECOND_PATRON.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        ReturnAllBooksCommand returnCommand \u003d new ReturnAllBooksCommand(INDEX_SECOND_PATRON);","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_NO_BOOKS_BORROWED, patronIndexTwo.getName());","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(returnCommand, model, expectedMessage);","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        showPatronAtIndex(model, INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PATRON;","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"        // ensures that outOfBoundIndex is still in bounds of book list","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getLibTask().getPatronList().size());","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"        ReturnAllBooksCommand returnCommand \u003d new ReturnAllBooksCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(returnCommand, model, Messages.MESSAGE_INVALID_PATRON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        showPatronAtIndex(model, INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"        ReturnAllBooksCommand returnCommand \u003d new ReturnAllBooksCommand(INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(ReturnAllBooksCommand.MESSAGE_SUCCESS, borrower.getName());","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        Book updatedBook \u003d new BookBuilder(borrowedBook).withBookStatus(BookStatus.createAvailableBookStatus()).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.setBook(borrowedBook, updatedBook);","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"        model.updateFilteredPatronList(Model.PREDICATE_SHOW_ALL_PATRONS);","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"        assertCommandSuccess(returnCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    public void equals() {","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"        ReturnAllBooksCommand returnCommandFirst \u003d new ReturnAllBooksCommand(INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"        ReturnAllBooksCommand returnCommandSecond \u003d new ReturnAllBooksCommand(INDEX_SECOND_PATRON);","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(returnCommandFirst.equals(returnCommandFirst));","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"        ReturnAllBooksCommand returnCommandFirstCopy \u003d new ReturnAllBooksCommand(INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(returnCommandFirst.equals(returnCommandFirstCopy));","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(returnCommandFirst.equals(1));","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(returnCommandFirst.equals(null));","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(returnCommandFirst.equals(returnCommandSecond));","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"bingsen0806":123}},{"path":"src/test/java/seedu/address/logic/commands/ReturnOneBookCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showBookAtIndex;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FOURTH_BOOK;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_BOOK;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookStatus;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalLibTask;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":" * {@code ReturnOneBookCommand}.","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"public class ReturnOneBookCommandTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    private Model model;","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    public void setup() {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        model \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        // The fourth book TypicalBooks is already borrowed","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        Book bookToReturn \u003d model.getFilteredBookList().get(INDEX_FOURTH_BOOK.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        ReturnOneBookCommand returnCommand \u003d new ReturnOneBookCommand(INDEX_FOURTH_BOOK);","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(ReturnOneBookCommand.MESSAGE_SUCCESS, bookToReturn.getBookName());","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        Book updatedBook \u003d new BookBuilder(bookToReturn).withBookStatus(BookStatus.createAvailableBookStatus()).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.setBook(bookToReturn, updatedBook);","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        assertCommandSuccess(returnCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    public void execute_bookNotBorrowed_throwsCommandException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        // The first book TypicalBooks is not borrowed","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        Book bookToReturn \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        ReturnOneBookCommand returnCommand \u003d new ReturnOneBookCommand(INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_BOOK_NOT_BORROWED, bookToReturn.getBookName());","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(returnCommand, model, expectedMessage);","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredBookList().size() + 1);","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        ReturnOneBookCommand returnCommand \u003d new ReturnOneBookCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(returnCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"    public void execute_validIndexFilteredList_success() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        showBookAtIndex(model, INDEX_FOURTH_BOOK);","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        Book bookToReturn \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        ReturnOneBookCommand returnCommand \u003d new ReturnOneBookCommand(INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(ReturnOneBookCommand.MESSAGE_SUCCESS, bookToReturn.getBookName());","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"        Book updatedBook \u003d new BookBuilder(bookToReturn).withBookStatus(BookStatus.createAvailableBookStatus()).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.setBook(bookToReturn, updatedBook);","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        assertCommandSuccess(returnCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_BOOK;","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        // ensures that outOfBoundIndex is still in bounds of book list","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getLibTask().getBookList().size());","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        ReturnOneBookCommand returnCommand \u003d new ReturnOneBookCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(returnCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    public void equals() {","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"        ReturnOneBookCommand returnCommandFirst \u003d new ReturnOneBookCommand(INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"        ReturnOneBookCommand returnCommandSecond \u003d new ReturnOneBookCommand(INDEX_SECOND_BOOK);","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(returnCommandFirst.equals(returnCommandFirst));","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"        ReturnOneBookCommand returnCommandFirstCopy \u003d new ReturnOneBookCommand(INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(returnCommandFirst.equals(returnCommandFirstCopy));","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(returnCommandFirst.equals(1));","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(returnCommandFirst.equals(null));","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(returnCommandFirst.equals(returnCommandSecond));","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"bingsen0806":123}},{"path":"src/test/java/seedu/address/logic/commands/book/AddBookCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":" * Contains integration tests (interaction with the Model) for {@code AddBookCommand}.","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"public class AddBookCommandIntegrationTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    private Model model;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"        model \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    public void execute_newBook_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        Book validBook \u003d new BookBuilder().build();","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(model.getLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.addBook(validBook);","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        assertCommandSuccess(new AddBookCommand(validBook), model,","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"                String.format(AddBookCommand.MESSAGE_SUCCESS, validBook), expectedModel);","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"bingsen0806":38}},{"path":"src/test/java/seedu/address/logic/commands/book/AddBookCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_SAME_ISBN_INCONSISTENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalPatrons.ALICE;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalPatrons.BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.LibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ReadOnlyLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"public class AddBookCommandTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_nullBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddBookCommand(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    public void execute_bookAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        ModelStubAcceptingBookAdded modelStub \u003d new ModelStubAcceptingBookAdded();","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        Book validBook \u003d new BookBuilder().build();","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        CommandResult commandResult \u003d new AddBookCommand(validBook).execute(modelStub);","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(String.format(AddBookCommand.MESSAGE_SUCCESS, validBook), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(Arrays.asList(validBook), modelStub.booksAdded);","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    public void execute_bookWithSameIsbnExistButDifferentAuthor_throwsCommandException() throws CommandException {","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        ModelStubAcceptingBookAdded modelStub \u003d new ModelStubAcceptingBookAdded();","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        Book validBook \u003d new BookBuilder().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        new AddBookCommand(validBook).execute(modelStub);","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        // Fails to add a book which isbn was already added, but has different author","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        Book validBookDiffAuthor \u003d new BookBuilder(validBook).withAuthors(\"diff author\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        AddBookCommand errorCommand \u003d new AddBookCommand(validBookDiffAuthor);","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SAME_ISBN_INCONSISTENT, validBookDiffAuthor.getIsbn());","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e errorCommand.execute(modelStub));","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"    public void execute_bookWithSameIsbnExistButDifferentName_throwsCommandException() throws CommandException {","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        ModelStubAcceptingBookAdded modelStub \u003d new ModelStubAcceptingBookAdded();","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        Book validBook \u003d new BookBuilder().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        new AddBookCommand(validBook).execute(modelStub);","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        // Fails to add a book which isbn was already added, but has different name","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"        Book validBookDiffName \u003d new BookBuilder(validBook).withName(\"diff author\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        AddBookCommand errorCommand \u003d new AddBookCommand(validBookDiffName);","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SAME_ISBN_INCONSISTENT, validBookDiffName.getIsbn());","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e errorCommand.execute(modelStub));","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"    public void execute_bookWithSameIsbnExistButDifferentTags_addSuccessful() throws CommandException {","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        ModelStubAcceptingBookAdded modelStub \u003d new ModelStubAcceptingBookAdded();","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        Book validBook \u003d new BookBuilder().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"        new AddBookCommand(validBook).execute(modelStub);","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        // Able to add book that has same isbn as existing books, but different tags","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        Book validBookDiffTags \u003d new BookBuilder(validBook).withTags(\"difftag1\", \"difftag2\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        CommandResult commandResult \u003d new AddBookCommand(validBookDiffTags).execute(modelStub);","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(String.format(AddBookCommand.MESSAGE_SUCCESS, validBookDiffTags),","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(Arrays.asList(validBook, validBookDiffTags), modelStub.booksAdded);","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"    public void execute_successfulDeleteRequest() throws CommandException {","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        ModelStubAcceptingBookAdded modelStub \u003d new ModelStubAcceptingBookAdded();","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"        Book validBook \u003d new BookBuilder().withRequesters(ALICE, BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"        new AddBookCommand(validBook).execute(modelStub);","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"        // After a book that has same isbn as existing books is added, all requests for that isbn is removed","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"        Book validBookCopy \u003d new BookBuilder(validBook).withRequesters().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(AddBookCommand.MESSAGE_SUCCESS, validBookCopy)","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"                + String.format(\"You should notify %s about availability of %s\\n\",","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"                BOB.getName(), validBook.getBookName())","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"                + String.format(\"You should notify %s about availability of %s\\n\",","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"                ALICE.getName(), validBook.getBookName());","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"        CommandResult commandResult \u003d new AddBookCommand(validBookCopy).execute(modelStub);","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedMessage, commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(Arrays.asList(validBookCopy, validBookCopy), modelStub.booksAdded);","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"    public void equals() {","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"        Book harryPotter \u003d new BookBuilder().withName(\"Harry Potter\").build();","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"        Book hungerGames \u003d new BookBuilder().withName(\"Hunger Games\").build();","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"        AddBookCommand addHarryPotterCommand \u003d new AddBookCommand(harryPotter);","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"        AddBookCommand addHungerGamesCommand \u003d new AddBookCommand(hungerGames);","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(addHarryPotterCommand.equals(addHarryPotterCommand));","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"        AddBookCommand addHarryPotterCommandCopy \u003d new AddBookCommand(harryPotter);","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(addHarryPotterCommand.equals(addHarryPotterCommandCopy));","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(addHarryPotterCommand.equals(1));","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(addHarryPotterCommand.equals(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"        // different book -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(addHarryPotterCommand.equals(addHungerGamesCommand));","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"        // different timeAdded for book -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"        Book harryPotter2 \u003d new BookBuilder(harryPotter).withTimeAdded(0).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"        AddBookCommand addHarryPotterCommand2 \u003d new AddBookCommand(harryPotter2);","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(addHarryPotterCommand.equals(addHarryPotterCommand2));","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-11"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-11"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-11"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"bingsen0806"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-11"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"        public Path getLibTaskFilePath() {","lastModifiedDate":"2022-03-13"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"        public void setLibTaskFilePath(Path libTaskFilePath) {","lastModifiedDate":"2022-03-13"},{"lineNumber":173,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":177,"author":{"gitId":"aditi2313"},"content":"        public void addPatron(Patron patron) {","lastModifiedDate":"2022-03-12"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":181,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":182,"author":{"gitId":"bingsen0806"},"content":"        public void addBook(Book book) {","lastModifiedDate":"2022-03-11"},{"lineNumber":183,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":184,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":185,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":186,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":187,"author":{"gitId":"bingsen0806"},"content":"        public void setLibTask(ReadOnlyLibTask newData) {","lastModifiedDate":"2022-03-13"},{"lineNumber":188,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":189,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":190,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":191,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":192,"author":{"gitId":"bingsen0806"},"content":"        public ReadOnlyLibTask getLibTask() {","lastModifiedDate":"2022-03-13"},{"lineNumber":193,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":194,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":195,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":196,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":197,"author":{"gitId":"aditi2313"},"content":"        public boolean hasPatron(Patron patron) {","lastModifiedDate":"2022-03-12"},{"lineNumber":198,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":199,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":200,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":201,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":202,"author":{"gitId":"bingsen0806"},"content":"        public boolean hasBook(Book book) {","lastModifiedDate":"2022-03-11"},{"lineNumber":203,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":204,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":205,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":206,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"bingsen0806"},"content":"        public boolean hasSameIsbnDiffAuthorsOrName(Book bookToCheck) {","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":209,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":210,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":211,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"bingsen0806"},"content":"        public boolean hasSameIsbn(Book bookToCheck) {","lastModifiedDate":"2022-03-22"},{"lineNumber":213,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":214,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":215,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":216,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":217,"author":{"gitId":"bingsen0806"},"content":"        public String deleteAllRequests(Book ... books) {","lastModifiedDate":"2022-03-22"},{"lineNumber":218,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":219,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":220,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":221,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":222,"author":{"gitId":"aditi2313"},"content":"        public void deletePatron(Patron target) {","lastModifiedDate":"2022-03-12"},{"lineNumber":223,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":224,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":225,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":226,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":227,"author":{"gitId":"bingsen0806"},"content":"        public void deleteBook(Book target) {","lastModifiedDate":"2022-03-11"},{"lineNumber":228,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":229,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":230,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":231,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":232,"author":{"gitId":"aditi2313"},"content":"        public void setPatron(Patron target, Patron editedPatron) {","lastModifiedDate":"2022-03-12"},{"lineNumber":233,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":234,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":235,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":236,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":237,"author":{"gitId":"bingsen0806"},"content":"        public void setBook(Book target, Book editedBook) {","lastModifiedDate":"2022-03-11"},{"lineNumber":238,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":239,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":240,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":241,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":242,"author":{"gitId":"bingsen0806"},"content":"        public boolean setAndEditBook(Book target, Book editedBook) {","lastModifiedDate":"2022-03-22"},{"lineNumber":243,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":244,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":245,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":246,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":247,"author":{"gitId":"bingsen0806"},"content":"        public String updateBookAfterPatronEdit(Patron target, Patron editedPatron) {","lastModifiedDate":"2022-03-22"},{"lineNumber":248,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":249,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":250,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":251,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":252,"author":{"gitId":"bingsen0806"},"content":"        public String updateBookAfterPatronDelete(Patron deletedPatron) {","lastModifiedDate":"2022-03-22"},{"lineNumber":253,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":254,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":255,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":256,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":257,"author":{"gitId":"bingsen0806"},"content":"        public void addRequest(Book bookToRequest, Patron requester) {","lastModifiedDate":"2022-03-22"},{"lineNumber":258,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":259,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":260,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":261,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":262,"author":{"gitId":"bingsen0806"},"content":"        public boolean hasAvailableCopy(Book book) {","lastModifiedDate":"2022-03-22"},{"lineNumber":263,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":264,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":265,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":266,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":267,"author":{"gitId":"bingsen0806"},"content":"        public boolean isBorrowing(Patron patron, Book book) {","lastModifiedDate":"2022-03-22"},{"lineNumber":268,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":269,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":270,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":271,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":272,"author":{"gitId":"bingsen0806"},"content":"        public List\u003cBook\u003e returnAllBorrowedBooks(Patron borrower) {","lastModifiedDate":"2022-03-22"},{"lineNumber":273,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":274,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":275,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":276,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":277,"author":{"gitId":"bingsen0806"},"content":"        public boolean isBorrowingSomeBook(Patron borrower) {","lastModifiedDate":"2022-03-16"},{"lineNumber":278,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":279,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":280,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":281,"author":{"gitId":"aditi2313"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":282,"author":{"gitId":"aditi2313"},"content":"        public boolean hasOverdueBooks(Patron patron) {","lastModifiedDate":"2022-03-22"},{"lineNumber":283,"author":{"gitId":"aditi2313"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":284,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":285,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":286,"author":{"gitId":"aditi2313"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":287,"author":{"gitId":"aditi2313"},"content":"        public boolean hasEditedPatron(Patron oldPatron, Patron editedPatron) {","lastModifiedDate":"2022-03-29"},{"lineNumber":288,"author":{"gitId":"aditi2313"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":289,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":290,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":291,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":292,"author":{"gitId":"bingsen0806"},"content":"        public void borrowBook(Patron borrower, Book bookToBorrow, String returnDate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":293,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":294,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":295,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":296,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":297,"author":{"gitId":"aditi2313"},"content":"        public ObservableList\u003cPatron\u003e getFilteredPatronList() {","lastModifiedDate":"2022-03-12"},{"lineNumber":298,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":299,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":300,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":301,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":302,"author":{"gitId":"aditi2313"},"content":"        public void updateFilteredPatronList(Predicate\u003cPatron\u003e predicate) {","lastModifiedDate":"2022-03-12"},{"lineNumber":303,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":304,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":305,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":306,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":307,"author":{"gitId":"bingsen0806"},"content":"        public ObservableList\u003cBook\u003e getFilteredBookList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":308,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":309,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":310,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":311,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":312,"author":{"gitId":"bingsen0806"},"content":"        public void updateFilteredBookList(Predicate\u003cBook\u003e predicate) {","lastModifiedDate":"2022-03-11"},{"lineNumber":313,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":314,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":315,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":316,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":317,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":318,"author":{"gitId":"bingsen0806"},"content":"     * A Model stub that contains a single book.","lastModifiedDate":"2022-03-11"},{"lineNumber":319,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":320,"author":{"gitId":"bingsen0806"},"content":"    private class ModelStubWithBook extends ModelStub {","lastModifiedDate":"2022-03-11"},{"lineNumber":321,"author":{"gitId":"bingsen0806"},"content":"        private final Book book;","lastModifiedDate":"2022-03-11"},{"lineNumber":322,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":323,"author":{"gitId":"bingsen0806"},"content":"        ModelStubWithBook(Book book) {","lastModifiedDate":"2022-03-11"},{"lineNumber":324,"author":{"gitId":"bingsen0806"},"content":"            requireNonNull(book);","lastModifiedDate":"2022-03-11"},{"lineNumber":325,"author":{"gitId":"bingsen0806"},"content":"            this.book \u003d book;","lastModifiedDate":"2022-03-11"},{"lineNumber":326,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":327,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":328,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":329,"author":{"gitId":"bingsen0806"},"content":"        public boolean hasBook(Book book) {","lastModifiedDate":"2022-03-11"},{"lineNumber":330,"author":{"gitId":"bingsen0806"},"content":"            requireNonNull(book);","lastModifiedDate":"2022-03-11"},{"lineNumber":331,"author":{"gitId":"bingsen0806"},"content":"            return this.book.isSameBook(book);","lastModifiedDate":"2022-03-11"},{"lineNumber":332,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":333,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":334,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":335,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":336,"author":{"gitId":"bingsen0806"},"content":"     * A Model stub that always accept the book being added.","lastModifiedDate":"2022-03-11"},{"lineNumber":337,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":338,"author":{"gitId":"bingsen0806"},"content":"    private class ModelStubAcceptingBookAdded extends ModelStub {","lastModifiedDate":"2022-03-11"},{"lineNumber":339,"author":{"gitId":"bingsen0806"},"content":"        final ArrayList\u003cBook\u003e booksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":340,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":341,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":342,"author":{"gitId":"bingsen0806"},"content":"        public boolean hasBook(Book book) {","lastModifiedDate":"2022-03-11"},{"lineNumber":343,"author":{"gitId":"bingsen0806"},"content":"            requireNonNull(book);","lastModifiedDate":"2022-03-11"},{"lineNumber":344,"author":{"gitId":"bingsen0806"},"content":"            return booksAdded.stream().anyMatch(book::isSameBook);","lastModifiedDate":"2022-03-11"},{"lineNumber":345,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":346,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":347,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":348,"author":{"gitId":"bingsen0806"},"content":"        public void addBook(Book book) {","lastModifiedDate":"2022-03-11"},{"lineNumber":349,"author":{"gitId":"bingsen0806"},"content":"            requireNonNull(book);","lastModifiedDate":"2022-03-11"},{"lineNumber":350,"author":{"gitId":"bingsen0806"},"content":"            booksAdded.add(book);","lastModifiedDate":"2022-03-11"},{"lineNumber":351,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":352,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":353,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":354,"author":{"gitId":"bingsen0806"},"content":"        public boolean hasSameIsbnDiffAuthorsOrName(Book bookToCheck) {","lastModifiedDate":"2022-03-22"},{"lineNumber":355,"author":{"gitId":"bingsen0806"},"content":"            requireNonNull(bookToCheck);","lastModifiedDate":"2022-03-22"},{"lineNumber":356,"author":{"gitId":"bingsen0806"},"content":"            return booksAdded.stream().anyMatch(book -\u003e book.hasSameIsbn(bookToCheck)","lastModifiedDate":"2022-03-22"},{"lineNumber":357,"author":{"gitId":"bingsen0806"},"content":"                    \u0026\u0026 (!book.hasSameAuthors(bookToCheck) || !book.hasSameName(bookToCheck)));","lastModifiedDate":"2022-03-22"},{"lineNumber":358,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":359,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":360,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":361,"author":{"gitId":"bingsen0806"},"content":"        public String deleteAllRequests(Book ... books) {","lastModifiedDate":"2022-03-22"},{"lineNumber":362,"author":{"gitId":"bingsen0806"},"content":"            HashSet\u003cIsbn\u003e notifiedBooks \u003d new HashSet\u003c\u003e(); // To prevent adding the same notification multiple times","lastModifiedDate":"2022-03-22"},{"lineNumber":363,"author":{"gitId":"bingsen0806"},"content":"            StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-22"},{"lineNumber":364,"author":{"gitId":"bingsen0806"},"content":"            List\u003cBook\u003e booksToProcess \u003d Arrays.stream(books).collect(Collectors.toList());","lastModifiedDate":"2022-03-22"},{"lineNumber":365,"author":{"gitId":"bingsen0806"},"content":"            for (Book book : booksToProcess) {","lastModifiedDate":"2022-03-22"},{"lineNumber":366,"author":{"gitId":"bingsen0806"},"content":"                if (notifiedBooks.contains(book.getIsbn())) {","lastModifiedDate":"2022-03-22"},{"lineNumber":367,"author":{"gitId":"bingsen0806"},"content":"                    continue;","lastModifiedDate":"2022-03-22"},{"lineNumber":368,"author":{"gitId":"bingsen0806"},"content":"                }","lastModifiedDate":"2022-03-22"},{"lineNumber":369,"author":{"gitId":"bingsen0806"},"content":"                notifiedBooks.add(book.getIsbn());","lastModifiedDate":"2022-03-22"},{"lineNumber":370,"author":{"gitId":"bingsen0806"},"content":"                builder.append(deleteRequestSingleBook(book));","lastModifiedDate":"2022-03-22"},{"lineNumber":371,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":372,"author":{"gitId":"bingsen0806"},"content":"            return builder.toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":373,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":374,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":375,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":376,"author":{"gitId":"bingsen0806"},"content":"        public void setBook(Book target, Book editedBook) {","lastModifiedDate":"2022-03-22"},{"lineNumber":377,"author":{"gitId":"bingsen0806"},"content":"            requireAllNonNull(target, editedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":378,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":379,"author":{"gitId":"bingsen0806"},"content":"            int index \u003d booksAdded.indexOf(target);","lastModifiedDate":"2022-03-22"},{"lineNumber":380,"author":{"gitId":"bingsen0806"},"content":"            if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-22"},{"lineNumber":381,"author":{"gitId":"bingsen0806"},"content":"                throw new BookNotFoundException();","lastModifiedDate":"2022-03-22"},{"lineNumber":382,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":383,"author":{"gitId":"bingsen0806"},"content":"            booksAdded.set(index, editedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":384,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":385,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":386,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":387,"author":{"gitId":"bingsen0806"},"content":"        public ReadOnlyLibTask getLibTask() {","lastModifiedDate":"2022-03-13"},{"lineNumber":388,"author":{"gitId":"bingsen0806"},"content":"            return new LibTask();","lastModifiedDate":"2022-03-13"},{"lineNumber":389,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":390,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":391,"author":{"gitId":"bingsen0806"},"content":"        private String deleteRequestSingleBook(Book bookToDelete) {","lastModifiedDate":"2022-03-22"},{"lineNumber":392,"author":{"gitId":"bingsen0806"},"content":"            StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-22"},{"lineNumber":393,"author":{"gitId":"bingsen0806"},"content":"            boolean hasNotified \u003d false; // flag to prevent appending the same notification many times","lastModifiedDate":"2022-03-22"},{"lineNumber":394,"author":{"gitId":"bingsen0806"},"content":"            for (Book book : booksAdded) {","lastModifiedDate":"2022-03-22"},{"lineNumber":395,"author":{"gitId":"bingsen0806"},"content":"                if (!book.hasSameIsbn(bookToDelete) || book.getRequesters().isEmpty()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":396,"author":{"gitId":"bingsen0806"},"content":"                    continue;","lastModifiedDate":"2022-03-22"},{"lineNumber":397,"author":{"gitId":"bingsen0806"},"content":"                }","lastModifiedDate":"2022-03-22"},{"lineNumber":398,"author":{"gitId":"bingsen0806"},"content":"                if (!hasNotified) {","lastModifiedDate":"2022-03-22"},{"lineNumber":399,"author":{"gitId":"bingsen0806"},"content":"                    book.getRequesters().stream().forEach(requester -\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":400,"author":{"gitId":"bingsen0806"},"content":"                        builder.append(String.format(\"You should notify %s about availability of %s\\n\",","lastModifiedDate":"2022-03-22"},{"lineNumber":401,"author":{"gitId":"bingsen0806"},"content":"                                requester.getName(), book.getBookName())));","lastModifiedDate":"2022-03-22"},{"lineNumber":402,"author":{"gitId":"bingsen0806"},"content":"                    hasNotified \u003d true;","lastModifiedDate":"2022-03-22"},{"lineNumber":403,"author":{"gitId":"bingsen0806"},"content":"                }","lastModifiedDate":"2022-03-22"},{"lineNumber":404,"author":{"gitId":"bingsen0806"},"content":"                Book updatedBookEmptyRequest \u003d book.getBookWithEmptyRequest();","lastModifiedDate":"2022-03-22"},{"lineNumber":405,"author":{"gitId":"bingsen0806"},"content":"                setBook(book, updatedBookEmptyRequest);","lastModifiedDate":"2022-03-22"},{"lineNumber":406,"author":{"gitId":"bingsen0806"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":407,"author":{"gitId":"bingsen0806"},"content":"            return builder.toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":408,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":409,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":410,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"bingsen0806":393,"aditi2313":17}},{"path":"src/test/java/seedu/address/logic/commands/book/DeleteBookCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showBookAtIndex;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FOURTH_BOOK;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_BOOK;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":" * {@code DeleteBookCommand}.","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"public class DeleteBookCommandTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    private Model model \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        Book bookToDelete \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        DeleteBookCommand deleteCommand \u003d new DeleteBookCommand(INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(DeleteBookCommand.MESSAGE_DELETE_BOOK_SUCCESS, bookToDelete);","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.deleteBook(bookToDelete);","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredBookList().size() + 1);","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        DeleteBookCommand deleteCommand \u003d new DeleteBookCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        Book bookToDelete \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        DeleteBookCommand deleteCommand \u003d new DeleteBookCommand(INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(DeleteBookCommand.MESSAGE_DELETE_BOOK_SUCCESS, bookToDelete);","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(model.getLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.deleteBook(bookToDelete);","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        showNoBook(expectedModel);","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_BOOK;","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        // ensures that outOfBoundIndex is still in bounds of book list","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getLibTask().getBookList().size());","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"        DeleteBookCommand deleteCommand \u003d new DeleteBookCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"    public void execute_deleteBorrowedBook_throwsCommandException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"        DeleteBookCommand deleteCommand \u003d new DeleteBookCommand(INDEX_FOURTH_BOOK); // the fourth book is borrowed","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(deleteCommand, model, DeleteBookCommand.MESSAGE_DELETE_BORROWED_BOOK);","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"    public void equals() {","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        DeleteBookCommand deleteFirstCommand \u003d new DeleteBookCommand(INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        DeleteBookCommand deleteSecondCommand \u003d new DeleteBookCommand(INDEX_SECOND_BOOK);","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        DeleteBookCommand deleteFirstCommandCopy \u003d new DeleteBookCommand(INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"        // different book -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"    private void showNoBook(Model model) {","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"        model.updateFilteredBookList(p -\u003e false);","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(model.getFilteredBookList().isEmpty());","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"bingsen0806":116}},{"path":"src/test/java/seedu/address/logic/commands/book/EditBookCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_HARRY_POTTER;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_HUNGER_GAMES;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_JK_ROWLING;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HARRY_POTTER;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HUNGER_GAMES;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HARRY_POTTER;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MAGIC;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showBookAtIndex;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_BOOK;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.book.EditBookCommand.EditBookDescriptor;","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.LibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.testutil.EditBookDescriptorBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditBookCommand.","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"public class EditBookCommandTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"    private Model model;","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"yuqitanyq"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"yuqitanyq"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        model \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_allBookFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"yuqitanyq"},"content":"        Book editedBook \u003d new BookBuilder().build();","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"yuqitanyq"},"content":"        EditBookDescriptor bookDescriptor \u003d new EditBookDescriptorBuilder(editedBook).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand editBookCommand \u003d new EditBookCommand(INDEX_FIRST_BOOK, bookDescriptor);","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"yuqitanyq"},"content":"        String expectedMessage \u003d String.format(EditBookCommand.MESSAGE_EDIT_BOOK_SUCCESS, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(new LibTask(model.getLibTask()), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"yuqitanyq"},"content":"        expectedModel.setBook(model.getFilteredBookList().get(0), editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandSuccess(editBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_bookNameFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"yuqitanyq"},"content":"        Index indexLastBook \u003d Index.fromOneBased(model.getFilteredBookList().size());","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"yuqitanyq"},"content":"        Book lastBook \u003d model.getFilteredBookList().get(indexLastBook.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"yuqitanyq"},"content":"        BookBuilder bookInList \u003d new BookBuilder(lastBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"yuqitanyq"},"content":"        Book editedBook \u003d bookInList.withName(VALID_BOOK_NAME_HARRY_POTTER).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"yuqitanyq"},"content":"        EditBookDescriptor bookDescriptor \u003d new EditBookDescriptorBuilder()","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"yuqitanyq"},"content":"                .withBookName(VALID_BOOK_NAME_HARRY_POTTER).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand editBookCommand \u003d new EditBookCommand(indexLastBook, bookDescriptor);","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"yuqitanyq"},"content":"        String expectedMessage \u003d String.format(EditBookCommand.MESSAGE_EDIT_BOOK_SUCCESS, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(new LibTask(model.getLibTask()), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"yuqitanyq"},"content":"        expectedModel.setBook(lastBook, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandSuccess(editBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_isbnFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"yuqitanyq"},"content":"        Index indexLastBook \u003d Index.fromOneBased(model.getFilteredBookList().size());","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"yuqitanyq"},"content":"        Book lastBook \u003d model.getFilteredBookList().get(indexLastBook.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"yuqitanyq"},"content":"        BookBuilder bookInList \u003d new BookBuilder(lastBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"yuqitanyq"},"content":"        Book editedBook \u003d bookInList.withIsbn(VALID_ISBN_HARRY_POTTER).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"yuqitanyq"},"content":"        EditBookDescriptor bookDescriptor \u003d new EditBookDescriptorBuilder()","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"yuqitanyq"},"content":"                .withIsbn(VALID_ISBN_HARRY_POTTER).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand editBookCommand \u003d new EditBookCommand(indexLastBook, bookDescriptor);","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"yuqitanyq"},"content":"        String expectedMessage \u003d String.format(EditBookCommand.MESSAGE_EDIT_BOOK_SUCCESS, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(new LibTask(model.getLibTask()), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"yuqitanyq"},"content":"        expectedModel.setBook(lastBook, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandSuccess(editBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_authorFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"yuqitanyq"},"content":"        Index indexLastBook \u003d Index.fromOneBased(model.getFilteredBookList().size());","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"yuqitanyq"},"content":"        Book lastBook \u003d model.getFilteredBookList().get(indexLastBook.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"yuqitanyq"},"content":"        BookBuilder bookInList \u003d new BookBuilder(lastBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"yuqitanyq"},"content":"        Book editedBook \u003d bookInList.withAuthors(VALID_AUTHOR_JK_ROWLING).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"yuqitanyq"},"content":"        EditBookDescriptor bookDescriptor \u003d new EditBookDescriptorBuilder()","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"yuqitanyq"},"content":"                .withAuthors(VALID_AUTHOR_JK_ROWLING).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand editBookCommand \u003d new EditBookCommand(indexLastBook, bookDescriptor);","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"yuqitanyq"},"content":"        String expectedMessage \u003d String.format(EditBookCommand.MESSAGE_EDIT_BOOK_SUCCESS, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(new LibTask(model.getLibTask()), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"yuqitanyq"},"content":"        expectedModel.setBook(lastBook, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandSuccess(editBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_tagFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"yuqitanyq"},"content":"        Index indexLastBook \u003d Index.fromOneBased(model.getFilteredBookList().size());","lastModifiedDate":"2022-03-12"},{"lineNumber":123,"author":{"gitId":"yuqitanyq"},"content":"        Book lastBook \u003d model.getFilteredBookList().get(indexLastBook.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":125,"author":{"gitId":"yuqitanyq"},"content":"        BookBuilder bookInList \u003d new BookBuilder(lastBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":126,"author":{"gitId":"yuqitanyq"},"content":"        Book editedBook \u003d bookInList.withTags(VALID_TAG_MAGIC).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":128,"author":{"gitId":"yuqitanyq"},"content":"        EditBookDescriptor bookDescriptor \u003d new EditBookDescriptorBuilder()","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"yuqitanyq"},"content":"                .withTags(VALID_TAG_MAGIC).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":130,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand editBookCommand \u003d new EditBookCommand(indexLastBook, bookDescriptor);","lastModifiedDate":"2022-03-12"},{"lineNumber":131,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":132,"author":{"gitId":"yuqitanyq"},"content":"        String expectedMessage \u003d String.format(EditBookCommand.MESSAGE_EDIT_BOOK_SUCCESS, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":133,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(new LibTask(model.getLibTask()), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":135,"author":{"gitId":"yuqitanyq"},"content":"        expectedModel.setBook(lastBook, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":136,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":137,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandSuccess(editBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":138,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":139,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":140,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":141,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_noBookFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-12"},{"lineNumber":142,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand editBookCommand \u003d new EditBookCommand(INDEX_FIRST_BOOK, new EditBookDescriptor());","lastModifiedDate":"2022-03-12"},{"lineNumber":143,"author":{"gitId":"yuqitanyq"},"content":"        Book editedBook \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":144,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":145,"author":{"gitId":"yuqitanyq"},"content":"        String expectedMessage \u003d String.format(EditBookCommand.MESSAGE_EDIT_BOOK_SUCCESS, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":146,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(new LibTask(model.getLibTask()), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":148,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":149,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandSuccess(editBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":150,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":151,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":152,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":153,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-03-12"},{"lineNumber":154,"author":{"gitId":"yuqitanyq"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-12"},{"lineNumber":155,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":156,"author":{"gitId":"yuqitanyq"},"content":"        Book bookInFilteredList \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":157,"author":{"gitId":"yuqitanyq"},"content":"        Book editedBook \u003d new BookBuilder(bookInFilteredList).withName(VALID_BOOK_NAME_HARRY_POTTER).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":158,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand editBookCommand \u003d new EditBookCommand(INDEX_FIRST_BOOK,","lastModifiedDate":"2022-03-12"},{"lineNumber":159,"author":{"gitId":"yuqitanyq"},"content":"                new EditBookDescriptorBuilder().withBookName(VALID_BOOK_NAME_HARRY_POTTER).build());","lastModifiedDate":"2022-03-12"},{"lineNumber":160,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":161,"author":{"gitId":"yuqitanyq"},"content":"        String expectedMessage \u003d String.format(EditBookCommand.MESSAGE_EDIT_BOOK_SUCCESS, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":162,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(new LibTask(model.getLibTask()), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":164,"author":{"gitId":"yuqitanyq"},"content":"        expectedModel.setBook(model.getFilteredBookList().get(0), editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":165,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":166,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandSuccess(editBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":167,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":168,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":169,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":170,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_invalidBookIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-12"},{"lineNumber":171,"author":{"gitId":"yuqitanyq"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredBookList().size() + 1);","lastModifiedDate":"2022-03-12"},{"lineNumber":172,"author":{"gitId":"yuqitanyq"},"content":"        EditBookDescriptor bookDescriptor \u003d new EditBookDescriptorBuilder()","lastModifiedDate":"2022-03-12"},{"lineNumber":173,"author":{"gitId":"yuqitanyq"},"content":"                .withBookName(VALID_BOOK_NAME_HARRY_POTTER).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":174,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand editBookCommand \u003d new EditBookCommand(outOfBoundIndex, bookDescriptor);","lastModifiedDate":"2022-03-12"},{"lineNumber":175,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":176,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandFailure(editBookCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-12"},{"lineNumber":177,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":178,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"    public void execute_hasExistingIsbn_throwsCommandException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"bingsen0806"},"content":"        Index indexLastBook \u003d Index.fromOneBased(model.getFilteredBookList().size());","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"bingsen0806"},"content":"        Book lastBook \u003d model.getFilteredBookList().get(indexLastBook.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"bingsen0806"},"content":"        Book firstBook \u003d model.getFilteredBookList().get(0);","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"bingsen0806"},"content":"        String existingIsbn \u003d firstBook.getIsbn().toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"bingsen0806"},"content":"        EditBookDescriptor bookDescriptor \u003d new EditBookDescriptorBuilder().withIsbn(existingIsbn).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"bingsen0806"},"content":"        EditBookCommand editBookCommand \u003d new EditBookCommand(indexLastBook, bookDescriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(editBookCommand, model, EditBookCommand.MESSAGE_SAME_ISBN);","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":193,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_invalidBookIndexFilteredList_failure() {","lastModifiedDate":"2022-03-12"},{"lineNumber":194,"author":{"gitId":"yuqitanyq"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-12"},{"lineNumber":195,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":196,"author":{"gitId":"yuqitanyq"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_BOOK;","lastModifiedDate":"2022-03-12"},{"lineNumber":197,"author":{"gitId":"bingsen0806"},"content":"        //ensures that outOfBoundIndex is still in bounds of book list","lastModifiedDate":"2022-03-13"},{"lineNumber":198,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getLibTask().getBookList().size());","lastModifiedDate":"2022-03-13"},{"lineNumber":199,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":200,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand editBookCommand \u003d new EditBookCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-12"},{"lineNumber":201,"author":{"gitId":"yuqitanyq"},"content":"                new EditBookDescriptorBuilder().withBookName(VALID_BOOK_NAME_HUNGER_GAMES).build());","lastModifiedDate":"2022-03-12"},{"lineNumber":202,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":203,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandFailure(editBookCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-12"},{"lineNumber":204,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":205,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":206,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":207,"author":{"gitId":"yuqitanyq"},"content":"    public void equals() {","lastModifiedDate":"2022-03-12"},{"lineNumber":208,"author":{"gitId":"yuqitanyq"},"content":"        final EditBookCommand standardBookCommand \u003d new EditBookCommand(INDEX_FIRST_BOOK, DESC_HARRY_POTTER);","lastModifiedDate":"2022-03-12"},{"lineNumber":209,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":210,"author":{"gitId":"yuqitanyq"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":211,"author":{"gitId":"yuqitanyq"},"content":"        EditBookDescriptor copyBookDescriptor \u003d new EditBookDescriptor(DESC_HARRY_POTTER);","lastModifiedDate":"2022-03-12"},{"lineNumber":212,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":213,"author":{"gitId":"yuqitanyq"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":214,"author":{"gitId":"yuqitanyq"},"content":"        assertTrue(standardBookCommand.equals(standardBookCommand));","lastModifiedDate":"2022-03-12"},{"lineNumber":215,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":216,"author":{"gitId":"yuqitanyq"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":217,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(standardBookCommand.equals(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":218,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":219,"author":{"gitId":"yuqitanyq"},"content":"        //different types -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":220,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(standardBookCommand.equals(new ExitCommand()));","lastModifiedDate":"2022-03-12"},{"lineNumber":221,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":222,"author":{"gitId":"yuqitanyq"},"content":"        //different index -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":223,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(standardBookCommand.equals(new EditBookCommand(INDEX_SECOND_BOOK, DESC_HARRY_POTTER)));","lastModifiedDate":"2022-03-12"},{"lineNumber":224,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":225,"author":{"gitId":"yuqitanyq"},"content":"        //different descriptor -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":226,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(standardBookCommand.equals(new EditBookCommand(INDEX_FIRST_BOOK, DESC_HUNGER_GAMES)));","lastModifiedDate":"2022-03-12"},{"lineNumber":227,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":228,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":229,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"yuqitanyq":204,"bingsen0806":25}},{"path":"src/test/java/seedu/address/logic/commands/book/EditBookDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_HARRY_POTTER;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_HUNGER_GAMES;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HUNGER_GAMES;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HUNGER_GAMES;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SCIFI;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.book.EditBookCommand.EditBookDescriptor;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.testutil.EditBookDescriptorBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"public class EditBookDescriptorTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"    public void equals() {","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"        // same values -\u003e return true","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"        EditBookDescriptor bookDescriptorWithSameValues \u003d new EditBookDescriptor(DESC_HARRY_POTTER);","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"        assertTrue(DESC_HARRY_POTTER.equals(bookDescriptorWithSameValues));","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"        assertTrue(DESC_HARRY_POTTER.equals(DESC_HARRY_POTTER));","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(DESC_HARRY_POTTER.equals(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(DESC_HARRY_POTTER.equals(10));","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(DESC_HARRY_POTTER.equals(DESC_HUNGER_GAMES));","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":"        //different name -\u003e return false","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"        EditBookDescriptor editedHarryPotter \u003d new EditBookDescriptorBuilder(DESC_HARRY_POTTER)","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"                .withBookName(VALID_BOOK_NAME_HUNGER_GAMES).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(DESC_HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"yuqitanyq"},"content":"        //different isbn -\u003e return false","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"yuqitanyq"},"content":"        editedHarryPotter \u003d new EditBookDescriptorBuilder(DESC_HARRY_POTTER)","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"yuqitanyq"},"content":"                .withIsbn(VALID_ISBN_HUNGER_GAMES).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(DESC_HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"yuqitanyq"},"content":"        //different authors -\u003e return false","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"yuqitanyq"},"content":"        editedHarryPotter \u003d new EditBookDescriptorBuilder(DESC_HARRY_POTTER)","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"yuqitanyq"},"content":"                .withAuthors(VALID_AUTHOR_SUZANNE_COLLINS).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(DESC_HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"yuqitanyq"},"content":"        //different tags -\u003e return false","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"yuqitanyq"},"content":"        editedHarryPotter \u003d new EditBookDescriptorBuilder(DESC_HARRY_POTTER)","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"yuqitanyq"},"content":"                .withTags(VALID_TAG_SCIFI).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(DESC_HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"yuqitanyq":56}},{"path":"src/test/java/seedu/address/logic/commands/book/FindBookCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Halpfrog"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"Halpfrog"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"Halpfrog"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"Halpfrog"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"Halpfrog"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"Halpfrog"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"Halpfrog"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.model.book.BookAuthorContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.model.book.BookNameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.model.book.BookTagContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.testutil.TypicalLibTask;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"Halpfrog"},"content":"class FindBookCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"Halpfrog"},"content":"    private Model model \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"Halpfrog"},"content":"    private Model expectedModel \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"Halpfrog"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"Halpfrog"},"content":"    void setUp() {","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Halpfrog"},"content":"        model \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"Halpfrog"},"content":"        expectedModel \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"Halpfrog"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"Halpfrog"},"content":"    void execute_tagPredicate_noBooksFound() {","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"Halpfrog"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_BOOKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"Halpfrog"},"content":"        //user input a tag query","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"Halpfrog"},"content":"        BookTagContainsKeywordsPredicate predicate \u003d preparePredicateTag(\"t/Gangster\");","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"Halpfrog"},"content":"        FindBookCommand findBookCommand \u003d new FindBookCommand(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"Halpfrog"},"content":"        expectedModel.updateFilteredBookList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"Halpfrog"},"content":"        assertCommandSuccess(findBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"Halpfrog"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredBookList());","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"Halpfrog"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"Halpfrog"},"content":"    void execute_namePredicate_noBooksFound() {","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"Halpfrog"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_BOOKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"Halpfrog"},"content":"        //user input name query","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"Halpfrog"},"content":"        BookNameContainsKeywordsPredicate predicate \u003d preparePredicateName(\"n/Abandon all hope\");","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"Halpfrog"},"content":"        FindBookCommand findBookCommand \u003d new FindBookCommand(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"Halpfrog"},"content":"        expectedModel.updateFilteredBookList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"Halpfrog"},"content":"        assertCommandSuccess(findBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"Halpfrog"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredBookList());","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"Halpfrog"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"Halpfrog"},"content":"    void execute_authorPredicate_noBooksFound() {","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"Halpfrog"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_BOOKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"Halpfrog"},"content":"        //user input author","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"Halpfrog"},"content":"        BookAuthorContainsKeywordsPredicate predicate \u003d preparePredicateAuthor(\"a/OOP\");","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"Halpfrog"},"content":"        FindBookCommand findBookCommand \u003d new FindBookCommand(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"Halpfrog"},"content":"        expectedModel.updateFilteredBookList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"Halpfrog"},"content":"        assertCommandSuccess(findBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"Halpfrog"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredBookList());","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"Halpfrog"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"Halpfrog"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"Halpfrog"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"Halpfrog"},"content":"    private BookNameContainsKeywordsPredicate preparePredicateName(String userInput) {","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"Halpfrog"},"content":"        return new BookNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"Halpfrog"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"Halpfrog"},"content":"     * Parses {@code userInput} into a {@code BookAuthorContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"Halpfrog"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"Halpfrog"},"content":"    private BookAuthorContainsKeywordsPredicate preparePredicateAuthor(String userInput) {","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"Halpfrog"},"content":"        return new BookAuthorContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"Halpfrog"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"Halpfrog"},"content":"     * Parses {@code userInput} into a {@code BookTagContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"Halpfrog"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"Halpfrog"},"content":"    private BookTagContainsKeywordsPredicate preparePredicateTag(String userInput) {","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"Halpfrog"},"content":"        return new BookTagContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"Halpfrog"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"Halpfrog":87}},{"path":"src/test/java/seedu/address/logic/commands/book/ListBookCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showBookAtIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":" * Contains Integration tests (interaction with the Model) and unit tests for ListBookCommand.","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"public class ListBookCommandTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"    private Model model;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"        model \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"        expectedModel \u003d new ModelManager(model.getLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_bookListIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandSuccess(new ListBookCommand(), model, ListBookCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_bookListIsFiltered_showsEverything() {","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandSuccess(new ListBookCommand(), model, ListBookCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"yuqitanyq":37,"bingsen0806":3}},{"path":"src/test/java/seedu/address/logic/commands/book/RelatedBookCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatronAtIndex;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATRON;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATRON;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.book.BookRelatedToPatronPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"import seedu.address.testutil.TypicalLibTask;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":" * Contains integration tests (Interactions with the Model) and unit tests for","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":" * {@code RelatedBookCommand}.","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"public class RelatedBookCommandTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"    private Model model;","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"        model \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"    public void execute_invalidPatronIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatronList().size() + 1);","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"        RelatedBookCommand relatedBookCommand \u003d new RelatedBookCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"        assertCommandFailure(relatedBookCommand, model, Messages.MESSAGE_INVALID_PATRON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"    public void execute_validPatronIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"        Patron patronToRelate \u003d model.getFilteredPatronList().get(INDEX_FIRST_PATRON.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"        RelatedBookCommand relatedBookCommand \u003d new RelatedBookCommand(INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"        String expectedMessage \u003d String.format(RelatedBookCommand.MESSAGE_RELATED_BOOK_SUCCESS, patronToRelate);","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"        Model expectedModel \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"        BookRelatedToPatronPredicate predicate \u003d preparePredicate(patronToRelate);","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"        expectedModel.updateFilteredBookList(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"        assertCommandSuccess(relatedBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"    public void execute_validPatronIndexFilteredList_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"        showPatronAtIndex(model, INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"yl-ang"},"content":"        Patron patronToRelate \u003d model.getFilteredPatronList().get(INDEX_FIRST_PATRON.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"yl-ang"},"content":"        RelatedBookCommand relatedBookCommand \u003d new RelatedBookCommand(INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"yl-ang"},"content":"        String expectedMessage \u003d String.format(RelatedBookCommand.MESSAGE_RELATED_BOOK_SUCCESS, patronToRelate);","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"yl-ang"},"content":"        Model expectedModel \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"yl-ang"},"content":"        BookRelatedToPatronPredicate predicate \u003d preparePredicate(patronToRelate);","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"yl-ang"},"content":"        showPatronAtIndex(expectedModel, INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"yl-ang"},"content":"        expectedModel.updateFilteredBookList(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"yl-ang"},"content":"        assertCommandSuccess(relatedBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"yl-ang"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"yl-ang"},"content":"    public void equals() {","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"yl-ang"},"content":"        RelatedBookCommand relatedBookFirstCommand \u003d new RelatedBookCommand(INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"yl-ang"},"content":"        RelatedBookCommand relatedBookSecondCommand \u003d new RelatedBookCommand(INDEX_SECOND_PATRON);","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"yl-ang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"yl-ang"},"content":"        assertTrue(relatedBookFirstCommand.equals(relatedBookFirstCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"yl-ang"},"content":"        // same values -\u003e return true","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"yl-ang"},"content":"        RelatedBookCommand relatedBookFirstCommandCopy \u003d new RelatedBookCommand(INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"yl-ang"},"content":"        assertTrue(relatedBookFirstCommand.equals(relatedBookFirstCommandCopy));","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"yl-ang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"yl-ang"},"content":"        assertFalse(relatedBookFirstCommand.equals(\"A\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"yl-ang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"yl-ang"},"content":"        assertFalse(relatedBookFirstCommand.equals(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"yl-ang"},"content":"        // different patron index -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"yl-ang"},"content":"        assertFalse(relatedBookFirstCommand.equals(relatedBookSecondCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"yl-ang"},"content":"     * Converts {@code patronToRelate} into a {@code BookRelatedToPatronPredicate}.","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"yl-ang"},"content":"    private BookRelatedToPatronPredicate preparePredicate(Patron patronToRelate) {","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"yl-ang"},"content":"        return new BookRelatedToPatronPredicate(patronToRelate);","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"yl-ang":101}},{"path":"src/test/java/seedu/address/logic/commands/book/RequestBookCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showBookAtIndex;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatronAtIndex;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.book.RequestBookCommand.MESSAGE_ALREADY_REQUESTED;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.book.RequestBookCommand.MESSAGE_HAS_AVAILABLE;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.book.RequestBookCommand.MESSAGE_IS_BORROWING;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.book.RequestBookCommand.MESSAGE_MAX_REQUEST;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.book.RequestBookCommand.MESSAGE_REQUEST_BOOK_SUCCESS;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATRON;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FOURTH_BOOK;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FOURTH_PATRON;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_BOOK;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATRON;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PATRON;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalLibTask;","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":" * {@code RequestBookCommand}.","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"public class RequestBookCommandTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    private Model model \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        // Use the fourth book because it is borrowed. Otherwise, requesting is not allowed.","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        Book bookToRequest \u003d model.getFilteredBookList().get(INDEX_FOURTH_BOOK.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        Patron requester \u003d model.getFilteredPatronList().get(INDEX_SECOND_PATRON.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        RequestBookCommand requestCommand \u003d new RequestBookCommand(INDEX_SECOND_PATRON, INDEX_FOURTH_BOOK);","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(MESSAGE_REQUEST_BOOK_SUCCESS, requester.getName(),","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"                bookToRequest.getBookName());","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        Book updatedBook \u003d bookToRequest.addRequester(requester);","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.setBook(bookToRequest, updatedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        assertCommandSuccess(requestCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"    public void execute_requesterAlreadyBorrowedBook_throwsCommandException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        // The first patron already borrows a copy of the fourth book","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        Patron requester \u003d model.getFilteredPatronList().get(INDEX_FIRST_PATRON.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        RequestBookCommand requestCommand \u003d new RequestBookCommand(INDEX_FIRST_PATRON, INDEX_FOURTH_BOOK);","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(MESSAGE_IS_BORROWING, requester.getName());","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(requestCommand, model, expectedMessage);","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"    public void execute_hasAvailableCopyOfBook_throwsCommandException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        // The first book is available and hence cannot be requested","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        Book bookToRequest \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        RequestBookCommand requestCommand \u003d new RequestBookCommand(INDEX_SECOND_PATRON, INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(MESSAGE_HAS_AVAILABLE, bookToRequest.getBookName());","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(requestCommand, model, expectedMessage);","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"    public void execute_requesterAlreadyRequestedForSameBook_throwsCommandException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        Book bookToRequest \u003d model.getFilteredBookList().get(INDEX_FOURTH_BOOK.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"        Patron requester \u003d model.getFilteredPatronList().get(INDEX_SECOND_PATRON.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        Book alreadyRequestedBook \u003d new BookBuilder(bookToRequest).withRequesters(requester).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        // Modify the model so that the first book is already requested by the second patron","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        model.setBook(bookToRequest, alreadyRequestedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"        RequestBookCommand requestCommand \u003d new RequestBookCommand(INDEX_SECOND_PATRON, INDEX_FOURTH_BOOK);","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"                MESSAGE_ALREADY_REQUESTED, requester.getName(), bookToRequest.getBookName());","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(requestCommand, model, expectedMessage);","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"    public void execute_tooManyPatronsRequestedForBook_throwsCommandException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"        // The fourth book must be used because it is borrowed. Otherwise, a different error message is thrown.","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"        Book bookToRequest \u003d model.getFilteredBookList().get(INDEX_FOURTH_BOOK.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"        Patron requester1 \u003d model.getFilteredPatronList().get(INDEX_FIRST_PATRON.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"        Patron requester2 \u003d model.getFilteredPatronList().get(INDEX_SECOND_PATRON.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"        Patron requester3 \u003d model.getFilteredPatronList().get(INDEX_THIRD_PATRON.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"        Book alreadyRequestedBook \u003d new BookBuilder(bookToRequest).withRequesters(requester1, requester2, requester3)","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"                .build();","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"        // Modify the model so that the first book is already requested by 3 patrons","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"        model.setBook(bookToRequest, alreadyRequestedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"        RequestBookCommand requestCommand \u003d new RequestBookCommand(INDEX_FOURTH_PATRON, INDEX_FOURTH_BOOK);","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MAX_REQUEST, bookToRequest.getBookName());","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(requestCommand, model, expectedMessage);","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"    public void execute_invalidRequesterIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatronList().size() + 1);","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"        RequestBookCommand requestCommand \u003d new RequestBookCommand(outOfBoundIndex, INDEX_FOURTH_BOOK);","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(requestCommand, model, Messages.MESSAGE_INVALID_PATRON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"    public void execute_invalidBookIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredBookList().size() + 1);","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"        RequestBookCommand requestCommand \u003d new RequestBookCommand(INDEX_FIRST_PATRON, outOfBoundIndex);","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(requestCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"        showBookAtIndex(model, INDEX_FOURTH_BOOK);","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"        showPatronAtIndex(model, INDEX_SECOND_PATRON);","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"        Patron requester \u003d model.getFilteredPatronList().get(INDEX_FIRST_PATRON.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"        Book bookToRequest \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"        RequestBookCommand requestCommand \u003d new RequestBookCommand(INDEX_FIRST_PATRON, INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(MESSAGE_REQUEST_BOOK_SUCCESS, requester.getName(),","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"                bookToRequest.getBookName());","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"        Book updatedBook \u003d bookToRequest.addRequester(requester);","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.setBook(bookToRequest, updatedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"        showPatronAtIndex(expectedModel, INDEX_SECOND_PATRON);","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"        assertCommandSuccess(requestCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"    public void execute_invalidRequesterIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"        showBookAtIndex(model, INDEX_FOURTH_BOOK);","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_BOOK;","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"        // ensures that outOfBoundIndex is still in bounds of book list","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getLibTask().getBookList().size());","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"        RequestBookCommand requestCommand \u003d new RequestBookCommand(INDEX_SECOND_PATRON, outOfBoundIndex);","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(requestCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"    public void execute_invalidBookIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"        showPatronAtIndex(model, INDEX_SECOND_PATRON);","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PATRON;","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"        // ensures that outOfBoundIndex is still in bounds of book list","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getLibTask().getPatronList().size());","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"        RequestBookCommand requestCommand \u003d new RequestBookCommand(outOfBoundIndex, INDEX_FOURTH_BOOK);","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(requestCommand, model, Messages.MESSAGE_INVALID_PATRON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"bingsen0806"},"content":"    public void equals() {","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"        RequestBookCommand requestFirstCommand \u003d new RequestBookCommand(INDEX_FIRST_PATRON, INDEX_FOURTH_BOOK);","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"        RequestBookCommand requestSecondCommand \u003d new RequestBookCommand(INDEX_SECOND_PATRON, INDEX_FOURTH_BOOK);","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"        RequestBookCommand requestThirdCommand \u003d new RequestBookCommand(INDEX_FIRST_PATRON, INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"bingsen0806"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(requestFirstCommand.equals(requestFirstCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"bingsen0806"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"bingsen0806"},"content":"        RequestBookCommand requestFirstCommandCopy \u003d new RequestBookCommand(INDEX_FIRST_PATRON, INDEX_FOURTH_BOOK);","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(requestFirstCommand.equals(requestFirstCommandCopy));","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"bingsen0806"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(requestFirstCommand.equals(1));","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"bingsen0806"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(requestFirstCommand.equals(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"bingsen0806"},"content":"        // different requester index -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(requestFirstCommand.equals(requestSecondCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"bingsen0806"},"content":"        // different book index -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(requestFirstCommand.equals(requestThirdCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"bingsen0806":201}},{"path":"src/test/java/seedu/address/logic/commands/patron/AddPatronCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.commands.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import seedu.address.testutil.PatronBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"public class AddPatronCommandIntegrationTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"        model \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"    public void execute_newPatron_success() {","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"        Patron validPatron \u003d new PatronBuilder().build();","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(model.getLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"        expectedModel.addPatron(validPatron);","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"        assertCommandSuccess(new AddPatronCommand(validPatron), model,","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"                String.format(AddPatronCommand.MESSAGE_SUCCESS, validPatron), expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"    public void execute_duplicatePatron_throwsCommandException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        Patron patronInList \u003d model.getLibTask().getPatronList().get(0);","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"        assertCommandFailure(new AddPatronCommand(patronInList), model, AddPatronCommand.MESSAGE_DUPLICATE_PATRON);","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"aditi2313":11,"-":30,"bingsen0806":4}},{"path":"src/test/java/seedu/address/logic/commands/patron/AddPatronCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.commands.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.LibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ReadOnlyLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"import seedu.address.testutil.PatronBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"public class AddPatronCommandTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"    public void constructor_nullPatron_throwsNullPointerException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPatronCommand(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"    public void execute_patronAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"        ModelStubAcceptingPatronAdded modelStub \u003d new ModelStubAcceptingPatronAdded();","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"        Patron validPatron \u003d new PatronBuilder().build();","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"        CommandResult commandResult \u003d new AddPatronCommand(validPatron).execute(modelStub);","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"        assertEquals(String.format(AddPatronCommand.MESSAGE_SUCCESS, validPatron), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"        assertEquals(Arrays.asList(validPatron), modelStub.patronsAdded);","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"    public void execute_duplicatePatron_throwsCommandException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"        Patron validPatron \u003d new PatronBuilder().build();","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"        AddPatronCommand addCommand \u003d new AddPatronCommand(validPatron);","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"        ModelStub modelStub \u003d new ModelStubWithPatron(validPatron);","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"        assertThrows(CommandException.class, AddPatronCommand.MESSAGE_DUPLICATE_PATRON, () -\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"            addCommand.execute(modelStub));","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"        Patron alice \u003d new PatronBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"        Patron bob \u003d new PatronBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"        AddPatronCommand addAliceCommand \u003d new AddPatronCommand(alice);","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"        AddPatronCommand addBobCommand \u003d new AddPatronCommand(bob);","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"        AddPatronCommand addAliceCommandCopy \u003d new AddPatronCommand(alice);","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"aditi2313"},"content":"        // different patron -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"        public Path getLibTaskFilePath() {","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"        public void setLibTaskFilePath(Path libTaskFilePath) {","lastModifiedDate":"2022-03-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"aditi2313"},"content":"        public void addPatron(Patron patron) {","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"        public void addBook(Book book) {","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"        public void setLibTask(ReadOnlyLibTask newData) {","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"        public ReadOnlyLibTask getLibTask() {","lastModifiedDate":"2022-03-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"aditi2313"},"content":"        public boolean hasPatron(Patron patron) {","lastModifiedDate":"2022-03-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"        public boolean hasBook(Book book) {","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"        public boolean hasSameIsbnDiffAuthorsOrName(Book bookToCheck) {","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"        public boolean hasSameIsbn(Book bookToCheck) {","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"        public String deleteAllRequests(Book ... books) {","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"aditi2313"},"content":"        public void deletePatron(Patron target) {","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"        public void deleteBook(Book target) {","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"aditi2313"},"content":"        public void setPatron(Patron target, Patron editedPatron) {","lastModifiedDate":"2022-03-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"        public void setBook(Book target, Book editedBook) {","lastModifiedDate":"2022-03-10"},{"lineNumber":177,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"bingsen0806"},"content":"        public boolean setAndEditBook(Book target, Book editedBook) {","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"bingsen0806"},"content":"        public String updateBookAfterPatronEdit(Patron target, Patron editedPatron) {","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"bingsen0806"},"content":"        public String updateBookAfterPatronDelete(Patron deletedPatron) {","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"bingsen0806"},"content":"        public void addRequest(Book bookToRequest, Patron requester) {","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"bingsen0806"},"content":"        public boolean hasAvailableCopy(Book book) {","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":205,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":206,"author":{"gitId":"bingsen0806"},"content":"        public boolean isBorrowing(Patron patron, Book book) {","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":209,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":210,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":211,"author":{"gitId":"bingsen0806"},"content":"        public List\u003cBook\u003e returnAllBorrowedBooks(Patron borrower) {","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":213,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":214,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":215,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":216,"author":{"gitId":"bingsen0806"},"content":"        public boolean isBorrowingSomeBook(Patron borrower) {","lastModifiedDate":"2022-03-16"},{"lineNumber":217,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":218,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":219,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":220,"author":{"gitId":"aditi2313"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":221,"author":{"gitId":"aditi2313"},"content":"        public boolean hasOverdueBooks(Patron patron) {","lastModifiedDate":"2022-03-22"},{"lineNumber":222,"author":{"gitId":"aditi2313"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":223,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":224,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":225,"author":{"gitId":"aditi2313"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":226,"author":{"gitId":"aditi2313"},"content":"        public boolean hasEditedPatron(Patron oldPatron, Patron editedPatron) {","lastModifiedDate":"2022-03-29"},{"lineNumber":227,"author":{"gitId":"aditi2313"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":228,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":229,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":230,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":231,"author":{"gitId":"bingsen0806"},"content":"        public void borrowBook(Patron borrower, Book bookToBorrow, String returnDate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":232,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":233,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":234,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"aditi2313"},"content":"        public ObservableList\u003cPatron\u003e getFilteredPatronList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"aditi2313"},"content":"        public void updateFilteredPatronList(Predicate\u003cPatron\u003e predicate) {","lastModifiedDate":"2022-03-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":245,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":246,"author":{"gitId":"bingsen0806"},"content":"        public ObservableList\u003cBook\u003e getFilteredBookList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":247,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":248,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":249,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":250,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":251,"author":{"gitId":"bingsen0806"},"content":"        public void updateFilteredBookList(Predicate\u003cBook\u003e predicate) {","lastModifiedDate":"2022-03-10"},{"lineNumber":252,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":253,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"aditi2313"},"content":"     * A Model stub that contains a single patron.","lastModifiedDate":"2022-03-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":259,"author":{"gitId":"aditi2313"},"content":"    private class ModelStubWithPatron extends ModelStub {","lastModifiedDate":"2022-03-12"},{"lineNumber":260,"author":{"gitId":"aditi2313"},"content":"        private final Patron patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":262,"author":{"gitId":"aditi2313"},"content":"        ModelStubWithPatron(Patron patron) {","lastModifiedDate":"2022-03-12"},{"lineNumber":263,"author":{"gitId":"aditi2313"},"content":"            requireNonNull(patron);","lastModifiedDate":"2022-03-11"},{"lineNumber":264,"author":{"gitId":"aditi2313"},"content":"            this.patron \u003d patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":268,"author":{"gitId":"aditi2313"},"content":"        public boolean hasPatron(Patron patron) {","lastModifiedDate":"2022-03-11"},{"lineNumber":269,"author":{"gitId":"aditi2313"},"content":"            requireNonNull(patron);","lastModifiedDate":"2022-03-11"},{"lineNumber":270,"author":{"gitId":"aditi2313"},"content":"            return this.patron.isSamePatron(patron);","lastModifiedDate":"2022-03-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":275,"author":{"gitId":"aditi2313"},"content":"     * A Model stub that always accept the patron being added.","lastModifiedDate":"2022-03-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":277,"author":{"gitId":"aditi2313"},"content":"    private class ModelStubAcceptingPatronAdded extends ModelStub {","lastModifiedDate":"2022-03-12"},{"lineNumber":278,"author":{"gitId":"aditi2313"},"content":"        final ArrayList\u003cPatron\u003e patronsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":281,"author":{"gitId":"aditi2313"},"content":"        public boolean hasPatron(Patron patron) {","lastModifiedDate":"2022-03-11"},{"lineNumber":282,"author":{"gitId":"aditi2313"},"content":"            requireNonNull(patron);","lastModifiedDate":"2022-03-11"},{"lineNumber":283,"author":{"gitId":"aditi2313"},"content":"            return patronsAdded.stream().anyMatch(patron::isSamePatron);","lastModifiedDate":"2022-03-11"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":287,"author":{"gitId":"aditi2313"},"content":"        public void addPatron(Patron patron) {","lastModifiedDate":"2022-03-11"},{"lineNumber":288,"author":{"gitId":"aditi2313"},"content":"            requireNonNull(patron);","lastModifiedDate":"2022-03-11"},{"lineNumber":289,"author":{"gitId":"aditi2313"},"content":"            patronsAdded.add(patron);","lastModifiedDate":"2022-03-11"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":293,"author":{"gitId":"bingsen0806"},"content":"        public ReadOnlyLibTask getLibTask() {","lastModifiedDate":"2022-03-13"},{"lineNumber":294,"author":{"gitId":"bingsen0806"},"content":"            return new LibTask();","lastModifiedDate":"2022-03-13"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"aditi2313":59,"-":139,"bingsen0806":100}},{"path":"src/test/java/seedu/address/logic/commands/patron/DeletePatronCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.commands.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatronAtIndex;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.HARRY_POTTER;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATRON;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATRON;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"public class DeletePatronCommandTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    private Model model \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        Patron patronToDelete \u003d model.getFilteredPatronList().get(INDEX_SECOND_PATRON.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        DeletePatronCommand deleteCommand \u003d new DeletePatronCommand(INDEX_SECOND_PATRON);","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        String expectedMessage \u003d String.format(DeletePatronCommand.MESSAGE_DELETE_PATRON_SUCCESS, patronToDelete);","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"        expectedModel.deletePatron(patronToDelete);","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    public void execute_patronIsBorrowingSomeBooks_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        // The first patron in sample data is borrowing some books","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        DeletePatronCommand deleteCommand \u003d new DeletePatronCommand(INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(deleteCommand, model, DeletePatronCommand.MESSAGE_HAS_BORROWED_BOOKS);","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    public void execute_patronHasRequestedBooks_updateRequestedBooks() {","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        Patron patronToDelete \u003d model.getFilteredPatronList().get(INDEX_SECOND_PATRON.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        Book requestedBook \u003d new BookBuilder(HARRY_POTTER).withRequesters(patronToDelete).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        Book notRequestedBook \u003d new BookBuilder(requestedBook).withRequesters().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        model.addBook(requestedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        DeletePatronCommand deleteCommand \u003d new DeletePatronCommand(INDEX_SECOND_PATRON);","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(DeletePatronCommand.MESSAGE_DELETE_PATRON_SUCCESS, patronToDelete)","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"                + String.format(\"%s is also deleted from the requesters list of some books\\n\",","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"                patronToDelete.getName());","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.deletePatron(patronToDelete);","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.setBook(requestedBook, notRequestedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatronList().size() + 1);","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"aditi2313"},"content":"        DeletePatronCommand deleteCommand \u003d new DeletePatronCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"aditi2313"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PATRON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"        showPatronAtIndex(model, INDEX_SECOND_PATRON);","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"        Patron patronToDelete \u003d model.getFilteredPatronList().get(INDEX_FIRST_PATRON.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"aditi2313"},"content":"        DeletePatronCommand deleteCommand \u003d new DeletePatronCommand(INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"        String expectedMessage \u003d String.format(DeletePatronCommand.MESSAGE_DELETE_PATRON_SUCCESS, patronToDelete);","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(model.getLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"aditi2313"},"content":"        expectedModel.deletePatron(patronToDelete);","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"aditi2313"},"content":"        showNoPatron(expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"aditi2313"},"content":"        showPatronAtIndex(model, INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"aditi2313"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PATRON;","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getLibTask().getPatronList().size());","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"aditi2313"},"content":"        DeletePatronCommand deleteCommand \u003d new DeletePatronCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"aditi2313"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PATRON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"aditi2313"},"content":"        DeletePatronCommand deleteFirstCommand \u003d new DeletePatronCommand(INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"aditi2313"},"content":"        DeletePatronCommand deleteSecondCommand \u003d new DeletePatronCommand(INDEX_SECOND_PATRON);","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"aditi2313"},"content":"        DeletePatronCommand deleteFirstCommandCopy \u003d new DeletePatronCommand(INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"aditi2313"},"content":"        // different patron -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"aditi2313"},"content":"    private void showNoPatron(Model model) {","lastModifiedDate":"2022-03-12"},{"lineNumber":134,"author":{"gitId":"aditi2313"},"content":"        model.updateFilteredPatronList(p -\u003e false);","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"aditi2313"},"content":"        assertTrue(model.getFilteredPatronList().isEmpty());","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"aditi2313":27,"-":74,"bingsen0806":37}},{"path":"src/test/java/seedu/address/logic/commands/patron/EditPatronCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.commands.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatronAtIndex;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.HARRY_POTTER;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATRON;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATRON;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand.EditPatronDescriptor;","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.LibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookStatus;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookStatusType;","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"import seedu.address.testutil.EditPatronDescriptorBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"import seedu.address.testutil.PatronBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"public class EditPatronCommandTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    private Model model \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"        Patron editedPatron \u003d new PatronBuilder().build();","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand.EditPatronDescriptor descriptor \u003d new EditPatronDescriptorBuilder(editedPatron).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        EditPatronCommand editCommand \u003d new EditPatronCommand(INDEX_SECOND_PATRON, descriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"        String expectedMessage \u003d String.format(EditPatronCommand.MESSAGE_EDIT_PATRON_SUCCESS, editedPatron);","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(new LibTask(model.getLibTask()), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.setPatron(model.getFilteredPatronList().get(1), editedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"        Index indexLastPatron \u003d Index.fromOneBased(model.getFilteredPatronList().size());","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"        Patron lastPatron \u003d model.getFilteredPatronList().get(indexLastPatron.getZeroBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"        PatronBuilder patronInList \u003d new PatronBuilder(lastPatron);","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"        Patron editedPatron \u003d patronInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand.EditPatronDescriptor descriptor \u003d new EditPatronDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand editCommand \u003d new EditPatronCommand(indexLastPatron, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"        String expectedMessage \u003d String.format(EditPatronCommand.MESSAGE_EDIT_PATRON_SUCCESS, editedPatron);","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(new LibTask(model.getLibTask()), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"        expectedModel.setPatron(lastPatron, editedPatron);","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"        EditPatronCommand editCommand \u003d new EditPatronCommand(INDEX_SECOND_PATRON,","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"                new EditPatronCommand.EditPatronDescriptor());","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        Patron editedPatron \u003d model.getFilteredPatronList().get(INDEX_SECOND_PATRON.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"        String expectedMessage \u003d String.format(EditPatronCommand.MESSAGE_EDIT_PATRON_SUCCESS, editedPatron);","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(new LibTask(model.getLibTask()), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        showPatronAtIndex(model, INDEX_SECOND_PATRON);","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"aditi2313"},"content":"        Patron patronInFilteredList \u003d model.getFilteredPatronList().get(INDEX_FIRST_PATRON.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"aditi2313"},"content":"        Patron editedPatron \u003d new PatronBuilder(patronInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand editCommand \u003d new EditPatronCommand(INDEX_FIRST_PATRON,","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"aditi2313"},"content":"                new EditPatronDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"aditi2313"},"content":"        String expectedMessage \u003d String.format(EditPatronCommand.MESSAGE_EDIT_PATRON_SUCCESS, editedPatron);","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(new LibTask(model.getLibTask()), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"aditi2313"},"content":"        expectedModel.setPatron(model.getFilteredPatronList().get(0), editedPatron);","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"    public void execute_patronHasRequestedBooks_updateRequestedBooks() {","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"        Patron patronToEdit \u003d model.getFilteredPatronList().get(INDEX_SECOND_PATRON.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"        Book requestedBook \u003d new BookBuilder(HARRY_POTTER).withRequesters(patronToEdit).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"        model.addBook(requestedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"        Patron editedPatron \u003d new PatronBuilder(patronToEdit).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"        Book editedRequestedBook \u003d new BookBuilder(requestedBook).withRequesters(editedPatron).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"        EditPatronCommand editCommand \u003d new EditPatronCommand(INDEX_SECOND_PATRON,","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"                new EditPatronDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(EditPatronCommand.MESSAGE_EDIT_PATRON_SUCCESS, editedPatron)","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"                + String.format(\"Requester information of %s is also edited in some books\\n\", editedPatron.getName());","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.setPatron(model.getFilteredPatronList().get(1), editedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.setBook(requestedBook, editedRequestedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"    public void execute_patronHasBorrowedBooks_updateBorrowedBooks() {","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"        Patron patronToEdit \u003d model.getFilteredPatronList().get(INDEX_SECOND_PATRON.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"        BookStatus dummyStatus \u003d new BookStatus(BookStatusType.BORROWED, Optional.of(patronToEdit),","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"                Optional.of(\"22-May-2022\"), Optional.of(\"31-Dec-2022\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"        Book borrowedBook \u003d new BookBuilder(HARRY_POTTER).withBookStatus(dummyStatus).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"        model.addBook(borrowedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"        Patron editedPatron \u003d new PatronBuilder(patronToEdit).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"        BookStatus updatedStatus \u003d dummyStatus.editBorrower(editedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"        Book editedBorrowedBook \u003d new BookBuilder(borrowedBook).withBookStatus(updatedStatus).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"        EditPatronCommand editCommand \u003d new EditPatronCommand(INDEX_SECOND_PATRON,","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"                new EditPatronDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(EditPatronCommand.MESSAGE_EDIT_PATRON_SUCCESS, editedPatron)","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"                + String.format(\"Borrower information of %s is also edited in some books\\n\", editedPatron.getName());","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.setPatron(model.getFilteredPatronList().get(1), editedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.setBook(borrowedBook, editedBorrowedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"aditi2313"},"content":"    public void execute_duplicatePatronUnfilteredList_failure() {","lastModifiedDate":"2022-03-12"},{"lineNumber":156,"author":{"gitId":"aditi2313"},"content":"        Patron firstPatron \u003d model.getFilteredPatronList().get(INDEX_FIRST_PATRON.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":157,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand.EditPatronDescriptor descriptor \u003d new EditPatronDescriptorBuilder(firstPatron).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":158,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand editCommand \u003d new EditPatronCommand(INDEX_SECOND_PATRON, descriptor);","lastModifiedDate":"2022-03-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"aditi2313"},"content":"        assertCommandFailure(editCommand, model, EditPatronCommand.MESSAGE_DUPLICATE_PATRON);","lastModifiedDate":"2022-03-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"aditi2313"},"content":"    public void execute_duplicatePatronFilteredList_failure() {","lastModifiedDate":"2022-03-12"},{"lineNumber":165,"author":{"gitId":"aditi2313"},"content":"        showPatronAtIndex(model, INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"        // edit patron in filtered list into a duplicate in LibTask","lastModifiedDate":"2022-03-14"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"        Patron patronInList \u003d model.getLibTask().getPatronList().get(INDEX_SECOND_PATRON.getZeroBased());","lastModifiedDate":"2022-03-13"},{"lineNumber":169,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand editCommand \u003d new EditPatronCommand(INDEX_FIRST_PATRON,","lastModifiedDate":"2022-03-12"},{"lineNumber":170,"author":{"gitId":"aditi2313"},"content":"                new EditPatronDescriptorBuilder(patronInList).build());","lastModifiedDate":"2022-03-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"aditi2313"},"content":"        assertCommandFailure(editCommand, model, EditPatronCommand.MESSAGE_DUPLICATE_PATRON);","lastModifiedDate":"2022-03-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":176,"author":{"gitId":"aditi2313"},"content":"    public void execute_invalidPatronIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-12"},{"lineNumber":177,"author":{"gitId":"aditi2313"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatronList().size() + 1);","lastModifiedDate":"2022-03-11"},{"lineNumber":178,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand.EditPatronDescriptor descriptor \u003d new EditPatronDescriptorBuilder()","lastModifiedDate":"2022-03-12"},{"lineNumber":179,"author":{"gitId":"aditi2313"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":180,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand editCommand \u003d new EditPatronCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":182,"author":{"gitId":"aditi2313"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PATRON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":187,"author":{"gitId":"bingsen0806"},"content":"     * but smaller than size of LibTask","lastModifiedDate":"2022-03-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":190,"author":{"gitId":"aditi2313"},"content":"    public void execute_invalidPatronIndexFilteredList_failure() {","lastModifiedDate":"2022-03-12"},{"lineNumber":191,"author":{"gitId":"aditi2313"},"content":"        showPatronAtIndex(model, INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-12"},{"lineNumber":192,"author":{"gitId":"aditi2313"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PATRON;","lastModifiedDate":"2022-03-12"},{"lineNumber":193,"author":{"gitId":"bingsen0806"},"content":"        // ensures that outOfBoundIndex is still in bounds of LibTask list","lastModifiedDate":"2022-03-14"},{"lineNumber":194,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getLibTask().getPatronList().size());","lastModifiedDate":"2022-03-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":196,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand editCommand \u003d new EditPatronCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-11"},{"lineNumber":197,"author":{"gitId":"aditi2313"},"content":"                new EditPatronDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":199,"author":{"gitId":"aditi2313"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PATRON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":204,"author":{"gitId":"aditi2313"},"content":"        final EditPatronCommand standardCommand \u003d new EditPatronCommand(INDEX_FIRST_PATRON, DESC_AMY);","lastModifiedDate":"2022-03-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":207,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand.EditPatronDescriptor copyDescriptor \u003d new EditPatronDescriptor(DESC_AMY);","lastModifiedDate":"2022-03-12"},{"lineNumber":208,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand commandWithSameValues \u003d new EditPatronCommand(INDEX_FIRST_PATRON, copyDescriptor);","lastModifiedDate":"2022-03-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":221,"author":{"gitId":"aditi2313"},"content":"        assertFalse(standardCommand.equals(new EditPatronCommand(INDEX_SECOND_PATRON, DESC_AMY)));","lastModifiedDate":"2022-03-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":224,"author":{"gitId":"aditi2313"},"content":"        assertFalse(standardCommand.equals(new EditPatronCommand(INDEX_FIRST_PATRON, DESC_BOB)));","lastModifiedDate":"2022-03-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"aditi2313":56,"-":103,"bingsen0806":68}},{"path":"src/test/java/seedu/address/logic/commands/patron/EditPatronDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.commands.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand.EditPatronDescriptor;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"import seedu.address.testutil.EditPatronDescriptorBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"public class EditPatronDescriptorTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"        EditPatronDescriptor descriptorWithSameValues \u003d new EditPatronCommand.EditPatronDescriptor(DESC_AMY);","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"        EditPatronDescriptor editedAmy \u003d new EditPatronDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"        editedAmy \u003d new EditPatronDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"        editedAmy \u003d new EditPatronDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"        editedAmy \u003d new EditPatronDescriptorBuilder(DESC_AMY).withId(VALID_ID_BOB).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"        editedAmy \u003d new EditPatronDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"aditi2313":11,"-":47}},{"path":"src/test/java/seedu/address/logic/commands/patron/FindPatronCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.commands.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PATRONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalPatrons.CARL;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalPatrons.ELLE;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalPatrons.FIONA;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"public class FindPatronCommandTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    private Model model \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    private Model expectedModel \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        FindPatronCommand findFirstCommand \u003d new FindPatronCommand(firstPredicate);","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"        FindPatronCommand findSecondCommand \u003d new FindPatronCommand(secondPredicate);","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"        FindPatronCommand findFirstCommandCopy \u003d new FindPatronCommand(firstPredicate);","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"        // different patron -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"    public void execute_zeroKeywords_noPatronFound() {","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PATRONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"        FindPatronCommand command \u003d new FindPatronCommand(predicate);","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"        expectedModel.updateFilteredPatronList(predicate);","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPatronList());","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"    public void execute_multipleKeywords_multiplePatronsFound() {","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PATRONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"aditi2313"},"content":"        FindPatronCommand command \u003d new FindPatronCommand(predicate);","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"        expectedModel.updateFilteredPatronList(predicate);","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"aditi2313"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPatronList());","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"aditi2313":21,"-":59,"bingsen0806":3}},{"path":"src/test/java/seedu/address/logic/commands/patron/ListPatronCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.commands.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatronAtIndex;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATRON;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"public class ListPatronCommandTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"        model \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"        expectedModel \u003d new ModelManager(model.getLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"        assertCommandSuccess(new ListPatronCommand(), model, ListPatronCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"        showPatronAtIndex(model, INDEX_FIRST_PATRON);","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        assertCommandSuccess(new ListPatronCommand(), model, ListPatronCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"aditi2313":7,"-":29,"bingsen0806":3}},{"path":"src/test/java/seedu/address/logic/commands/patron/OverduePatronCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.commands.patron;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalPatrons.ALICE;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"import seedu.address.testutil.TypicalLibTask;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"public class OverduePatronCommandTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    private Model model \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"    private Model expectedModel \u003d new ModelManager(TypicalLibTask.getTypicalLibTask(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"    public void execute_listPatronsWithOverdueBooks() {","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"        String expectedMessage \u003d OverduePatronCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"        OverduePatronCommand command \u003d new OverduePatronCommand();","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"        expectedModel.updateFilteredPatronList(x -\u003e expectedModel.hasOverdueBooks(x));","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"        assertEquals(Arrays.asList(ALICE), expectedModel.getFilteredPatronList());","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"aditi2313":29}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"    public void hasExactlyOneValue() {","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"        String argsString \u003d \" p/test p/test1\";","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"        Prefix queryPrefix \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, queryPrefix);","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(argMultimap.hasExactlyOneValue(new Prefix(\"p/\")));","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"        argsString \u003d \" p/ test\";","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, queryPrefix);","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(argMultimap.hasExactlyOneValue(queryPrefix));","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"    public void hasExactlyOneQueriedPrefix() {","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"        String argsString \u003d \" p/test t/test1\";","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"        Prefix queryPrefix1 \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"        Prefix queryPrefix2 \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, queryPrefix1, queryPrefix2);","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(argMultimap.hasExactlyOneQueriedPrefix(queryPrefix1, queryPrefix2));","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(argMultimap.hasExactlyOneQueriedPrefix(queryPrefix1));","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"        argsString \u003d \" p/test\";","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, queryPrefix1, queryPrefix2);","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(argMultimap.hasExactlyOneQueriedPrefix(queryPrefix1, queryPrefix2));","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"    public void getNonEmptyPrefixes() {","lastModifiedDate":"2022-03-16"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"        List\u003cPrefix\u003e prefixes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"        prefixes.add(pSlash);","lastModifiedDate":"2022-03-16"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"        prefixes.add(hatQ);","lastModifiedDate":"2022-03-16"},{"lineNumber":173,"author":{"gitId":"bingsen0806"},"content":"        prefixes.add(dashT);","lastModifiedDate":"2022-03-16"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"        String argsString \u003d \" p/test -a ds\";","lastModifiedDate":"2022-03-16"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, hatQ, dashT);","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"bingsen0806"},"content":"        List\u003cPrefix\u003e expected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"        expected.add(pSlash);","lastModifiedDate":"2022-03-16"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(argMultimap.getNonEmptyPrefixes(pSlash, hatQ, dashT), expected);","lastModifiedDate":"2022-03-16"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":181,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":150,"bingsen0806":43}},{"path":"src/test/java/seedu/address/logic/parser/LibTaskParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.Command.PATRON_COMMAND_GROUP;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"Halpfrog"},"content":"import static seedu.address.logic.commands.Command.PREVIOUS_COMMAND_WORD;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BOOK;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATRON;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATRON;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.BorrowCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.logic.commands.PreviousCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.ReturnAllBooksCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.ReturnOneBookCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.AddPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.DeletePatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand.EditPatronDescriptor;","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.FindPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.ListPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"import seedu.address.testutil.EditPatronDescriptorBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"import seedu.address.testutil.PatronBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"import seedu.address.testutil.PatronUtil;","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"public class LibTaskParserTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    private final LibTaskParser parser \u003d new LibTaskParser();","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"        Patron patron \u003d new PatronBuilder().build();","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"        AddPatronCommand command \u003d (AddPatronCommand) parser.parseCommand(PatronUtil.getAddCommand(patron));","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"        assertEquals(new AddPatronCommand(patron), command);","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"        DeletePatronCommand command \u003d (DeletePatronCommand) parser.parseCommand(","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"                PATRON_COMMAND_GROUP + \" \" + Command.DELETE_COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"                        + INDEX_FIRST_PATRON.getOneBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"        assertEquals(new DeletePatronCommand(INDEX_FIRST_PATRON), command);","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"    public void parseCommand_returnOneBook() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        ReturnOneBookCommand command \u003d (ReturnOneBookCommand) parser.parseCommand(","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"                 Command.RETURN_COMMAND_WORD + \" \" + PREFIX_BOOK","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"                        + INDEX_FIRST_BOOK.getOneBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(new ReturnOneBookCommand(INDEX_FIRST_BOOK), command);","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"    public void parseCommand_returnAllBooks() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        ReturnAllBooksCommand command \u003d (ReturnAllBooksCommand) parser.parseCommand(","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"                Command.RETURN_COMMAND_WORD + \" \" + PREFIX_PATRON","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"                        + INDEX_FIRST_PATRON.getOneBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(new ReturnAllBooksCommand(INDEX_FIRST_PATRON), command);","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"aditi2313"},"content":"        Patron patron \u003d new PatronBuilder().build();","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"        EditPatronDescriptor descriptor \u003d new EditPatronDescriptorBuilder(patron).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand command \u003d (EditPatronCommand) parser.parseCommand(PATRON_COMMAND_GROUP + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"                + Command.EDIT_COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"aditi2313"},"content":"                + INDEX_FIRST_PATRON.getOneBased() + \" \" + PatronUtil.getEditPatronDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"aditi2313"},"content":"        assertEquals(new EditPatronCommand(INDEX_FIRST_PATRON, descriptor), command);","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"aditi2313"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"aditi2313"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":102,"author":{"gitId":"aditi2313"},"content":"        FindPatronCommand command \u003d (FindPatronCommand) parser.parseCommand(","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"aditi2313"},"content":"                PATRON_COMMAND_GROUP + \" \" + Command.FIND_COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"aditi2313"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"aditi2313"},"content":"        assertEquals(new FindPatronCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"aditi2313"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"aditi2313"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"aditi2313"},"content":"        assertTrue(parser.parseCommand(PATRON_COMMAND_GROUP + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"aditi2313"},"content":"                + Command.LIST_COMMAND_WORD) instanceof ListPatronCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"aditi2313"},"content":"        assertTrue(parser.parseCommand(PATRON_COMMAND_GROUP + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"aditi2313"},"content":"                + Command.LIST_COMMAND_WORD + \" 3\") instanceof ListPatronCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"Halpfrog"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":123,"author":{"gitId":"Halpfrog"},"content":"    public void parseCommand_previousCommand() throws Exception {","lastModifiedDate":"2022-03-13"},{"lineNumber":124,"author":{"gitId":"Halpfrog"},"content":"        assertTrue(parser.parseCommand(PREVIOUS_COMMAND_WORD) instanceof PreviousCommand);","lastModifiedDate":"2022-03-12"},{"lineNumber":125,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":126,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), () -\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"                        parser.parseCommand(\"\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":136,"author":{"gitId":"aditi2313"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"aditi2313"},"content":"            parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":140,"author":{"gitId":"Halpfrog"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":141,"author":{"gitId":"Halpfrog"},"content":"    public void getPreviousCommand_previousCommandsEmpty_returnsEmptyString() {","lastModifiedDate":"2022-03-13"},{"lineNumber":142,"author":{"gitId":"Halpfrog"},"content":"        String previousCommand \u003d parser.getPreviousCommand();","lastModifiedDate":"2022-03-13"},{"lineNumber":143,"author":{"gitId":"Halpfrog"},"content":"        assertEquals(\"\", previousCommand);","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":145,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":146,"author":{"gitId":"Halpfrog"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":147,"author":{"gitId":"Halpfrog"},"content":"    public void getPreviousCommand_previousCommandsNotEmpty_returnsPreviousString() {","lastModifiedDate":"2022-03-13"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"        LibTaskParser parserWithCommands \u003d new LibTaskParser();","lastModifiedDate":"2022-03-13"},{"lineNumber":149,"author":{"gitId":"Halpfrog"},"content":"        parserWithCommands.storePreviousCommand(\"list\");","lastModifiedDate":"2022-03-13"},{"lineNumber":150,"author":{"gitId":"Halpfrog"},"content":"        assertEquals(\"list\", parserWithCommands.getPreviousCommand());","lastModifiedDate":"2022-03-13"},{"lineNumber":151,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":152,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":153,"author":{"gitId":"Halpfrog"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":154,"author":{"gitId":"Halpfrog"},"content":"    public void storePreviousCommand() {","lastModifiedDate":"2022-03-13"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"        LibTaskParser parserAddCommands \u003d new LibTaskParser();","lastModifiedDate":"2022-03-13"},{"lineNumber":156,"author":{"gitId":"Halpfrog"},"content":"        parserAddCommands.storePreviousCommand(\"list\");","lastModifiedDate":"2022-03-13"},{"lineNumber":157,"author":{"gitId":"Halpfrog"},"content":"        assertEquals(\"list\", parserAddCommands.getPreviousCommand());","lastModifiedDate":"2022-03-13"},{"lineNumber":158,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"    public void parseCommand_borrow() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"bingsen0806"},"content":"        String returnDateString \u003d \"28-Feb-2022\";","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"        BorrowCommand command \u003d (BorrowCommand) parser.parseCommand(","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"                 Command.BORROW_COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"                        + INDEX_FIRST_PATRON.getOneBased() + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"                        + INDEX_FIRST_BOOK.getOneBased() + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"                        + returnDateString);","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(new BorrowCommand(INDEX_FIRST_PATRON, INDEX_FIRST_BOOK, returnDateString), command);","lastModifiedDate":"2022-03-16"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"    public void parseCommand_invalidReturnDate_throwsParseException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":173,"author":{"gitId":"bingsen0806"},"content":"        String invalidDateString \u003d \"28Feb-2022\";","lastModifiedDate":"2022-03-16"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"        String commandString \u003d Command.BORROW_COMMAND_WORD + \" \" + INDEX_FIRST_PATRON.getOneBased() + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"                + INDEX_FIRST_BOOK.getOneBased() + \" \" + invalidDateString;","lastModifiedDate":"2022-03-16"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"bingsen0806"},"content":"                        BorrowCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(commandString));","lastModifiedDate":"2022-03-16"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":62,"aditi2313":43,"Halpfrog":25,"bingsen0806":49}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATRON;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Email;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Id;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Name;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Phone;","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"    private static final String INVALID_ID \u003d \" \";","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"    private static final String VALID_ID \u003d \"A0123456H\";","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"        assertEquals(INDEX_FIRST_PATRON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"        assertEquals(INDEX_FIRST_PATRON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"aditi2313"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseId((String) null));","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"aditi2313"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseId(INVALID_ID));","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"aditi2313"},"content":"        Id expectedAddress \u003d new Id(VALID_ID);","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"aditi2313"},"content":"        assertEquals(expectedAddress, ParserUtil.parseId(VALID_ID));","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"aditi2313"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ID + WHITESPACE;","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"aditi2313"},"content":"        Id expectedAddress \u003d new Id(VALID_ID);","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"aditi2313"},"content":"        assertEquals(expectedAddress, ParserUtil.parseId(addressWithWhitespace));","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":180,"aditi2313":16}},{"path":"src/test/java/seedu/address/logic/parser/ReturnCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AUTHOR;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BOOK;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATRON;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATRON;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.ReturnAllBooksCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.ReturnCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.ReturnOneBookCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"public class ReturnCommandParserTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    private ReturnCommandParser parser \u003d new ReturnCommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    public void parse_onePrefixOneValue_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"        // only has p/","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + \" \" + PREFIX_PATRON + \"1\",","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"                new ReturnAllBooksCommand(INDEX_FIRST_PATRON));","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        // only has b/","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + \" \" + PREFIX_BOOK + \"1\",","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"                new ReturnOneBookCommand(INDEX_FIRST_BOOK));","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    public void parse_noPatronOrBookPrefix_throwsParseException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReturnCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + \" \" + PREFIX_AUTHOR + \"1\", expectedMessage);","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    public void parse_hasBothPatronOrBookPrefix_throwsParseException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReturnCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + \" \" + PREFIX_PATRON + \"1\" + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"                + PREFIX_BOOK + \"1\", expectedMessage);","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    public void parse_hasExtraPrefix_throwsParseException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReturnCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + \" \" + PREFIX_PATRON + \"1\" + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"                + PREFIX_AUTHOR + \"1\", expectedMessage);","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    public void parse_hasNonEmptyPreamble_throwsParseException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReturnCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + \" \" + PREFIX_PATRON + \"1\" + \" \", expectedMessage);","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"    public void parse_onePrefixMultipleValues_throwsParseException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReturnCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        // multiple /p","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + \" \" + PREFIX_PATRON + \"1\" + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"                + PREFIX_PATRON + \"2\", expectedMessage);","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        // multiple /b","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + \" \" + PREFIX_BOOK + \"1\" + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"                + PREFIX_BOOK + \"2\", expectedMessage);","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"bingsen0806":71}},{"path":"src/test/java/seedu/address/logic/parser/book/AddBookCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.parser.book;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AUTHOR_DESC_JK_ROWLING;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AUTHOR_DESC_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BOOK_NAME_DESC_HARRY_POTTER;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BOOK_NAME_DESC_HUNGER_GAMES;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AUTHOR_DESC;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BOOK_NAME_DESC;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ISBN_DESC;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ISBN_DESC_HARRY_POTTER;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ISBN_DESC_HUNGER_GAMES;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_ADVENTURE;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_MAGIC;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_JK_ROWLING;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HARRY_POTTER;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HARRY_POTTER;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_ADVENTURE;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MAGIC;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.HARRY_POTTER;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.book.AddBookCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"public class AddBookCommandParserTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    private AddBookCommandParser parser \u003d new AddBookCommandParser();","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        Book expectedBook \u003d new BookBuilder(HARRY_POTTER).withTags(VALID_TAG_MAGIC).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + BOOK_NAME_DESC_HARRY_POTTER + ISBN_DESC_HARRY_POTTER","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"                + AUTHOR_DESC_JK_ROWLING + TAG_DESC_MAGIC, new AddBookCommand(expectedBook));","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        assertParseSuccess(parser, BOOK_NAME_DESC_HUNGER_GAMES + BOOK_NAME_DESC_HARRY_POTTER","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"                + ISBN_DESC_HARRY_POTTER + AUTHOR_DESC_JK_ROWLING","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"                + TAG_DESC_MAGIC, new AddBookCommand(expectedBook));","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        // multiple isbn - last isbn accepted","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        assertParseSuccess(parser, BOOK_NAME_DESC_HARRY_POTTER + ISBN_DESC_HUNGER_GAMES + ISBN_DESC_HARRY_POTTER","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"                + AUTHOR_DESC_JK_ROWLING + TAG_DESC_MAGIC, new AddBookCommand(expectedBook));","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        Book expectedBookMultipleTags \u003d new BookBuilder(HARRY_POTTER).withTags(VALID_TAG_ADVENTURE, VALID_TAG_MAGIC)","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"                .build();","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        assertParseSuccess(parser, BOOK_NAME_DESC_HARRY_POTTER + ISBN_DESC_HARRY_POTTER","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"                + AUTHOR_DESC_JK_ROWLING","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"                + TAG_DESC_ADVENTURE + TAG_DESC_MAGIC, new AddBookCommand(expectedBookMultipleTags));","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        // multiple authors - all accepted","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        Book expectedBookMultipleAuthors \u003d new BookBuilder(HARRY_POTTER)","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"                .withAuthors(VALID_AUTHOR_JK_ROWLING, VALID_AUTHOR_SUZANNE_COLLINS)","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"                .withTags()","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"                .build();","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        assertParseSuccess(parser, BOOK_NAME_DESC_HARRY_POTTER + ISBN_DESC_HARRY_POTTER","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"                + AUTHOR_DESC_JK_ROWLING + AUTHOR_DESC_SUZANNE_COLLINS,","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"                new AddBookCommand(expectedBookMultipleAuthors));","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        // zero tags","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        Book expectedBook \u003d new BookBuilder(HARRY_POTTER).withTags().build();","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        assertParseSuccess(parser, BOOK_NAME_DESC_HARRY_POTTER + ISBN_DESC_HARRY_POTTER","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"                + AUTHOR_DESC_JK_ROWLING,","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"                new AddBookCommand(expectedBook));","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"        // zero authors","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        expectedBook \u003d new BookBuilder(HARRY_POTTER).withAuthors().build();","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        assertParseSuccess(parser, BOOK_NAME_DESC_HARRY_POTTER + ISBN_DESC_HARRY_POTTER","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"                        + TAG_DESC_ADVENTURE + TAG_DESC_MAGIC,","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"                new AddBookCommand(expectedBook));","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddBookCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"        // missing name prefix","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, VALID_BOOK_NAME_HARRY_POTTER + ISBN_DESC_HARRY_POTTER, expectedMessage);","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"        // missing isbn prefix","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, BOOK_NAME_DESC_HARRY_POTTER + VALID_ISBN_HARRY_POTTER, expectedMessage);","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"        // all prefixes missing","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, VALID_BOOK_NAME_HARRY_POTTER + VALID_ISBN_HARRY_POTTER, expectedMessage);","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"        // invalid name","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, INVALID_BOOK_NAME_DESC + ISBN_DESC_HARRY_POTTER + AUTHOR_DESC_JK_ROWLING","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"                + TAG_DESC_ADVENTURE + TAG_DESC_MAGIC, BookName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"        // invalid phone","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, BOOK_NAME_DESC_HARRY_POTTER + INVALID_ISBN_DESC + AUTHOR_DESC_JK_ROWLING","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"                + TAG_DESC_ADVENTURE + TAG_DESC_MAGIC, Isbn.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"        // invalid tag","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, BOOK_NAME_DESC_HARRY_POTTER + ISBN_DESC_HARRY_POTTER + AUTHOR_DESC_JK_ROWLING","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"                + INVALID_TAG_DESC + TAG_DESC_MAGIC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, INVALID_BOOK_NAME_DESC + ISBN_DESC_HARRY_POTTER + INVALID_AUTHOR_DESC,","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"                BookName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"        // non-empty preamble","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + BOOK_NAME_DESC_HARRY_POTTER + ISBN_DESC_HARRY_POTTER","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"                        + AUTHOR_DESC_JK_ROWLING + TAG_DESC_ADVENTURE + TAG_DESC_MAGIC,","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddBookCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"bingsen0806":126}},{"path":"src/test/java/seedu/address/logic/parser/book/DeleteBookCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.parser.book;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.book.DeleteBookCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"public class DeleteBookCommandParserTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"    private DeleteBookCommandParser parser \u003d new DeleteBookCommandParser();","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"        assertParseSuccess(parser, \"1\", new DeleteBookCommand(INDEX_FIRST_BOOK));","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"                DeleteBookCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"        assertParseFailure(parser, \"-999\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"                DeleteBookCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"yl-ang":3,"bingsen0806":25}},{"path":"src/test/java/seedu/address/logic/parser/book/EditBookCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package seedu.address.logic.parser.book;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AUTHOR_DESC_JK_ROWLING;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AUTHOR_DESC_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BOOK_NAME_DESC_HARRY_POTTER;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BOOK_NAME_DESC_HUNGER_GAMES;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AUTHOR_DESC;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BOOK_NAME_DESC;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ISBN_DESC;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ISBN_DESC_HARRY_POTTER;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ISBN_DESC_HUNGER_GAMES;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_ADVENTURE;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_SCIFI;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_THRILLER;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_JK_ROWLING;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HARRY_POTTER;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HUNGER_GAMES;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HARRY_POTTER;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HUNGER_GAMES;","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SCIFI;","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_THRILLER;","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FOURTH_BOOK;","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_BOOK;","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.book.EditBookCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.testutil.EditBookDescriptorBuilder;","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"yuqitanyq"},"content":"public class EditBookCommandParserTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"yuqitanyq"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"yuqitanyq"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"yuqitanyq"},"content":"            EditBookCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"yuqitanyq"},"content":"    private EditBookCommandParser parser \u003d new EditBookCommandParser();","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"yuqitanyq"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"yuqitanyq"},"content":"        // no index specified","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"yuqitanyq"},"content":"        assertParseFailure(parser, PREFIX_NAME + VALID_BOOK_NAME_HARRY_POTTER, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"yuqitanyq"},"content":"        // no field specified","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"yuqitanyq"},"content":"        assertParseFailure(parser, \"1\", EditBookCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"yuqitanyq"},"content":"        // no index and not field specified","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"yuqitanyq"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"yuqitanyq"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"yuqitanyq"},"content":"        // negative index","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"yuqitanyq"},"content":"        assertParseFailure(parser, \"-5\" + BOOK_NAME_DESC_HARRY_POTTER, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"yuqitanyq"},"content":"        // zero index","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"yuqitanyq"},"content":"        assertParseFailure(parser, \"0\" + BOOK_NAME_DESC_HUNGER_GAMES, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"yuqitanyq"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"yuqitanyq"},"content":"        assertParseFailure(parser, \"1 random string here\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"yuqitanyq"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"yuqitanyq"},"content":"        assertParseFailure(parser, \"1 x/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"yuqitanyq"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"yuqitanyq"},"content":"        // invalid book name","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"yuqitanyq"},"content":"        assertParseFailure(parser, \"1\" + INVALID_BOOK_NAME_DESC, BookName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"yuqitanyq"},"content":"        // invalid isbn","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"yuqitanyq"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ISBN_DESC, Isbn.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"yuqitanyq"},"content":"        // invalid author","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"yuqitanyq"},"content":"        assertParseFailure(parser, \"1\" + INVALID_AUTHOR_DESC, Author.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"yuqitanyq"},"content":"        // invalid tag","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"yuqitanyq"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"yuqitanyq"},"content":"        // invalid isbn followed by valid author","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"yuqitanyq"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ISBN_DESC + AUTHOR_DESC_JK_ROWLING, Isbn.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"yuqitanyq"},"content":"        // valid isbn followed by invalid isbn. The test case for invalid isbn followed by valid isbn","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"yuqitanyq"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"yuqitanyq"},"content":"        assertParseFailure(parser, \"1\" + ISBN_DESC_HARRY_POTTER + INVALID_ISBN_DESC, Isbn.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"yuqitanyq"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Book} being edited","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"yuqitanyq"},"content":"        // parsing it together with a valid tag results in an error","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"yuqitanyq"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_SCIFI + TAG_DESC_THRILLER + TAG_EMPTY,","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"yuqitanyq"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"yuqitanyq"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_SCIFI + TAG_EMPTY + TAG_DESC_THRILLER,","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"yuqitanyq"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"yuqitanyq"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_SCIFI + TAG_DESC_THRILLER,","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"yuqitanyq"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"yuqitanyq"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"yuqitanyq"},"content":"        assertParseFailure(parser, \"1\" + INVALID_BOOK_NAME_DESC + INVALID_ISBN_DESC + AUTHOR_DESC_JK_ROWLING","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"yuqitanyq"},"content":"                + TAG_DESC_ADVENTURE, BookName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"yuqitanyq"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"yuqitanyq"},"content":"        Index targetIndex \u003d INDEX_SECOND_BOOK;","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"yuqitanyq"},"content":"        String userInput \u003d targetIndex.getOneBased() + BOOK_NAME_DESC_HUNGER_GAMES + TAG_DESC_THRILLER","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"yuqitanyq"},"content":"                + ISBN_DESC_HUNGER_GAMES + AUTHOR_DESC_SUZANNE_COLLINS + TAG_DESC_SCIFI;","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand.EditBookDescriptor bookDescriptor \u003d new EditBookDescriptorBuilder()","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"yuqitanyq"},"content":"                .withBookName(VALID_BOOK_NAME_HUNGER_GAMES)","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"yuqitanyq"},"content":"                .withIsbn(VALID_ISBN_HUNGER_GAMES)","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"yuqitanyq"},"content":"                .withAuthors(VALID_AUTHOR_SUZANNE_COLLINS)","lastModifiedDate":"2022-03-20"},{"lineNumber":123,"author":{"gitId":"yuqitanyq"},"content":"                .withTags(VALID_TAG_SCIFI, VALID_TAG_THRILLER)","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"yuqitanyq"},"content":"                .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand expectedCommand \u003d new EditBookCommand(targetIndex, bookDescriptor);","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":127,"author":{"gitId":"yuqitanyq"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":128,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":130,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":131,"author":{"gitId":"yuqitanyq"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-03-20"},{"lineNumber":132,"author":{"gitId":"yuqitanyq"},"content":"        Index targetIndex \u003d INDEX_FIRST_BOOK;","lastModifiedDate":"2022-03-20"},{"lineNumber":133,"author":{"gitId":"yuqitanyq"},"content":"        String userInput \u003d targetIndex.getOneBased() + BOOK_NAME_DESC_HARRY_POTTER + AUTHOR_DESC_JK_ROWLING;","lastModifiedDate":"2022-03-20"},{"lineNumber":134,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":135,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand.EditBookDescriptor bookDescriptor \u003d new EditBookDescriptorBuilder()","lastModifiedDate":"2022-03-20"},{"lineNumber":136,"author":{"gitId":"yuqitanyq"},"content":"                .withBookName(VALID_BOOK_NAME_HARRY_POTTER)","lastModifiedDate":"2022-03-20"},{"lineNumber":137,"author":{"gitId":"yuqitanyq"},"content":"                .withAuthors(VALID_AUTHOR_JK_ROWLING).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":138,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand expectedCommand \u003d new EditBookCommand(targetIndex, bookDescriptor);","lastModifiedDate":"2022-03-20"},{"lineNumber":139,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":140,"author":{"gitId":"yuqitanyq"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":141,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":142,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":143,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":144,"author":{"gitId":"yuqitanyq"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-03-20"},{"lineNumber":145,"author":{"gitId":"yuqitanyq"},"content":"        // book name","lastModifiedDate":"2022-03-20"},{"lineNumber":146,"author":{"gitId":"yuqitanyq"},"content":"        Index targetIndex \u003d INDEX_FOURTH_BOOK;","lastModifiedDate":"2022-03-20"},{"lineNumber":147,"author":{"gitId":"yuqitanyq"},"content":"        String userInput \u003d targetIndex.getOneBased() + BOOK_NAME_DESC_HARRY_POTTER;","lastModifiedDate":"2022-03-20"},{"lineNumber":148,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand.EditBookDescriptor bookDescriptor \u003d new EditBookDescriptorBuilder()","lastModifiedDate":"2022-03-20"},{"lineNumber":149,"author":{"gitId":"yuqitanyq"},"content":"                .withBookName(VALID_BOOK_NAME_HARRY_POTTER).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":150,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand expectedCommand \u003d new EditBookCommand(targetIndex, bookDescriptor);","lastModifiedDate":"2022-03-20"},{"lineNumber":151,"author":{"gitId":"yuqitanyq"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":152,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":153,"author":{"gitId":"yuqitanyq"},"content":"        // isbn","lastModifiedDate":"2022-03-20"},{"lineNumber":154,"author":{"gitId":"yuqitanyq"},"content":"        userInput \u003d targetIndex.getOneBased() + ISBN_DESC_HARRY_POTTER;","lastModifiedDate":"2022-03-20"},{"lineNumber":155,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor \u003d new EditBookDescriptorBuilder().withIsbn(VALID_ISBN_HARRY_POTTER).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":156,"author":{"gitId":"yuqitanyq"},"content":"        expectedCommand \u003d new EditBookCommand(targetIndex, bookDescriptor);","lastModifiedDate":"2022-03-20"},{"lineNumber":157,"author":{"gitId":"yuqitanyq"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":158,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":159,"author":{"gitId":"yuqitanyq"},"content":"        // author","lastModifiedDate":"2022-03-20"},{"lineNumber":160,"author":{"gitId":"yuqitanyq"},"content":"        userInput \u003d targetIndex.getOneBased() + AUTHOR_DESC_JK_ROWLING;","lastModifiedDate":"2022-03-20"},{"lineNumber":161,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor \u003d new EditBookDescriptorBuilder().withAuthors(VALID_AUTHOR_JK_ROWLING).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":162,"author":{"gitId":"yuqitanyq"},"content":"        expectedCommand \u003d new EditBookCommand(targetIndex, bookDescriptor);","lastModifiedDate":"2022-03-20"},{"lineNumber":163,"author":{"gitId":"yuqitanyq"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":164,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":165,"author":{"gitId":"yuqitanyq"},"content":"        // tags","lastModifiedDate":"2022-03-20"},{"lineNumber":166,"author":{"gitId":"yuqitanyq"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_THRILLER;","lastModifiedDate":"2022-03-20"},{"lineNumber":167,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor \u003d new EditBookDescriptorBuilder().withTags(VALID_TAG_THRILLER).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":168,"author":{"gitId":"yuqitanyq"},"content":"        expectedCommand \u003d new EditBookCommand(targetIndex, bookDescriptor);","lastModifiedDate":"2022-03-20"},{"lineNumber":169,"author":{"gitId":"yuqitanyq"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":170,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":171,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":172,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":173,"author":{"gitId":"yuqitanyq"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-03-20"},{"lineNumber":174,"author":{"gitId":"yuqitanyq"},"content":"        Index targetIndex \u003d INDEX_FIRST_BOOK;","lastModifiedDate":"2022-03-20"},{"lineNumber":175,"author":{"gitId":"yuqitanyq"},"content":"        String userInput \u003d targetIndex.getOneBased() + BOOK_NAME_DESC_HARRY_POTTER + ISBN_DESC_HARRY_POTTER","lastModifiedDate":"2022-03-20"},{"lineNumber":176,"author":{"gitId":"yuqitanyq"},"content":"                + TAG_DESC_THRILLER + BOOK_NAME_DESC_HARRY_POTTER + ISBN_DESC_HARRY_POTTER","lastModifiedDate":"2022-03-20"},{"lineNumber":177,"author":{"gitId":"yuqitanyq"},"content":"                + TAG_DESC_THRILLER + BOOK_NAME_DESC_HUNGER_GAMES + ISBN_DESC_HUNGER_GAMES","lastModifiedDate":"2022-03-20"},{"lineNumber":178,"author":{"gitId":"yuqitanyq"},"content":"                + AUTHOR_DESC_SUZANNE_COLLINS + TAG_DESC_SCIFI;","lastModifiedDate":"2022-03-20"},{"lineNumber":179,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":180,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand.EditBookDescriptor bookDescriptor \u003d new EditBookDescriptorBuilder()","lastModifiedDate":"2022-03-20"},{"lineNumber":181,"author":{"gitId":"yuqitanyq"},"content":"                .withBookName(VALID_BOOK_NAME_HUNGER_GAMES)","lastModifiedDate":"2022-03-20"},{"lineNumber":182,"author":{"gitId":"yuqitanyq"},"content":"                .withIsbn(VALID_ISBN_HUNGER_GAMES)","lastModifiedDate":"2022-03-20"},{"lineNumber":183,"author":{"gitId":"yuqitanyq"},"content":"                .withAuthors(VALID_AUTHOR_SUZANNE_COLLINS)","lastModifiedDate":"2022-03-20"},{"lineNumber":184,"author":{"gitId":"yuqitanyq"},"content":"                .withTags(VALID_TAG_THRILLER, VALID_TAG_SCIFI)","lastModifiedDate":"2022-03-20"},{"lineNumber":185,"author":{"gitId":"yuqitanyq"},"content":"                .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":186,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand expectedCommand \u003d new EditBookCommand(targetIndex, bookDescriptor);","lastModifiedDate":"2022-03-20"},{"lineNumber":187,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":188,"author":{"gitId":"yuqitanyq"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":189,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":190,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":191,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":192,"author":{"gitId":"yuqitanyq"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-03-20"},{"lineNumber":193,"author":{"gitId":"yuqitanyq"},"content":"        //no other valid values specified","lastModifiedDate":"2022-03-20"},{"lineNumber":194,"author":{"gitId":"yuqitanyq"},"content":"        Index targetIndex \u003d INDEX_FIRST_BOOK;","lastModifiedDate":"2022-03-20"},{"lineNumber":195,"author":{"gitId":"yuqitanyq"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_ISBN_DESC + ISBN_DESC_HUNGER_GAMES;","lastModifiedDate":"2022-03-20"},{"lineNumber":196,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand.EditBookDescriptor bookDescriptor \u003d new EditBookDescriptorBuilder()","lastModifiedDate":"2022-03-20"},{"lineNumber":197,"author":{"gitId":"yuqitanyq"},"content":"                .withIsbn(VALID_ISBN_HUNGER_GAMES).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":198,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand expectedCommand \u003d new EditBookCommand(targetIndex, bookDescriptor);","lastModifiedDate":"2022-03-20"},{"lineNumber":199,"author":{"gitId":"yuqitanyq"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":200,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":201,"author":{"gitId":"yuqitanyq"},"content":"        //other valid values specified","lastModifiedDate":"2022-03-20"},{"lineNumber":202,"author":{"gitId":"yuqitanyq"},"content":"        userInput \u003d targetIndex.getOneBased() + BOOK_NAME_DESC_HUNGER_GAMES + INVALID_ISBN_DESC","lastModifiedDate":"2022-03-20"},{"lineNumber":203,"author":{"gitId":"yuqitanyq"},"content":"                + ISBN_DESC_HUNGER_GAMES + AUTHOR_DESC_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-20"},{"lineNumber":204,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor \u003d new EditBookDescriptorBuilder().withBookName(VALID_BOOK_NAME_HUNGER_GAMES)","lastModifiedDate":"2022-03-20"},{"lineNumber":205,"author":{"gitId":"yuqitanyq"},"content":"                .withIsbn(VALID_ISBN_HUNGER_GAMES)","lastModifiedDate":"2022-03-20"},{"lineNumber":206,"author":{"gitId":"yuqitanyq"},"content":"                .withAuthors(VALID_AUTHOR_SUZANNE_COLLINS)","lastModifiedDate":"2022-03-20"},{"lineNumber":207,"author":{"gitId":"yuqitanyq"},"content":"                .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":208,"author":{"gitId":"yuqitanyq"},"content":"        expectedCommand \u003d new EditBookCommand(targetIndex, bookDescriptor);","lastModifiedDate":"2022-03-20"},{"lineNumber":209,"author":{"gitId":"yuqitanyq"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":210,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":211,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":212,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":213,"author":{"gitId":"yuqitanyq"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2022-03-20"},{"lineNumber":214,"author":{"gitId":"yuqitanyq"},"content":"        Index targetIndex \u003d INDEX_FOURTH_BOOK;","lastModifiedDate":"2022-03-20"},{"lineNumber":215,"author":{"gitId":"yuqitanyq"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2022-03-20"},{"lineNumber":216,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":217,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand.EditBookDescriptor bookDescriptor \u003d new EditBookDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-03-20"},{"lineNumber":218,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand expectedCommand \u003d new EditBookCommand(targetIndex, bookDescriptor);","lastModifiedDate":"2022-03-20"},{"lineNumber":219,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":220,"author":{"gitId":"yuqitanyq"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":221,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":222,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"yuqitanyq":222}},{"path":"src/test/java/seedu/address/logic/parser/book/RequestBookCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.parser.book;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATRON;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.book.RequestBookCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"public class RequestBookCommandParserTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    private RequestBookCommandParser parser \u003d new RequestBookCommandParser();","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"        assertParseSuccess(parser, \" 1 1\", new RequestBookCommand(INDEX_FIRST_PATRON, INDEX_FIRST_BOOK));","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"        assertParseSuccess(parser, \"1 1\", new RequestBookCommand(INDEX_FIRST_PATRON, INDEX_FIRST_BOOK));","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"        assertParseSuccess(parser, \"1   1 \", new RequestBookCommand(INDEX_FIRST_PATRON, INDEX_FIRST_BOOK));","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"                RequestBookCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, \"-999\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"                RequestBookCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, \"11\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"                RequestBookCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"bingsen0806":34}},{"path":"src/test/java/seedu/address/logic/parser/patron/AddPatronCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.parser.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ID_DESC;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalPatrons.AMY;","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalPatrons.BOB;","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.AddPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Email;","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Id;","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Name;","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Phone;","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"import seedu.address.testutil.PatronBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"public class AddPatronCommandParserTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"    private AddPatronCommandParser parser \u003d new AddPatronCommandParser();","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"        Patron expectedPatron \u003d new PatronBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"                + ID_DESC_BOB + TAG_DESC_FRIEND, new AddPatronCommand(expectedPatron));","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"                + ID_DESC_BOB + TAG_DESC_FRIEND, new AddPatronCommand(expectedPatron));","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"                + ID_DESC_BOB + TAG_DESC_FRIEND, new AddPatronCommand(expectedPatron));","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"                + ID_DESC_BOB + TAG_DESC_FRIEND, new AddPatronCommand(expectedPatron));","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"        // multiple ids - last id accepted","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ID_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"                + ID_DESC_BOB + TAG_DESC_FRIEND, new AddPatronCommand(expectedPatron));","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"aditi2313"},"content":"        Patron expectedPatronMultipleTags \u003d new PatronBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"aditi2313"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddPatronCommand(expectedPatronMultipleTags));","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"aditi2313"},"content":"        Patron expectedPatron \u003d new PatronBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"aditi2313"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ID_DESC_AMY,","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"                new AddPatronCommand(expectedPatron));","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"aditi2313"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatronCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ID_DESC_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ID_DESC_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ID_DESC_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"aditi2313"},"content":"        // missing id prefix","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ID_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ID_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ID_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"aditi2313"},"content":"        // invalid id","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ID_DESC","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"aditi2313"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ID_DESC,","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"aditi2313"},"content":"                + ID_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"aditi2313"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatronCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"aditi2313":47,"-":94}},{"path":"src/test/java/seedu/address/logic/parser/patron/DeletePatronCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.parser.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATRON;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.DeletePatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"public class DeletePatronCommandParserTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    private DeletePatronCommandParser parser \u003d new DeletePatronCommandParser();","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"        assertParseSuccess(parser, \"1\", new DeletePatronCommand(INDEX_FIRST_PATRON));","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"                DeletePatronCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"        assertParseFailure(parser, \"-999\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"                DeletePatronCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"yl-ang":2,"aditi2313":8,"-":25}},{"path":"src/test/java/seedu/address/logic/parser/patron/EditPatronCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.parser.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ID_DESC;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATRON;","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATRON;","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PATRON;","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Email;","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Id;","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Name;","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Phone;","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"import seedu.address.testutil.EditPatronDescriptorBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"public class EditPatronCommandParserTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPatronCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"    private EditPatronCommandParser parser \u003d new EditPatronCommandParser();","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, \"1\", EditPatronCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, \"1 z/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ID_DESC, Id.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"aditi2313"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Patron} being edited,","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"aditi2313"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND,","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"aditi2313"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"aditi2313"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ID_AMY","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"aditi2313"},"content":"                + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"aditi2313"},"content":"        Index targetIndex \u003d INDEX_SECOND_PATRON;","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":114,"author":{"gitId":"aditi2313"},"content":"                + EMAIL_DESC_AMY + ID_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand.EditPatronDescriptor descriptor \u003d new EditPatronDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"aditi2313"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withId(VALID_ID_AMY)","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"aditi2313"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATRON;","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand.EditPatronDescriptor descriptor \u003d new EditPatronDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"aditi2313"},"content":"        Index targetIndex \u003d INDEX_THIRD_PATRON;","lastModifiedDate":"2022-03-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":141,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand.EditPatronDescriptor descriptor \u003d new EditPatronDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-12"},{"lineNumber":142,"author":{"gitId":"aditi2313"},"content":"                .build();","lastModifiedDate":"2022-03-12"},{"lineNumber":143,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"aditi2313"},"content":"        descriptor \u003d new EditPatronDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":149,"author":{"gitId":"aditi2313"},"content":"        expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":154,"author":{"gitId":"aditi2313"},"content":"        descriptor \u003d new EditPatronDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":155,"author":{"gitId":"aditi2313"},"content":"        expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"aditi2313"},"content":"        userInput \u003d targetIndex.getOneBased() + ID_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":160,"author":{"gitId":"aditi2313"},"content":"        descriptor \u003d new EditPatronDescriptorBuilder().withId(VALID_ID_AMY).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":161,"author":{"gitId":"aditi2313"},"content":"        expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":166,"author":{"gitId":"aditi2313"},"content":"        descriptor \u003d new EditPatronDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":167,"author":{"gitId":"aditi2313"},"content":"        expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":173,"author":{"gitId":"aditi2313"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATRON;","lastModifiedDate":"2022-03-12"},{"lineNumber":174,"author":{"gitId":"aditi2313"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ID_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":175,"author":{"gitId":"aditi2313"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ID_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-03-09"},{"lineNumber":176,"author":{"gitId":"aditi2313"},"content":"                + PHONE_DESC_BOB + ID_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-03-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand.EditPatronDescriptor descriptor \u003d new EditPatronDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-12"},{"lineNumber":179,"author":{"gitId":"aditi2313"},"content":"                .withEmail(VALID_EMAIL_BOB).withId(VALID_ID_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"aditi2313"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATRON;","lastModifiedDate":"2022-03-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":191,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand.EditPatronDescriptor descriptor \u003d new EditPatronDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-12"},{"lineNumber":192,"author":{"gitId":"aditi2313"},"content":"                .build();","lastModifiedDate":"2022-03-12"},{"lineNumber":193,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"aditi2313"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ID_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":199,"author":{"gitId":"aditi2313"},"content":"        descriptor \u003d new EditPatronDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-12"},{"lineNumber":200,"author":{"gitId":"aditi2313"},"content":"                .withId(VALID_ID_BOB).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":201,"author":{"gitId":"aditi2313"},"content":"        expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":207,"author":{"gitId":"aditi2313"},"content":"        Index targetIndex \u003d INDEX_THIRD_PATRON;","lastModifiedDate":"2022-03-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand.EditPatronDescriptor descriptor \u003d new EditPatronDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-03-12"},{"lineNumber":211,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"aditi2313":69,"-":146}},{"path":"src/test/java/seedu/address/logic/parser/patron/FindPatronCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.parser.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.FindPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"public class FindPatronCommandParserTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    private FindPatronCommandParser parser \u003d new FindPatronCommandParser();","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"                FindPatronCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"        FindPatronCommand expectedFindCommand \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"                new FindPatronCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"aditi2313":9,"-":26}},{"path":"src/test/java/seedu/address/model/LibTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HUNGER_GAMES;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HUNGER_GAMES;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SCIFI;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.util.SampleDataUtil.getSampleBorrowedStatus;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.HARRY_POTTER;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.HUNGER_GAMES;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalPatrons.ALICE;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.exceptions.DuplicatePatronException;","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"import seedu.address.testutil.PatronBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"public class LibTaskTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    private final LibTask libTask \u003d new LibTask();","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(Collections.emptyList(), libTask.getPatronList());","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e libTask.resetData(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    public void resetData_withValidReadOnlyLibTask_replacesData() {","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        LibTask newData \u003d TypicalLibTask.getTypicalLibTask();","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        libTask.resetData(newData);","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(newData, libTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"    public void resetData_withDuplicatePatrons_throwsDuplicatePatronException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"        // Two patrons with the same identity fields","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"        Patron editedAlice \u003d new PatronBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"        List\u003cPatron\u003e newPatrons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        LibTaskStub newData \u003d new LibTaskStub(newPatrons, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(DuplicatePatronException.class, () -\u003e libTask.resetData(newData));","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"    public void hasPatron_nullPatron_throwsNullPointerException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e libTask.hasPatron(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    public void hasPatron_patronNotInLibTask_returnsFalse() {","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(libTask.hasPatron(ALICE));","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"    public void hasPatron_patronInLibTask_returnsTrue() {","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        libTask.addPatron(ALICE);","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(libTask.hasPatron(ALICE));","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"    public void hasPatron_patronWithSameIdentityFieldsInLibTask_returnsTrue() {","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        libTask.addPatron(ALICE);","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"aditi2313"},"content":"        Patron editedAlice \u003d new PatronBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(libTask.hasPatron(editedAlice));","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"aditi2313"},"content":"    public void getPatronList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e libTask.getPatronList().remove(0));","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"    public void hasBook_nullBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e libTask.hasBook(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"    public void hasBook_bookNotInLibTask_returnsFalse() {","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(libTask.hasBook(HARRY_POTTER));","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"    public void hasBook_bookInLibTask_returnsTrue() {","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"        libTask.addBook(HARRY_POTTER);","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(libTask.hasBook(HARRY_POTTER));","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"    public void hasBook_bookWithSameIdentityFieldsInLibTask_returnsTrue() {","lastModifiedDate":"2022-03-13"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"        libTask.addBook(HARRY_POTTER);","lastModifiedDate":"2022-03-13"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"        Book editedHarryPotter \u003d new BookBuilder(HARRY_POTTER)","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"                .withName(VALID_BOOK_NAME_HUNGER_GAMES)","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"                .withAuthors(VALID_AUTHOR_SUZANNE_COLLINS)","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"                .withTags(VALID_TAG_SCIFI)","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"                .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(libTask.hasBook(editedHarryPotter));","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"    public void hasSameIsbnDiffAuthorsOrName_nullBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e libTask.hasSameIsbnDiffAuthorsOrName(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"    public void hasSameIsbnDiffAuthorsOrName_hasInconsistentBook_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"        libTask.addBook(HARRY_POTTER);","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"        Book inconsistentBook \u003d new BookBuilder(HARRY_POTTER).withName(\"diffname\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(libTask.hasSameIsbnDiffAuthorsOrName(inconsistentBook));","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"    public void hasSameIsbnDiffAuthorsOrName_consistentBook_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"        libTask.addBook(HARRY_POTTER);","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"        // book with same name but different isbn is consistent","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"        Book consistentBook \u003d new BookBuilder(HARRY_POTTER).withIsbn(VALID_ISBN_HUNGER_GAMES).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(libTask.hasSameIsbnDiffAuthorsOrName(consistentBook));","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"    public void setAndEditBook_nullTarget_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e libTask.setAndEditBook(null, HARRY_POTTER));","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"    public void setAndEditBook_nullTEditedBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e libTask.setAndEditBook(HARRY_POTTER, null));","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"    public void updateBookAfterPatronEdit_someFieldsNull_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e libTask.updateBookAfterPatronEdit(null, ALICE));","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e libTask.updateBookAfterPatronEdit(ALICE, null));","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"    public void updateBookAfterPatronDelete_nullDeletedPatron_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e libTask.updateBookAfterPatronDelete(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"    public void addRequest_someFieldsNull_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e libTask.addRequest(null, ALICE));","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e libTask.addRequest(HARRY_POTTER, null));","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"    public void addRequest_hasBookWithDesiredIsbn_requestAdded() {","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"        libTask.addBook(HARRY_POTTER);","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"        Book bookWithRequest \u003d new BookBuilder(HARRY_POTTER).withRequesters(ALICE).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"bingsen0806"},"content":"        LibTask expectedLibTask \u003d new LibTask();","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"        expectedLibTask.addBook(bookWithRequest);","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"        Book bookWithSameIsbnOnly \u003d new BookBuilder(HARRY_POTTER).withName(VALID_BOOK_NAME_HUNGER_GAMES).withTags()","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"bingsen0806"},"content":"                .withAuthors(VALID_AUTHOR_SUZANNE_COLLINS).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"        libTask.addRequest(bookWithSameIsbnOnly, ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedLibTask, libTask);","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"bingsen0806"},"content":"    public void addRequest_hasNoBookWithDesiredIsbn_requestNotAdded() {","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"bingsen0806"},"content":"        libTask.addBook(HARRY_POTTER);","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"bingsen0806"},"content":"        LibTask expectedLibTask \u003d new LibTask();","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"bingsen0806"},"content":"        expectedLibTask.addBook(HARRY_POTTER);","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"bingsen0806"},"content":"        Book bookWithDifferentIsbn \u003d new BookBuilder(HARRY_POTTER).withIsbn(VALID_ISBN_HUNGER_GAMES).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"bingsen0806"},"content":"        libTask.addRequest(bookWithDifferentIsbn, ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedLibTask, libTask);","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"bingsen0806"},"content":"    public void hasAvailableCopy_nullBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e libTask.hasAvailableCopy(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"bingsen0806"},"content":"    public void hasAvailableCopy_hasAvailableSameIsbnCopy_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"bingsen0806"},"content":"        // has available copy with same isbn -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"bingsen0806"},"content":"        Book bookWithSameIsbnOnly \u003d new BookBuilder(HARRY_POTTER).withName(VALID_BOOK_NAME_HUNGER_GAMES).withTags()","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"bingsen0806"},"content":"                .withAuthors(VALID_AUTHOR_SUZANNE_COLLINS).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"bingsen0806"},"content":"        libTask.addBook(bookWithSameIsbnOnly);","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(libTask.hasAvailableCopy(HARRY_POTTER));","lastModifiedDate":"2022-03-22"},{"lineNumber":205,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":206,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"bingsen0806"},"content":"    public void hasAvailableCopy_hasAvailableDifferentIsbnCopy_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":209,"author":{"gitId":"bingsen0806"},"content":"        // has available copy with different isbn -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":210,"author":{"gitId":"bingsen0806"},"content":"        Book bookWithDifferentIsbn \u003d new BookBuilder(HARRY_POTTER).withIsbn(VALID_ISBN_HUNGER_GAMES).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":211,"author":{"gitId":"bingsen0806"},"content":"        libTask.addBook(bookWithDifferentIsbn);","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(libTask.hasAvailableCopy(HARRY_POTTER));","lastModifiedDate":"2022-03-22"},{"lineNumber":213,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":214,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":215,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":216,"author":{"gitId":"bingsen0806"},"content":"    public void hasAvailableCopy_allCopiesBorrowed_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":217,"author":{"gitId":"bingsen0806"},"content":"        // has available copy with different isbn -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":218,"author":{"gitId":"bingsen0806"},"content":"        Book borrowedBookWithSameIsbn \u003d new BookBuilder(HARRY_POTTER).withBookStatus(getSampleBorrowedStatus()).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":219,"author":{"gitId":"bingsen0806"},"content":"        libTask.addBook(borrowedBookWithSameIsbn);","lastModifiedDate":"2022-03-22"},{"lineNumber":220,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(libTask.hasAvailableCopy(HARRY_POTTER));","lastModifiedDate":"2022-03-22"},{"lineNumber":221,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":222,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":223,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":224,"author":{"gitId":"bingsen0806"},"content":"    public void isBorrowing_someFieldsNull_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":225,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e libTask.isBorrowing(null, HARRY_POTTER));","lastModifiedDate":"2022-03-22"},{"lineNumber":226,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e libTask.isBorrowing(ALICE, null));","lastModifiedDate":"2022-03-22"},{"lineNumber":227,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":228,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":229,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":230,"author":{"gitId":"bingsen0806"},"content":"    public void hasSameIsbn_noSameIsbn_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":231,"author":{"gitId":"bingsen0806"},"content":"        libTask.addBook(HARRY_POTTER);","lastModifiedDate":"2022-03-22"},{"lineNumber":232,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(libTask.hasSameIsbn(HUNGER_GAMES));","lastModifiedDate":"2022-03-22"},{"lineNumber":233,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":234,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":235,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":236,"author":{"gitId":"bingsen0806"},"content":"    public void hasSameIsbn_hasSameIsbn_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":237,"author":{"gitId":"bingsen0806"},"content":"        libTask.addBook(HARRY_POTTER);","lastModifiedDate":"2022-03-22"},{"lineNumber":238,"author":{"gitId":"bingsen0806"},"content":"        Book allFieldsDifferentExceptIsbn \u003d new BookBuilder(HARRY_POTTER).withName(VALID_BOOK_NAME_HUNGER_GAMES)","lastModifiedDate":"2022-03-22"},{"lineNumber":239,"author":{"gitId":"bingsen0806"},"content":"                .withTags().withAuthors().withRequesters(ALICE).withBookStatus(getSampleBorrowedStatus())","lastModifiedDate":"2022-03-22"},{"lineNumber":240,"author":{"gitId":"bingsen0806"},"content":"                .withTimeAdded(12345).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":241,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(libTask.hasSameIsbn(allFieldsDifferentExceptIsbn));","lastModifiedDate":"2022-03-22"},{"lineNumber":242,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":243,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":244,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":245,"author":{"gitId":"bingsen0806"},"content":"    public void getBookList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":246,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e libTask.getBookList().remove(0));","lastModifiedDate":"2022-03-13"},{"lineNumber":247,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":248,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":250,"author":{"gitId":"bingsen0806"},"content":"     * A stub ReadOnlyLibTask whose patrons list can violate interface constraints.","lastModifiedDate":"2022-03-13"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":252,"author":{"gitId":"bingsen0806"},"content":"    private static class LibTaskStub implements ReadOnlyLibTask {","lastModifiedDate":"2022-03-13"},{"lineNumber":253,"author":{"gitId":"aditi2313"},"content":"        private final ObservableList\u003cPatron\u003e patrons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-11"},{"lineNumber":254,"author":{"gitId":"bingsen0806"},"content":"        private final ObservableList\u003cBook\u003e books \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-10"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":256,"author":{"gitId":"bingsen0806"},"content":"        LibTaskStub(Collection\u003cPatron\u003e patrons, Collection\u003cBook\u003e books) {","lastModifiedDate":"2022-03-13"},{"lineNumber":257,"author":{"gitId":"aditi2313"},"content":"            this.patrons.setAll(patrons);","lastModifiedDate":"2022-03-11"},{"lineNumber":258,"author":{"gitId":"bingsen0806"},"content":"            this.books.setAll(books);","lastModifiedDate":"2022-03-10"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":262,"author":{"gitId":"aditi2313"},"content":"        public ObservableList\u003cPatron\u003e getPatronList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":263,"author":{"gitId":"aditi2313"},"content":"            return patrons;","lastModifiedDate":"2022-03-11"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":265,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":266,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":267,"author":{"gitId":"bingsen0806"},"content":"        public ObservableList\u003cBook\u003e getBookList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":268,"author":{"gitId":"bingsen0806"},"content":"            return books;","lastModifiedDate":"2022-03-10"},{"lineNumber":269,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"-":62,"bingsen0806":195,"aditi2313":15}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HUNGER_GAMES;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_BOOKS;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATRONS;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.HARRY_POTTER;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalPatrons.ALICE;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalPatrons.BENSON;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookNameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.LibTaskBuilder;","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(new LibTask(), new LibTask(modelManager.getLibTask()));","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        userPrefs.setLibTaskFilePath(Paths.get(\"lib/task/file/path\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        userPrefs.setLibTaskFilePath(Paths.get(\"new/lib/task/file/path\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"    public void setLibTaskFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setLibTaskFilePath(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    public void setLibTaskFilePath_validPath_setsLibTaskFilePath() {","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        Path path \u003d Paths.get(\"lib/task/file/path\");","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        modelManager.setLibTaskFilePath(path);","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(path, modelManager.getLibTaskFilePath());","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"    public void hasPatron_nullPatron_throwsNullPointerException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPatron(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"    public void hasBook_nullBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasBook(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"    public void hasPatron_patronNotInLibTask_returnsFalse() {","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"aditi2313"},"content":"        assertFalse(modelManager.hasPatron(ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"    public void hasBook_bookNotInLibTask_returnsFalse() {","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(modelManager.hasBook(HARRY_POTTER));","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"    public void hasPatron_patronInLibTask_returnsTrue() {","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"aditi2313"},"content":"        modelManager.addPatron(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"aditi2313"},"content":"        assertTrue(modelManager.hasPatron(ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"    public void hasBook_bookInLibTask_returnsTrue() {","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"        modelManager.addBook(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(modelManager.hasBook(HARRY_POTTER));","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"    public void hasSameIsbnDiffAuthorsOrName_nullBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasSameIsbnDiffAuthorsOrName(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"    public void hasSameIsbnDiffAuthorsOrName_hasInconsistentBook_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"        modelManager.addBook(HARRY_POTTER);","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"        Book inconsistentBook \u003d new BookBuilder(HARRY_POTTER).withName(\"diffname\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(modelManager.hasSameIsbnDiffAuthorsOrName(inconsistentBook));","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"    public void hasSameIsbnDiffAuthorsOrName_consistentBook_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"        modelManager.addBook(HARRY_POTTER);","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"        // book with same name but different isbn is consistent","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"        Book consistentBook \u003d new BookBuilder(HARRY_POTTER).withIsbn(VALID_ISBN_HUNGER_GAMES).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(modelManager.hasSameIsbnDiffAuthorsOrName(consistentBook));","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"    public void updateBookAfterPatronEdit_someFieldsNull_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.updateBookAfterPatronEdit(null, ALICE));","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.updateBookAfterPatronEdit(ALICE, null));","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"    public void updateBookAfterPatronDelete_nullDeletedPatron_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.updateBookAfterPatronDelete(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"    public void addRequest_someFieldsNull_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addRequest(null, ALICE));","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addRequest(HARRY_POTTER, null));","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"    public void hasAvailableCopy_nullBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasAvailableCopy(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"    public void isBorrowing_someFieldsNull_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.isBorrowing(null, HARRY_POTTER));","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.isBorrowing(ALICE, null));","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":162,"author":{"gitId":"aditi2313"},"content":"    public void getFilteredPatronList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":163,"author":{"gitId":"aditi2313"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPatronList().remove(0));","lastModifiedDate":"2022-03-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"    public void getFilteredBookList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredBookList().remove(0));","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":173,"author":{"gitId":"bingsen0806"},"content":"        LibTask libTask \u003d new LibTaskBuilder().withPatron(ALICE).withPatron(BENSON).build();","lastModifiedDate":"2022-03-13"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"        LibTask differentLibTask \u003d new LibTask();","lastModifiedDate":"2022-03-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"        modelManager \u003d new ModelManager(libTask, userPrefs);","lastModifiedDate":"2022-03-13"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(libTask, userPrefs);","lastModifiedDate":"2022-03-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"bingsen0806"},"content":"        // different libTask -\u003e returns false","lastModifiedDate":"2022-03-13"},{"lineNumber":192,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentLibTask, userPrefs)));","lastModifiedDate":"2022-03-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"aditi2313"},"content":"        // different filteredPatronList -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":196,"author":{"gitId":"aditi2313"},"content":"        modelManager.updateFilteredPatronList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-11"},{"lineNumber":197,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(modelManager.equals(new ModelManager(libTask, userPrefs)));","lastModifiedDate":"2022-03-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":199,"author":{"gitId":"bingsen0806"},"content":"        // different filteredBookList -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":200,"author":{"gitId":"bingsen0806"},"content":"        String[] bookKeywords \u003d HARRY_POTTER.getBookName().fullBookName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-10"},{"lineNumber":201,"author":{"gitId":"bingsen0806"},"content":"        modelManager.updateFilteredBookList(new BookNameContainsKeywordsPredicate(Arrays.asList(bookKeywords)));","lastModifiedDate":"2022-03-10"},{"lineNumber":202,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(modelManager.equals(new ModelManager(libTask, userPrefs)));","lastModifiedDate":"2022-03-13"},{"lineNumber":203,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":205,"author":{"gitId":"aditi2313"},"content":"        modelManager.updateFilteredPatronList(PREDICATE_SHOW_ALL_PATRONS);","lastModifiedDate":"2022-03-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2022-03-10"},{"lineNumber":208,"author":{"gitId":"bingsen0806"},"content":"        modelManager.updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);","lastModifiedDate":"2022-03-10"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"bingsen0806"},"content":"        differentUserPrefs.setLibTaskFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":213,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(modelManager.equals(new ModelManager(libTask, differentUserPrefs)));","lastModifiedDate":"2022-03-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"-":105,"bingsen0806":96,"aditi2313":14}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    public void setLibTaskFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setLibTaskFilePath(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":19,"bingsen0806":2}},{"path":"src/test/java/seedu/address/model/book/AuthorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"public class AuthorTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Author(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Author(invalidName));","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    public void isValidAuthor() {","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        // null author","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e Author.isValidAuthor(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        // invalid author","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Author.isValidAuthor(\"\")); // empty string","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Author.isValidAuthor(\" \")); // spaces only","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Author.isValidAuthor(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Author.isValidAuthor(\"J\u0026KRowling\")); // contains non-alphanumeric character that is not dot","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Author.isValidAuthor(\" JKRowling\")); // starts with non-alphanumeric character","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        // valid author","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Author.isValidAuthor(\"jkrowling\")); //alphabets only","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Author.isValidAuthor(\"123\")); // numbers only","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Author.isValidAuthor(\"Queen Elizabeth 1\")); // alphanumeric characters","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Author.isValidAuthor(\"J.K.Rowling\")); // with dot character","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    public void equals() {","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        // Differ by spaces -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(new Author(\"jk rowling\"), new Author(\"j k rowling\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        // Differ by case -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(new Author(\"j K Rowling\"), new Author(\"j k rowling\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        // Differ by punctuation -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        assertNotEquals(new Author(\"J. K. Rowling\"), new Author(\"J K Rowling\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        // Differ by spaces -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(new Author(\"jk rowling\").hashCode(), new Author(\"j k rowling\").hashCode());","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        // Differ by case -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(new Author(\"j K Rowling\").hashCode(), new Author(\"j k rowling\").hashCode());","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        // Differ by punctuation -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        assertNotEquals(new Author(\"J. K. Rowling\").hashCode(), new Author(\"J K Rowling\").hashCode());","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        // Testing equality on HashSet","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        HashSet\u003cAuthor\u003e set1 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        set1.add(new Author(\"jk rowling\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        HashSet\u003cAuthor\u003e set2 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        set2.add(new Author(\"j k rowling\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(set1, set2);","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        // Testing equality on lists","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        ArrayList\u003cAuthor\u003e list1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        list1.add(new Author(\"jk rowling\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"        list1.add(new Author(\"suzanne collins\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        ArrayList\u003cAuthor\u003e list2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        list2.add(new Author(\"j k rowling\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        list2.add(new Author(\"Suzanne Collins\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(list1, list2);","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(list1.hashCode(), list2.hashCode());","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":82}},{"path":"src/test/java/seedu/address/model/book/BookAuthorContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Halpfrog"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"Halpfrog"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"Halpfrog"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"Halpfrog"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"Halpfrog"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"Halpfrog"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"Halpfrog"},"content":"class BookAuthorContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"Halpfrog"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"Halpfrog"},"content":"    public void test_nameContainsKeywords() {","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"Halpfrog"},"content":"        // One keyword","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"Halpfrog"},"content":"        BookAuthorContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"Halpfrog"},"content":"                new BookAuthorContainsKeywordsPredicate(Collections.singletonList(\"Lewis\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"Halpfrog"},"content":"        assertTrue(predicate.test(new BookBuilder().withAuthors(\"Lewis Carrol\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"Halpfrog"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"Halpfrog"},"content":"        predicate \u003d new BookAuthorContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"Halpfrog"},"content":"        assertTrue(predicate.test(new BookBuilder().withAuthors(\"Alice Carol\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"Halpfrog"},"content":"        //Multiple keywords","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"Halpfrog"},"content":"        predicate \u003d new BookAuthorContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"Halpfrog"},"content":"        assertTrue(predicate.test(new BookBuilder().withAuthors(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"Halpfrog"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"Halpfrog"},"content":"        predicate \u003d new BookAuthorContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"Halpfrog"},"content":"        assertTrue(predicate.test(new BookBuilder().withAuthors(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"Halpfrog"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"Halpfrog"},"content":"    public void test_nameDoesNotContainKeywords() {","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"Halpfrog"},"content":"        //One keyword","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"Halpfrog"},"content":"        BookAuthorContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"Halpfrog"},"content":"                new BookAuthorContainsKeywordsPredicate(Collections.singletonList(\"Lewis\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"Halpfrog"},"content":"        assertFalse(predicate.test(new BookBuilder().withAuthors(\"J.K Rowling\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"Halpfrog"},"content":"        //Multiple keywords","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"Halpfrog"},"content":"        predicate \u003d new BookAuthorContainsKeywordsPredicate(Arrays.asList(\"Kat\", \"Tom\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"Halpfrog"},"content":"        assertFalse(predicate.test(new BookBuilder().withAuthors(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"Halpfrog"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"Halpfrog":46}},{"path":"src/test/java/seedu/address/model/book/BookListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HUNGER_GAMES;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HUNGER_GAMES;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RETURN_DATE;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SCIFI;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.util.SampleDataUtil.getSampleBorrowedStatus;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.AI;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.HARRY_POTTER;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.HUNGER_GAMES;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalPatrons.ALICE;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalPatrons.getTypicalPatrons;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.PatronBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"public class BookListTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    private final BookList bookList \u003d new BookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    public void contains_nullBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.contains(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    public void contains_bookNotInList_returnsFalse() {","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(bookList.contains(HARRY_POTTER));","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    public void contains_bookInList_returnsTrue() {","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(bookList.contains(HARRY_POTTER));","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"    public void contains_patronWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        Book editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withName(VALID_BOOK_NAME_HUNGER_GAMES)","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"                .withAuthors(VALID_AUTHOR_SUZANNE_COLLINS)","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"                .withTags(VALID_TAG_SCIFI)","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"                .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(bookList.contains(editedHarryPotter));","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    public void add_nullBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.add(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    public void setBook_nullTargetBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.setBook(null, HARRY_POTTER));","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    public void setBook_nullEditedBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.setBook(HARRY_POTTER, null));","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"    public void setBook_targetBookNotInList_throwsBookNotFoundException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(BookNotFoundException.class, () -\u003e bookList.setBook(HARRY_POTTER, HARRY_POTTER));","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"    public void setBook_editedBookIsSameBook_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        bookList.setBook(HARRY_POTTER, HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedBookList, bookList);","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"    public void setBook_editedBookHasSameIdentity_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"        Book editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withAuthors(VALID_AUTHOR_SUZANNE_COLLINS)","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"                .withTags(VALID_TAG_SCIFI)","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"                .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"        bookList.setBook(HARRY_POTTER, editedHarryPotter);","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(editedHarryPotter);","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedBookList, bookList);","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    public void setBook_editedBookHasDifferentIdentity_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"        bookList.setBook(HARRY_POTTER, HUNGER_GAMES);","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(HUNGER_GAMES);","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedBookList, bookList);","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"    public void updateBookAfterPatronEdit_someFieldsNull_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.updateBookAfterPatronEdit(null, ALICE));","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.updateBookAfterPatronEdit(ALICE, null));","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"    public void updateBookAfterPatronEdit_editedPersonHasBorrowedBooks_booksUpdated() {","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"        Patron patronToEdit \u003d ALICE;","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"        BookStatus dummyStatus \u003d new BookStatus(BookStatusType.BORROWED, Optional.of(patronToEdit),","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"                Optional.of(\"22-May-2022\"), Optional.of(\"31-Dec-2022\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"        Book borrowedBook \u003d new BookBuilder(HARRY_POTTER).withBookStatus(dummyStatus).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(borrowedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"        Patron editedPatron \u003d new PatronBuilder(patronToEdit).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"        BookStatus updatedStatus \u003d dummyStatus.editBorrower(editedPatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"        Book editedBorrowedBook \u003d new BookBuilder(borrowedBook).withBookStatus(updatedStatus).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(\"Borrower information of %s is also edited in some books\\n\",","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"                editedPatron.getName());","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(editedBorrowedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(bookList.updateBookAfterPatronEdit(patronToEdit, editedPatron), expectedMessage);","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(bookList, expectedBookList);","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"    public void updateBookAfterPatronEdit_editedPersonHasRequestedBooks_booksUpdated() {","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"        Patron patronToEdit \u003d ALICE;","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"        Book requestedBook \u003d new BookBuilder(HARRY_POTTER).withRequesters(patronToEdit).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(requestedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"        Patron editedPatron \u003d new PatronBuilder(patronToEdit).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"        Book editedRequestedBook \u003d new BookBuilder(requestedBook).withRequesters(editedPatron).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(\"Requester information of %s is also edited in some books\\n\",","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"                editedPatron.getName());","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(editedRequestedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(bookList.updateBookAfterPatronEdit(patronToEdit, editedPatron), expectedMessage);","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(bookList, expectedBookList);","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"    public void updateBookAfterPatronDelete_nullDeletedPatron_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.updateBookAfterPatronDelete(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"bingsen0806"},"content":"    public void updateBookAfterPatronDelete_deletedPatronHasRequestedBooks_booksUpdated() {","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"        Patron patronToDelete \u003d ALICE;","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"        Book requestedBook \u003d new BookBuilder(HARRY_POTTER).withRequesters(patronToDelete).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(requestedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"        Book editedRequestedBook \u003d new BookBuilder(requestedBook).withRequesters().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(\"%s is also deleted from the requesters list of some books\\n\",","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"                patronToDelete.getName());","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(editedRequestedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(bookList.updateBookAfterPatronDelete(patronToDelete), expectedMessage);","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(bookList, expectedBookList);","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"    public void addRequest_someFieldsNull_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.addRequest(null, ALICE));","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.addRequest(HARRY_POTTER, null));","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"bingsen0806"},"content":"    public void addRequest_hasBookWithDesiredIsbn_requestAdded() {","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"bingsen0806"},"content":"        Book bookWithRequest \u003d new BookBuilder(HARRY_POTTER).withRequesters(ALICE).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(bookWithRequest);","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"bingsen0806"},"content":"        Book bookWithSameIsbnOnly \u003d new BookBuilder(HARRY_POTTER).withName(VALID_BOOK_NAME_HUNGER_GAMES).withTags()","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"bingsen0806"},"content":"                .withAuthors(VALID_AUTHOR_SUZANNE_COLLINS).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"bingsen0806"},"content":"        bookList.addRequest(bookWithSameIsbnOnly, ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedBookList, bookList);","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"bingsen0806"},"content":"    public void addRequest_hasNoBookWithDesiredIsbn_requestNotAdded() {","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"bingsen0806"},"content":"        Book bookWithDifferentIsbn \u003d new BookBuilder(HARRY_POTTER).withIsbn(VALID_ISBN_HUNGER_GAMES).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"bingsen0806"},"content":"        bookList.addRequest(bookWithDifferentIsbn, ALICE);","lastModifiedDate":"2022-03-22"},{"lineNumber":205,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedBookList, bookList);","lastModifiedDate":"2022-03-22"},{"lineNumber":206,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":209,"author":{"gitId":"bingsen0806"},"content":"    public void hasAvailableCopy_nullBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":210,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.hasAvailableCopy(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":211,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":213,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":214,"author":{"gitId":"bingsen0806"},"content":"    public void hasAvailableCopy_hasAvailableSameIsbnCopy_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":215,"author":{"gitId":"bingsen0806"},"content":"        // has available copy with same isbn -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":216,"author":{"gitId":"bingsen0806"},"content":"        Book bookWithSameIsbnOnly \u003d new BookBuilder(HARRY_POTTER).withName(VALID_BOOK_NAME_HUNGER_GAMES).withTags()","lastModifiedDate":"2022-03-22"},{"lineNumber":217,"author":{"gitId":"bingsen0806"},"content":"                .withAuthors(VALID_AUTHOR_SUZANNE_COLLINS).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":218,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(bookWithSameIsbnOnly);","lastModifiedDate":"2022-03-22"},{"lineNumber":219,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(bookList.hasAvailableCopy(HARRY_POTTER));","lastModifiedDate":"2022-03-22"},{"lineNumber":220,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":221,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":222,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":223,"author":{"gitId":"bingsen0806"},"content":"    public void hasAvailableCopy_hasAvailableDifferentIsbnCopy_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":224,"author":{"gitId":"bingsen0806"},"content":"        // has available copy with different isbn -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":225,"author":{"gitId":"bingsen0806"},"content":"        Book bookWithDifferentIsbn \u003d new BookBuilder(HARRY_POTTER).withIsbn(VALID_ISBN_HUNGER_GAMES).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":226,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(bookWithDifferentIsbn);","lastModifiedDate":"2022-03-22"},{"lineNumber":227,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(bookList.hasAvailableCopy(HARRY_POTTER));","lastModifiedDate":"2022-03-22"},{"lineNumber":228,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":229,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":230,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":231,"author":{"gitId":"bingsen0806"},"content":"    public void hasAvailableCopy_allCopiesBorrowed_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":232,"author":{"gitId":"bingsen0806"},"content":"        // has available copy with different isbn -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":233,"author":{"gitId":"bingsen0806"},"content":"        Book borrowedBookWithSameIsbn \u003d new BookBuilder(HARRY_POTTER).withBookStatus(getSampleBorrowedStatus()).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":234,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(borrowedBookWithSameIsbn);","lastModifiedDate":"2022-03-22"},{"lineNumber":235,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(bookList.hasAvailableCopy(HARRY_POTTER));","lastModifiedDate":"2022-03-22"},{"lineNumber":236,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":237,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":238,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":239,"author":{"gitId":"bingsen0806"},"content":"    public void isBorrowing_someFieldsNull_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":240,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.isBorrowing(null, HARRY_POTTER));","lastModifiedDate":"2022-03-22"},{"lineNumber":241,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.isBorrowing(ALICE, null));","lastModifiedDate":"2022-03-22"},{"lineNumber":242,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":243,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":244,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":245,"author":{"gitId":"bingsen0806"},"content":"    public void hasSameIsbn_noSameIsbn_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":246,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-22"},{"lineNumber":247,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(bookList.hasSameIsbn(HUNGER_GAMES));","lastModifiedDate":"2022-03-22"},{"lineNumber":248,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":249,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":250,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":251,"author":{"gitId":"bingsen0806"},"content":"    public void hasSameIsbn_hasSameIsbn_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":252,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-22"},{"lineNumber":253,"author":{"gitId":"bingsen0806"},"content":"        Book allFieldsDifferentExceptIsbn \u003d new BookBuilder(HARRY_POTTER).withName(VALID_BOOK_NAME_HUNGER_GAMES)","lastModifiedDate":"2022-03-22"},{"lineNumber":254,"author":{"gitId":"bingsen0806"},"content":"                .withTags().withAuthors().withRequesters(ALICE).withBookStatus(getSampleBorrowedStatus())","lastModifiedDate":"2022-03-22"},{"lineNumber":255,"author":{"gitId":"bingsen0806"},"content":"                .withTimeAdded(12345).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":256,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(bookList.hasSameIsbn(allFieldsDifferentExceptIsbn));","lastModifiedDate":"2022-03-22"},{"lineNumber":257,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":258,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":259,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":260,"author":{"gitId":"bingsen0806"},"content":"    public void returnAllBorrowedBooks() {","lastModifiedDate":"2022-03-16"},{"lineNumber":261,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-16"},{"lineNumber":262,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(AI);","lastModifiedDate":"2022-03-16"},{"lineNumber":263,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-16"},{"lineNumber":264,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-16"},{"lineNumber":265,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(new Book(AI, BookStatus.createAvailableBookStatus()));","lastModifiedDate":"2022-03-16"},{"lineNumber":266,"author":{"gitId":"bingsen0806"},"content":"        bookList.returnAllBorrowedBooks(getTypicalPatrons().get(0));","lastModifiedDate":"2022-03-16"},{"lineNumber":267,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedBookList, bookList);","lastModifiedDate":"2022-03-16"},{"lineNumber":268,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":269,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":270,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":271,"author":{"gitId":"bingsen0806"},"content":"    public void hasSameIsbnDiffAuthorsOrName() {","lastModifiedDate":"2022-03-22"},{"lineNumber":272,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-22"},{"lineNumber":273,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":274,"author":{"gitId":"bingsen0806"},"content":"        // same isbn but different name -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":275,"author":{"gitId":"bingsen0806"},"content":"        Book book2 \u003d new BookBuilder(HARRY_POTTER).withName(\"diff name\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":276,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(bookList.hasSameIsbnDiffAuthorsOrName(book2));","lastModifiedDate":"2022-03-22"},{"lineNumber":277,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":278,"author":{"gitId":"bingsen0806"},"content":"        // same isbn but different authors -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":279,"author":{"gitId":"bingsen0806"},"content":"        book2 \u003d new BookBuilder(HARRY_POTTER).withAuthors(\"some author\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":280,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(bookList.hasSameIsbnDiffAuthorsOrName(book2));","lastModifiedDate":"2022-03-22"},{"lineNumber":281,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":282,"author":{"gitId":"bingsen0806"},"content":"        // different isbn, but same authors and book name is allowed -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":283,"author":{"gitId":"bingsen0806"},"content":"        book2 \u003d new BookBuilder(HARRY_POTTER).withIsbn(VALID_ISBN_HUNGER_GAMES).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":284,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(bookList.hasSameIsbnDiffAuthorsOrName(book2));","lastModifiedDate":"2022-03-22"},{"lineNumber":285,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":286,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":287,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":288,"author":{"gitId":"bingsen0806"},"content":"    public void isBorrowingSomeBook_nullBorrower_throwsNullPointerException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":289,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.isBorrowingSomeBook(null));","lastModifiedDate":"2022-03-16"},{"lineNumber":290,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":291,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":292,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":293,"author":{"gitId":"bingsen0806"},"content":"    public void isBorrowingSomeBook_borrowsNothing_returnsFalse() {","lastModifiedDate":"2022-03-16"},{"lineNumber":294,"author":{"gitId":"bingsen0806"},"content":"        Patron borrower \u003d getTypicalPatrons().get(2);","lastModifiedDate":"2022-03-16"},{"lineNumber":295,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-16"},{"lineNumber":296,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(bookList.isBorrowingSomeBook(borrower));","lastModifiedDate":"2022-03-16"},{"lineNumber":297,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":298,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":299,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":300,"author":{"gitId":"bingsen0806"},"content":"    public void isBorrowingSomeBook_hasBorrowedBook_returnsTrue() {","lastModifiedDate":"2022-03-16"},{"lineNumber":301,"author":{"gitId":"bingsen0806"},"content":"        Patron borrower \u003d getTypicalPatrons().get(0);","lastModifiedDate":"2022-03-16"},{"lineNumber":302,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(AI);","lastModifiedDate":"2022-03-16"},{"lineNumber":303,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(bookList.isBorrowingSomeBook(borrower));","lastModifiedDate":"2022-03-16"},{"lineNumber":304,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":305,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":306,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":307,"author":{"gitId":"bingsen0806"},"content":"    public void borrowBook_someFieldsNull_throwsBookNotFoundException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":308,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-16"},{"lineNumber":309,"author":{"gitId":"bingsen0806"},"content":"        // null borrower","lastModifiedDate":"2022-03-16"},{"lineNumber":310,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":311,"author":{"gitId":"bingsen0806"},"content":"                bookList.borrowBook(null, HARRY_POTTER, VALID_RETURN_DATE));","lastModifiedDate":"2022-03-16"},{"lineNumber":312,"author":{"gitId":"bingsen0806"},"content":"        // null borrower","lastModifiedDate":"2022-03-16"},{"lineNumber":313,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":314,"author":{"gitId":"bingsen0806"},"content":"                bookList.borrowBook(ALICE, null, VALID_RETURN_DATE));","lastModifiedDate":"2022-03-16"},{"lineNumber":315,"author":{"gitId":"bingsen0806"},"content":"        // null return date","lastModifiedDate":"2022-03-16"},{"lineNumber":316,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":317,"author":{"gitId":"bingsen0806"},"content":"                bookList.borrowBook(ALICE, HARRY_POTTER, null));","lastModifiedDate":"2022-03-16"},{"lineNumber":318,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":319,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":320,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":321,"author":{"gitId":"bingsen0806"},"content":"    public void borrowBook_validInputs_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":322,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-16"},{"lineNumber":323,"author":{"gitId":"bingsen0806"},"content":"        Patron borrower \u003d ALICE;","lastModifiedDate":"2022-03-16"},{"lineNumber":324,"author":{"gitId":"bingsen0806"},"content":"        BookStatus borrowedStatus \u003d new BookStatus(BookStatusType.BORROWED,","lastModifiedDate":"2022-03-16"},{"lineNumber":325,"author":{"gitId":"bingsen0806"},"content":"                Optional.of(borrower), Optional.of(BookStatus.getCurrentDateString()), Optional.of(VALID_RETURN_DATE));","lastModifiedDate":"2022-03-16"},{"lineNumber":326,"author":{"gitId":"bingsen0806"},"content":"        Book editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withBookStatus(borrowedStatus).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":327,"author":{"gitId":"bingsen0806"},"content":"        bookList.borrowBook(borrower, HARRY_POTTER, VALID_RETURN_DATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":328,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":329,"author":{"gitId":"bingsen0806"},"content":"        // no longer contains the old available book","lastModifiedDate":"2022-03-16"},{"lineNumber":330,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(bookList.asUnmodifiableObservableList().contains(HARRY_POTTER));","lastModifiedDate":"2022-03-16"},{"lineNumber":331,"author":{"gitId":"bingsen0806"},"content":"        // contains the new borrowed book","lastModifiedDate":"2022-03-16"},{"lineNumber":332,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(bookList.asUnmodifiableObservableList().contains(editedHarryPotter));","lastModifiedDate":"2022-03-16"},{"lineNumber":333,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":334,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":335,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":336,"author":{"gitId":"bingsen0806"},"content":"    public void remove_nullBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":337,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.remove(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":338,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":339,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":340,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":341,"author":{"gitId":"bingsen0806"},"content":"    public void remove_bookDoesNotExist_throwsBookNotFoundException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":342,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(BookNotFoundException.class, () -\u003e bookList.remove(HARRY_POTTER));","lastModifiedDate":"2022-03-10"},{"lineNumber":343,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":344,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":345,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":346,"author":{"gitId":"bingsen0806"},"content":"    public void remove_existingBook_removesBook() {","lastModifiedDate":"2022-03-10"},{"lineNumber":347,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":348,"author":{"gitId":"bingsen0806"},"content":"        bookList.remove(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":349,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":350,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedBookList, bookList);","lastModifiedDate":"2022-03-10"},{"lineNumber":351,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":352,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":353,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":354,"author":{"gitId":"bingsen0806"},"content":"    public void setBooks_nullBookList_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":355,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.setBooks((BookList) null));","lastModifiedDate":"2022-03-10"},{"lineNumber":356,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":357,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":358,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":359,"author":{"gitId":"bingsen0806"},"content":"    public void setBooks_bookList_replacesOwnListWithProvidedBookList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":360,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":361,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":362,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(HUNGER_GAMES);","lastModifiedDate":"2022-03-10"},{"lineNumber":363,"author":{"gitId":"bingsen0806"},"content":"        bookList.setBooks(expectedBookList);","lastModifiedDate":"2022-03-10"},{"lineNumber":364,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedBookList, bookList);","lastModifiedDate":"2022-03-10"},{"lineNumber":365,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":366,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":367,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":368,"author":{"gitId":"bingsen0806"},"content":"    public void setBooks_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":369,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.setBooks((List\u003cBook\u003e) null));","lastModifiedDate":"2022-03-10"},{"lineNumber":370,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":371,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":372,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":373,"author":{"gitId":"bingsen0806"},"content":"    public void setBooks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":374,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":375,"author":{"gitId":"bingsen0806"},"content":"        List\u003cBook\u003e listOfBooks \u003d Collections.singletonList(HUNGER_GAMES);","lastModifiedDate":"2022-03-10"},{"lineNumber":376,"author":{"gitId":"bingsen0806"},"content":"        bookList.setBooks(listOfBooks);","lastModifiedDate":"2022-03-10"},{"lineNumber":377,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":378,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(HUNGER_GAMES);","lastModifiedDate":"2022-03-10"},{"lineNumber":379,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedBookList, bookList);","lastModifiedDate":"2022-03-10"},{"lineNumber":380,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":381,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":382,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":383,"author":{"gitId":"bingsen0806"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":384,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-03-10"},{"lineNumber":385,"author":{"gitId":"bingsen0806"},"content":"            -\u003e bookList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-03-10"},{"lineNumber":386,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":387,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":386,"aditi2313":1}},{"path":"src/test/java/seedu/address/model/book/BookNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"Halpfrog"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"Halpfrog"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"public class BookNameContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"    public void equals() {","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"        BookNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"                new BookNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"        BookNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"                new BookNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"Halpfrog"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        BookNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"                new BookNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"Halpfrog"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"Halpfrog"},"content":"        assertNotEquals(1, firstPredicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"Halpfrog"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"        // different patron -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"Halpfrog"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        // One keyword","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        BookNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"                new BookNameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(predicate.test(new BookBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        predicate \u003d new BookNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(predicate.test(new BookBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        predicate \u003d new BookNameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(predicate.test(new BookBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        predicate \u003d new BookNameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(predicate.test(new BookBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        BookNameContainsKeywordsPredicate predicate \u003d new BookNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(predicate.test(new BookBuilder().withName(\"Harry Potter\").build()));","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        predicate \u003d new BookNameContainsKeywordsPredicate(Arrays.asList(\"Harry\", \"Potter\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(predicate.test(new BookBuilder().withName(\"Hunger Games\").build()));","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        // Keywords match isbn, but does not match name","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"Halpfrog"},"content":"        predicate \u003d new BookNameContainsKeywordsPredicate(List.of(\"978-71617-018-8-5\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(predicate.test(new BookBuilder().withName(\"Harry Potter\")","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(\"978-71617-018-8-5\").build()));","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":72,"Halpfrog":9,"aditi2313":1}},{"path":"src/test/java/seedu/address/model/book/BookNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"public class BookNameTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e new BookName(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BookName(invalidName));","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    public void isValidBookName() {","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        // null book name","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e BookName.isValidBookName(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        // invalid book name","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(BookName.isValidBookName(\"\")); // empty string","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(BookName.isValidBookName(\" \")); // spaces only","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(BookName.isValidBookName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(BookName.isValidBookName(\"Harry\u0026Potter\")); // contains non-alphanumeric characters not : or \u0027","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(BookName.isValidBookName(\" HarryPotter\")); // starts with non-alphanumeric character","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"        // invalid book name but should be valid books","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"        assertFalse(BookName.isValidBookName(\"Who Moved My Cheese?\")); // ends with \"?\"","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"        assertFalse(BookName.isValidBookName(\"4.50_from_Paddington\")); // contains \".\"","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"        assertFalse(BookName.isValidBookName(\"11/22/63\")); // contains \"/\"","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"        assertFalse(BookName.isValidBookName(\"Winnie-the-Pooh\")); // contains \"-\"","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        // valid name","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(BookName.isValidBookName(\"Harry Potter\")); //alphabets only","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(BookName.isValidBookName(\"123\")); // numbers only","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(BookName.isValidBookName(\"Harry Potter 2\")); // alphanumeric characters","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(BookName.isValidBookName(\"Harry Potter 1 The Philosopher\u0027s Stone\")); // with \u0027 character","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(BookName.isValidBookName(\"Algorithms: 1st Edition\")); // with : character","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    public void equals() {","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        // Differ by spaces -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(new BookName(\"harrypotter\"), new BookName(\"harry potter\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        // Differ by case -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(new BookName(\"harry potter\"), new BookName(\"Harry Potter\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        // Differ by punctuation -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        assertNotEquals(new BookName(\"harry:potter\"), new BookName(\"harry potter\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        // Differ by spaces -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(new BookName(\"harrypotter\").hashCode(), new BookName(\"harry potter\").hashCode());","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        // Differ by case -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(new BookName(\"harry potter\").hashCode(), new BookName(\"Harry Potter\").hashCode());","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        // Differ by punctuation -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        assertNotEquals(new BookName(\"harry:potter\").hashCode(), new BookName(\"harry potter\").hashCode());","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        // Testing equality on HashSet","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        HashSet\u003cBookName\u003e set1 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        set1.add(new BookName(\"harrypotter\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"        HashSet\u003cBookName\u003e set2 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        set2.add(new BookName(\"Harry Potter\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(set1, set2);","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"        // Testing equality on lists","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"        ArrayList\u003cBookName\u003e list1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"        list1.add(new BookName(\"harrypotter\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"        list1.add(new BookName(\"hunger games\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        ArrayList\u003cBookName\u003e list2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        list2.add(new BookName(\"harry potter\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"        list2.add(new BookName(\"Hunger Games\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(list1, list2);","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(list1.hashCode(), list2.hashCode());","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"yl-ang":6,"bingsen0806":84}},{"path":"src/test/java/seedu/address/model/book/BookRelatedToPatronPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"import seedu.address.testutil.PatronBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"public class BookRelatedToPatronPredicateTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"    public void equals() {","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"        Patron firstPredicatePatron \u003d new PatronBuilder().withName(\"Alice Bob\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"        Patron secondPredicatePatron \u003d new PatronBuilder().withName(\"Alice Carol\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"        BookRelatedToPatronPredicate firstPredicate \u003d new BookRelatedToPatronPredicate(firstPredicatePatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"        BookRelatedToPatronPredicate secondPredicate \u003d new BookRelatedToPatronPredicate(secondPredicatePatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"        // same values -\u003e return true","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"        BookRelatedToPatronPredicate firstPredicateCopy \u003d new BookRelatedToPatronPredicate(firstPredicatePatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"        // different types -\u003e return false","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"        assertFalse(firstPredicate.equals(\"A\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"        // different patron -\u003e return false","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"    public void test_bookRelatedToPatron_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"        // Patron related to book","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"        Patron predicatePatron \u003d SampleDataUtil.getSamplePatrons()[0];","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"        BookRelatedToPatronPredicate predicate \u003d new BookRelatedToPatronPredicate(predicatePatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"        assertTrue(predicate.test(BookBuilder.bookBuilderWithBorrowedStatus().build()));","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"    public void test_bookRelatedToPatron_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"        // Zero patrons","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"        BookRelatedToPatronPredicate predicate \u003d new BookRelatedToPatronPredicate(null);","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"        assertFalse(predicate.test(BookBuilder.bookBuilderWithBorrowedStatus().build()));","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"        // Non matching patron","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"        Patron predicatePatron \u003d SampleDataUtil.getSamplePatrons()[1];","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"        predicate \u003d new BookRelatedToPatronPredicate(predicatePatron);","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"        assertFalse(predicate.test(BookBuilder.bookBuilderWithBorrowedStatus().build()));","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"yl-ang":59}},{"path":"src/test/java/seedu/address/model/book/BookStatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.book.BookStatus.createAvailableBookStatus;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.book.BookStatus.isValidStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.book.BookStatusType.AVAILABLE;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.book.BookStatusType.BORROWED;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.util.SampleDataUtil.getSampleBorrowedStatus;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalPatrons.ALICE;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalPatrons.getTypicalPatrons;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"public class BookStatusTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    private static final Optional\u003cPatron\u003e VALID_BORROWER \u003d Optional.of(getTypicalPatrons().get(0));","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    private static final Optional\u003cString\u003e VALID_BORROW_DATE \u003d Optional.of(\"14-Feb-2022\");","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    private static final Optional\u003cString\u003e VALID_RETURN_DATE \u003d Optional.of(\"28-Feb-2022\");","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_someFieldsNull_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        // null book status type","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"                new BookStatus(null, VALID_BORROWER, VALID_BORROW_DATE, VALID_RETURN_DATE));","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        // null borrower","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"                new BookStatus(AVAILABLE, null, VALID_BORROW_DATE, VALID_RETURN_DATE));","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        // null borrow date","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"                new BookStatus(AVAILABLE, VALID_BORROWER, null, VALID_RETURN_DATE));","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        // null return date","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"                new BookStatus(AVAILABLE, VALID_BORROWER, VALID_BORROW_DATE, null));","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    public void editBorrower_nullEditedBorrower_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e getSampleBorrowedStatus().editBorrower(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    public void editBorrower_statusNotBorrowed_throwsAssertionError() {","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(AssertionError.class, () -\u003e createAvailableBookStatus().editBorrower(ALICE));","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    public void isValidStatus_invalidFields_returnsFalse() {","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        // Available status with some fields present","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(isValidStatus(AVAILABLE, Optional.empty(), Optional.empty(), VALID_RETURN_DATE));","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(isValidStatus(AVAILABLE, Optional.empty(), VALID_BORROW_DATE, Optional.empty()));","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(isValidStatus(AVAILABLE, VALID_BORROWER, Optional.empty(), Optional.empty()));","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        // Borrowed status with some fields empty","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(isValidStatus(BORROWED, Optional.empty(), VALID_BORROW_DATE, VALID_RETURN_DATE));","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(isValidStatus(BORROWED, VALID_BORROWER, Optional.empty(), VALID_RETURN_DATE));","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(isValidStatus(BORROWED, VALID_BORROWER, VALID_BORROW_DATE, Optional.empty()));","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        // Borrowed status with invalid date format","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(isValidStatus(BORROWED, VALID_BORROWER, VALID_BORROW_DATE, Optional.of(\"24/Feb/2021\")));","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(isValidStatus(BORROWED, VALID_BORROWER, VALID_BORROW_DATE, Optional.of(\"24--Feb-2021\")));","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(isValidStatus(BORROWED, VALID_BORROWER, VALID_BORROW_DATE, Optional.of(\"24--MON-2021\")));","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(isValidStatus(BORROWED, VALID_BORROWER, VALID_BORROW_DATE, Optional.of(\"24--SUN-2021\")));","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(isValidStatus(BORROWED, VALID_BORROWER, Optional.of(\"24/Feb/2021\"), VALID_RETURN_DATE));","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(isValidStatus(BORROWED, VALID_BORROWER, Optional.of(\"24--Feb-2021\"), VALID_RETURN_DATE));","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(isValidStatus(BORROWED, VALID_BORROWER, Optional.of(\"24--MON-2021\"), VALID_RETURN_DATE));","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(isValidStatus(BORROWED, VALID_BORROWER, Optional.of(\"24--SUN-2021\"), VALID_RETURN_DATE));","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"    public void isValidStatus_validFields_returnsTrue() {","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"        // valid available status","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(isValidStatus(AVAILABLE, Optional.empty(), Optional.empty(),","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"                Optional.empty()));","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"        // valid borrowed status","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(isValidStatus(BORROWED, VALID_BORROWER, VALID_BORROW_DATE, VALID_RETURN_DATE));","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"bingsen0806":89}},{"path":"src/test/java/seedu/address/model/book/BookTagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Halpfrog"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"Halpfrog"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"Halpfrog"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"Halpfrog"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"Halpfrog"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"Halpfrog"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"Halpfrog"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"Halpfrog"},"content":"class BookTagContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"Halpfrog"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"Halpfrog"},"content":"    public void test_tagContainsKeywords() {","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"Halpfrog"},"content":"        // One keyword","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"Halpfrog"},"content":"        BookTagContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"Halpfrog"},"content":"                new BookTagContainsKeywordsPredicate(Collections.singletonList(\"Adventure\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"Halpfrog"},"content":"        assertTrue(predicate.test(new BookBuilder().withTags(\"Adventure\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"Halpfrog"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"Halpfrog"},"content":"        predicate \u003d new BookTagContainsKeywordsPredicate(Arrays.asList(\"Fiction\", \"Carol\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"Halpfrog"},"content":"        assertTrue(predicate.test(new BookBuilder().withTags(\"SciFi\", \"Carol\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"Halpfrog"},"content":"        //Multiple keywords","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"Halpfrog"},"content":"        predicate \u003d new BookTagContainsKeywordsPredicate(Arrays.asList(\"SciFi\", \"Fiction\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"Halpfrog"},"content":"        assertTrue(predicate.test(new BookBuilder().withTags(\"SciFi\", \"Fiction\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"Halpfrog"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"Halpfrog"},"content":"        predicate \u003d new BookTagContainsKeywordsPredicate(Arrays.asList(\"sciFi\", \"fICTION\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"Halpfrog"},"content":"        assertTrue(predicate.test(new BookBuilder().withTags(\"SciFi\", \"Fiction\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"Halpfrog"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"Halpfrog"},"content":"    public void test_nameDoesNotContainKeywords() {","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"Halpfrog"},"content":"        //One keyword","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"Halpfrog"},"content":"        BookTagContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"Halpfrog"},"content":"                new BookTagContainsKeywordsPredicate(Collections.singletonList(\"Adventure\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"Halpfrog"},"content":"        assertFalse(predicate.test(new BookBuilder().withTags(\"Bouldering\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"Halpfrog"},"content":"        //Multiple keywords","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"Halpfrog"},"content":"        predicate \u003d new BookTagContainsKeywordsPredicate(Arrays.asList(\"Kat\", \"Tom\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"Halpfrog"},"content":"        assertFalse(predicate.test(new BookBuilder().withTags(\"SciFi\", \"Fiction\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"Halpfrog"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"Halpfrog"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"Halpfrog":48}},{"path":"src/test/java/seedu/address/model/book/BookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HARRY_POTTER;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HUNGER_GAMES;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HARRY_POTTER;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HARRY_POTTER_2;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HUNGER_GAMES;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SCIFI;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.util.SampleDataUtil.SAMPLE_BOOK_CREATED_TIME;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.util.SampleDataUtil.getSampleBorrowedStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.HARRY_POTTER;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.HUNGER_GAMES;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.SEMAPHORE;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalPatrons.ALICE;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalPatrons.BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"public class BookTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    private static final BookName VALID_BOOK_NAME \u003d new BookName(VALID_BOOK_NAME_HARRY_POTTER);","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    private static final BookStatus VALID_AVAILABLE_STATUS \u003d BookStatus.createAvailableBookStatus();","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    private static final Isbn VALID_ISBN \u003d new Isbn(VALID_ISBN_HARRY_POTTER);","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    private static final List\u003cAuthor\u003e VALID_AUTHORS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    private static final Set\u003cTag\u003e VALID_TAGS \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    private static final BookStatus VALID_BORROWED_STATUS \u003d getSampleBorrowedStatus();","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    private static final Set\u003cPatron\u003e VALID_REQUESTERS \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_nullBookName_throwsNullPointerException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Book(null, VALID_ISBN, VALID_AUTHORS, VALID_TAGS,","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"                SAMPLE_BOOK_CREATED_TIME, VALID_AVAILABLE_STATUS, VALID_REQUESTERS));","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_nullIsbn_throwsNullPointerException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Book(VALID_BOOK_NAME, null, VALID_AUTHORS, VALID_TAGS,","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"                SAMPLE_BOOK_CREATED_TIME, VALID_AVAILABLE_STATUS, VALID_REQUESTERS));","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_nullAuthors_throwsNullPointerException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Book(VALID_BOOK_NAME, VALID_ISBN, null, VALID_TAGS,","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"                SAMPLE_BOOK_CREATED_TIME, VALID_AVAILABLE_STATUS, VALID_REQUESTERS));","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_nullTags_throwsNullPointerException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Book(VALID_BOOK_NAME, VALID_ISBN, VALID_AUTHORS, null,","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"                SAMPLE_BOOK_CREATED_TIME, VALID_AVAILABLE_STATUS, VALID_REQUESTERS));","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_nullBookStatus_throwsNullPointerException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Book(VALID_BOOK_NAME, VALID_ISBN, VALID_AUTHORS, VALID_TAGS,","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"                SAMPLE_BOOK_CREATED_TIME, null, VALID_REQUESTERS));","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_nullRequesters_throwsNullPointerException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Book(VALID_BOOK_NAME, VALID_ISBN, VALID_AUTHORS, VALID_TAGS,","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"                SAMPLE_BOOK_CREATED_TIME, VALID_AVAILABLE_STATUS, null));","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_copyFromOriginalBook_changesBookStatus() {","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"        Book originalBook \u003d new Book(VALID_BOOK_NAME, VALID_ISBN, VALID_AUTHORS, VALID_TAGS,","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"                SAMPLE_BOOK_CREATED_TIME, VALID_AVAILABLE_STATUS, VALID_REQUESTERS);","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"        Book newBook \u003d new Book(originalBook, VALID_BORROWED_STATUS);","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        Book expectedBook \u003d new BookBuilder(originalBook).withBookStatus(VALID_BORROWED_STATUS).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(newBook, expectedBook);","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        Book book \u003d new BookBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e book.getTags().remove(0));","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e book.getAuthors().remove(0));","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e book.getRequesters().remove(0));","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"    public void isSameBook() {","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(HARRY_POTTER.isSameBook(HARRY_POTTER));","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.isSameBook(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"        // same isbn, all other attributes different -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"        Book editedAlice \u003d new BookBuilder(HARRY_POTTER).withName(VALID_BOOK_NAME_HUNGER_GAMES)","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"                .withAuthors(VALID_AUTHOR_SUZANNE_COLLINS)","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"                .withTags(VALID_TAG_SCIFI).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(HARRY_POTTER.isSameBook(editedAlice));","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"        // different isbn, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"        editedAlice \u003d new BookBuilder(HARRY_POTTER).withIsbn(VALID_ISBN_HUNGER_GAMES).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.isSameBook(editedAlice));","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"    public void equals() {","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"        Book harryPotterCopy \u003d new BookBuilder(HARRY_POTTER).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(HARRY_POTTER.equals(harryPotterCopy));","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(HARRY_POTTER.equals(HARRY_POTTER));","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.equals(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.equals(5));","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"        // different book -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.equals(SEMAPHORE));","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"        Book editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withName(VALID_BOOK_NAME_HUNGER_GAMES).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-09"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"        // different isbn -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"        editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withIsbn(VALID_ISBN_HUNGER_GAMES).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"        // same isbn but different hyphen positions -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"        editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withIsbn(VALID_ISBN_HARRY_POTTER_2).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-09"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"        editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withTags(VALID_TAG_SCIFI).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-09"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"        // different timeAdded -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"        editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withTimeAdded(0).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"        editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withBookStatus(getSampleBorrowedStatus()).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"        // same authors but with spacing, letter case, and ordering difference -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"        Book book1 \u003d new BookBuilder(HARRY_POTTER).withAuthors(\"author 1\", \"author 2\").build();","lastModifiedDate":"2022-03-21"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"        Book book2 \u003d new BookBuilder(HARRY_POTTER).withAuthors(\"Author2\", \"Author1\").build();","lastModifiedDate":"2022-03-21"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(book1.equals(book2));","lastModifiedDate":"2022-03-21"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"        // same book name but with spacing and letter case difference -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":162,"author":{"gitId":"bingsen0806"},"content":"        book1 \u003d new BookBuilder(HARRY_POTTER).withName(\"harry potter\").build();","lastModifiedDate":"2022-03-21"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"        book2 \u003d new BookBuilder(HARRY_POTTER).withName(\"HarryPotter\").build();","lastModifiedDate":"2022-03-21"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(book1.equals(book2));","lastModifiedDate":"2022-03-21"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":166,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":167,"author":{"gitId":"yl-ang"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":168,"author":{"gitId":"yl-ang"},"content":"    public void isBookAvailable_bookAvailable_returnsTrue() {","lastModifiedDate":"2022-03-18"},{"lineNumber":169,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":170,"author":{"gitId":"yl-ang"},"content":"        // Book available -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":171,"author":{"gitId":"yl-ang"},"content":"        assertTrue(() -\u003e new Book(VALID_BOOK_NAME, VALID_ISBN, VALID_AUTHORS, VALID_TAGS, SAMPLE_BOOK_CREATED_TIME,","lastModifiedDate":"2022-03-18"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"                VALID_AVAILABLE_STATUS, VALID_REQUESTERS).isAvailable());","lastModifiedDate":"2022-03-21"},{"lineNumber":173,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":174,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":175,"author":{"gitId":"yl-ang"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":176,"author":{"gitId":"yl-ang"},"content":"    public void isBookAvailable_bookBorrowed_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"yl-ang"},"content":"        // book borrowed -\u003e return false","lastModifiedDate":"2022-03-18"},{"lineNumber":178,"author":{"gitId":"yl-ang"},"content":"        assertFalse(() -\u003e new Book(VALID_BOOK_NAME, VALID_ISBN, VALID_AUTHORS, VALID_TAGS, SAMPLE_BOOK_CREATED_TIME,","lastModifiedDate":"2022-03-18"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"                VALID_BORROWED_STATUS, VALID_REQUESTERS).isAvailable());","lastModifiedDate":"2022-03-21"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":181,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":182,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"bingsen0806"},"content":"    public void editRequester_someFieldsNull_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"bingsen0806"},"content":"        // old requester is null","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e HARRY_POTTER.editRequester(null, ALICE));","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"bingsen0806"},"content":"        //edited requester is null","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e HARRY_POTTER.editRequester(ALICE, null));","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"bingsen0806"},"content":"    public void editRequester_bookNotRequestedByOldRequester_throwsAssertionError() {","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(AssertionError.class, () -\u003e HARRY_POTTER.editRequester(ALICE, BOB));","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"bingsen0806"},"content":"    public void editRequester_bookRequestedByOldRequester_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"bingsen0806"},"content":"        Book book \u003d new BookBuilder(HARRY_POTTER).withRequesters(ALICE).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"bingsen0806"},"content":"        Book expectedBook \u003d new BookBuilder(book).withRequesters(BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(book.editRequester(ALICE, BOB), expectedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"bingsen0806"},"content":"    public void deleteRequester_nullOldRequester_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":205,"author":{"gitId":"bingsen0806"},"content":"        // old requester is null","lastModifiedDate":"2022-03-22"},{"lineNumber":206,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e HARRY_POTTER.deleteRequester(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":209,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":210,"author":{"gitId":"bingsen0806"},"content":"    public void deleteRequester_bookNotRequestedByOldRequester_throwsAssertionError() {","lastModifiedDate":"2022-03-22"},{"lineNumber":211,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(AssertionError.class, () -\u003e HARRY_POTTER.deleteRequester(ALICE));","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":213,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":214,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":215,"author":{"gitId":"bingsen0806"},"content":"    public void deleteRequester_bookRequestedByOldRequester_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":216,"author":{"gitId":"bingsen0806"},"content":"        Book book \u003d new BookBuilder(HARRY_POTTER).withRequesters(ALICE).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":217,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(book.deleteRequester(ALICE), HARRY_POTTER);","lastModifiedDate":"2022-03-22"},{"lineNumber":218,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":219,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":220,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":221,"author":{"gitId":"bingsen0806"},"content":"    public void editBorrower_nullEditedBorrower_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":222,"author":{"gitId":"bingsen0806"},"content":"        // edited borrower is null","lastModifiedDate":"2022-03-22"},{"lineNumber":223,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e HARRY_POTTER.editBorrower(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":224,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":225,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":226,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":227,"author":{"gitId":"bingsen0806"},"content":"    public void editBorrower_bookNotBorrowed_throwsAssertionError() {","lastModifiedDate":"2022-03-22"},{"lineNumber":228,"author":{"gitId":"bingsen0806"},"content":"        // this book is not borrowed","lastModifiedDate":"2022-03-22"},{"lineNumber":229,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(AssertionError.class, () -\u003e HARRY_POTTER.editBorrower(ALICE));","lastModifiedDate":"2022-03-22"},{"lineNumber":230,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":231,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":232,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":233,"author":{"gitId":"bingsen0806"},"content":"    public void hasSameAuthors() {","lastModifiedDate":"2022-03-21"},{"lineNumber":234,"author":{"gitId":"bingsen0806"},"content":"        // same authors but with spacing, letter case, and ordering difference -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":235,"author":{"gitId":"bingsen0806"},"content":"        Book book1 \u003d new BookBuilder(HARRY_POTTER).withAuthors(\"author 1\", \"author 2\").build();","lastModifiedDate":"2022-03-21"},{"lineNumber":236,"author":{"gitId":"bingsen0806"},"content":"        Book book2 \u003d new BookBuilder(HARRY_POTTER).withAuthors(\"Author2\", \"Author1\").build();","lastModifiedDate":"2022-03-21"},{"lineNumber":237,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(book1.equals(book2));","lastModifiedDate":"2022-03-21"},{"lineNumber":238,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":239,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":240,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":241,"author":{"gitId":"bingsen0806"},"content":"    public void hasSameIsbn() {","lastModifiedDate":"2022-03-21"},{"lineNumber":242,"author":{"gitId":"bingsen0806"},"content":"        // same isbn but different hyphen positions -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":243,"author":{"gitId":"bingsen0806"},"content":"        Book editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withIsbn(VALID_ISBN_HARRY_POTTER_2).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":244,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-21"},{"lineNumber":245,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":246,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":247,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":248,"author":{"gitId":"bingsen0806"},"content":"    public void getConsistentReplacement_nullEditedBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":249,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e HARRY_POTTER.getConsistentReplacement(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":250,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":251,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":252,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":253,"author":{"gitId":"bingsen0806"},"content":"    public void getConsistentReplacement_differentIsbnNameAuthors_replacesAllThreeFields() {","lastModifiedDate":"2022-03-22"},{"lineNumber":254,"author":{"gitId":"bingsen0806"},"content":"        Book expectedBook \u003d new BookBuilder(HARRY_POTTER).withIsbn(VALID_ISBN_HUNGER_GAMES)","lastModifiedDate":"2022-03-22"},{"lineNumber":255,"author":{"gitId":"bingsen0806"},"content":"                .withName(VALID_BOOK_NAME_HUNGER_GAMES).withAuthors(VALID_AUTHOR_SUZANNE_COLLINS).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":256,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(HARRY_POTTER.getConsistentReplacement(HUNGER_GAMES), expectedBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":257,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":258,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":259,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"yl-ang":14,"bingsen0806":245}},{"path":"src/test/java/seedu/address/model/book/IsbnTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"public class IsbnTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Isbn(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Isbn(invalidName));","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    public void isValidIsbn_invalidFormat_returnsFalse() {","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        // null isbn","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e Isbn.isValidIsbn(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        // isbn with invalid string pattern","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"\")); // empty string","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\" \")); // spaces only","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"false\")); // contains non-numeric characters that are not hyphen","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"978--71617-018-8-5\")); // contains consecutive hyphen characters","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"-978-71617-018-8-5\")); // starts with non-numeric character","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"978-71617-018-8-5-\")); // ends with non-numeric character","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"978-71617-018-8-4\")); // wrong check sum for ISBN13 format","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"17-18-13730-4\")); // wrong check sum for ISBN10 format","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"980-71617-018-8-4\")); // does not start with 978 or 979 for ISBN13 format","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"978-71617-0184\")); // wrong number of digits","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    public void isValidIsbn_validFormat_returnsTrue() {","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Isbn.isValidIsbn(\"978-71617-018-8-5\")); // ISBN13 with hyphen","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Isbn.isValidIsbn(\"9787161701885\")); // ISBN13 without hyphen","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Isbn.isValidIsbn(\"17-18-13730-3\")); // ISBN10 with hyphen","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Isbn.isValidIsbn(\"1718137303\")); // ISBN10 without hyphen","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Isbn.isValidIsbn(\"97-971617-018-8-4\")); // ISBN13 starting with 979","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    public void equals() {","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        // Differ hyphen arrangements -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(new Isbn(\"978-71617-018-8-5\"), new Isbn(\"9-7-8-71617-018-8-5\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        // Differ strings after hyphen removal -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        assertNotEquals(new Isbn(\"978-71617-018-8-5\"), new Isbn(\"17-18-13730-3\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        // Differ hyphen arrangements -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(new Isbn(\"978-71617-018-8-5\").hashCode(), new Isbn(\"9-7-8-71617-018-8-5\").hashCode());","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        // Differ strings after hyphen removal -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        assertNotEquals(new Isbn(\"978-71617-018-8-5\").hashCode(), new Isbn(\"17-18-13730-3\").hashCode());","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        // Testing equality on HashSet","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        HashSet\u003cIsbn\u003e set1 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        set1.add(new Isbn(\"978-71617-018-8-5\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        HashSet\u003cIsbn\u003e set2 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        set2.add(new Isbn(\"9-7-8-71617-018-8-5\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(set1, set2);","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        HashSet\u003cIsbn\u003e set3 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"        set1.add(new Isbn(\"17-18-13730-3\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        assertNotEquals(set1, set3);","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":78}},{"path":"src/test/java/seedu/address/model/patron/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.model.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"aditi2313":1,"-":67}},{"path":"src/test/java/seedu/address/model/patron/IdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.model.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"public class IdTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Id(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    public void constructor_invalidId_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"        String invalidId \u003d \"\";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Id(invalidId));","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"    public void isValidId() {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"        // null id","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"        assertThrows(NullPointerException.class, () -\u003e Id.isValidId(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"        // invalid id","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"        assertFalse(Id.isValidId(\"\")); // empty string","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"        assertFalse(Id.isValidId(\" \")); // spaces only","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"        assertFalse(Id.isValidId(\"K0123456H\")); //id not starting with A","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"        assertFalse(Id.isValidId(\"M0123452346H\")); //id longer than 9 characters","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"        assertFalse(Id.isValidId(\"L01256H\")); //id shorter than 9 characters","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"        // valid id","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"        assertTrue(Id.isValidId(\"A0123456H\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"        assertTrue(Id.isValidId(\"A0123457K\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        assertTrue(Id.isValidId(\"A0123458L\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"        // valid id but will need to check again in the future","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"        assertTrue(Id.isValidId(\"ABCDEFGHI\")); // starts with A and only contains letters","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"        assertTrue(Id.isValidId(\"A00000000\")); // starts with A followed by 8 digits","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"yl-ang":4,"aditi2313":20,"-":19}},{"path":"src/test/java/seedu/address/model/patron/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.model.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import seedu.address.testutil.PatronBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        // different patron -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"        assertTrue(predicate.test(new PatronBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"        assertTrue(predicate.test(new PatronBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"        assertTrue(predicate.test(new PatronBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"        assertTrue(predicate.test(new PatronBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"        assertFalse(predicate.test(new PatronBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"        assertFalse(predicate.test(new PatronBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"aditi2313"},"content":"        // Keywords match phone, email and id, but does not match name","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"        assertFalse(predicate.test(new PatronBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"                .withEmail(\"alice@email.com\").withId(\"A0123456H\").build()));","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"aditi2313":12,"-":63}},{"path":"src/test/java/seedu/address/model/patron/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.model.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"        // invalid name but might but are valid in real life","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"        assertFalse(Name.isValidName(\"Exa Dark Sideræl\")); // contains non-alphanumeric character \"æ\"","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"        assertFalse(Name.isValidName(\"Tommy-Lee\")); //contains hyphen","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"yl-ang":4,"aditi2313":1,"-":39}},{"path":"src/test/java/seedu/address/model/patron/PatronTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.model.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalPatrons.ALICE;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalPatrons.BOB;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"import seedu.address.testutil.PatronBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"public class PatronTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"        Patron patron \u003d new PatronBuilder().build();","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e patron.getTags().remove(0));","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"    public void isSamePatron() {","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"        assertTrue(ALICE.isSamePatron(ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"        assertFalse(ALICE.isSamePatron(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"        // same name and id, all other attributes different -\u003e returns true","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"        Patron editedAlice \u003d new PatronBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        assertTrue(ALICE.isSamePatron(editedAlice));","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"        // different name, all other attributes same -\u003e returns true","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"        editedAlice \u003d new PatronBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"        assertTrue(ALICE.isSamePatron(editedAlice));","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"        // different id, all other attributes same -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"        editedAlice \u003d new PatronBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"        assertTrue(ALICE.isSamePatron(editedAlice));","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"        Patron editedBob \u003d new PatronBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"        assertTrue(BOB.isSamePatron(editedBob));","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"        editedBob \u003d new PatronBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"        assertTrue(BOB.isSamePatron(editedBob));","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"        Patron aliceCopy \u003d new PatronBuilder(ALICE).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"        // different patron -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"aditi2313"},"content":"        Patron editedAlice \u003d new PatronBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"aditi2313"},"content":"        editedAlice \u003d new PatronBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"aditi2313"},"content":"        editedAlice \u003d new PatronBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"aditi2313"},"content":"        // different id -\u003e returns false","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"        editedAlice \u003d new PatronBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":92,"author":{"gitId":"aditi2313"},"content":"        editedAlice \u003d new PatronBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"aditi2313":35,"-":60}},{"path":"src/test/java/seedu/address/model/patron/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.model.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"aditi2313":1,"-":39}},{"path":"src/test/java/seedu/address/model/patron/UniquePatronListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.model.patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalPatrons.ALICE;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalPatrons.BOB;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.exceptions.DuplicatePatronException;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.exceptions.PatronNotFoundException;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"import seedu.address.testutil.PatronBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"public class UniquePatronListTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"    private final UniquePatronList uniquePatronList \u003d new UniquePatronList();","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"    public void contains_nullPatron_throwsNullPointerException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatronList.contains(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"    public void contains_patronNotInList_returnsFalse() {","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"        assertFalse(uniquePatronList.contains(ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"    public void contains_patronInList_returnsTrue() {","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"        uniquePatronList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"        assertTrue(uniquePatronList.contains(ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"    public void contains_patronWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"        uniquePatronList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"        Patron editedAlice \u003d new PatronBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"        assertTrue(uniquePatronList.contains(editedAlice));","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"    public void add_nullPatron_throwsNullPointerException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatronList.add(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"    public void add_duplicatePatron_throwsDuplicatePatronException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"        uniquePatronList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"        assertThrows(DuplicatePatronException.class, () -\u003e uniquePatronList.add(ALICE));","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"    public void setPatron_nullTargetPatron_throwsNullPointerException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatronList.setPatron(null, ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"    public void setPatron_nullEditedPatron_throwsNullPointerException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatronList.setPatron(ALICE, null));","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"    public void setPatron_targetPatronNotInList_throwsPatronNotFoundException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"        assertThrows(PatronNotFoundException.class, () -\u003e uniquePatronList.setPatron(ALICE, ALICE));","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"aditi2313"},"content":"    public void setPatron_editedPatronIsSamePatron_success() {","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"        uniquePatronList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"aditi2313"},"content":"        uniquePatronList.setPatron(ALICE, ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"aditi2313"},"content":"        UniquePatronList expectedUniquePatronList \u003d new UniquePatronList();","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"aditi2313"},"content":"        expectedUniquePatronList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"        assertEquals(expectedUniquePatronList, uniquePatronList);","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"    public void setPatron_editedPatronHasSameIdentity_success() {","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"aditi2313"},"content":"        uniquePatronList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"        Patron editedAlice \u003d new PatronBuilder(ALICE).withId(VALID_ID_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"aditi2313"},"content":"        uniquePatronList.setPatron(ALICE, editedAlice);","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"aditi2313"},"content":"        UniquePatronList expectedUniquePatronList \u003d new UniquePatronList();","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"aditi2313"},"content":"        expectedUniquePatronList.add(editedAlice);","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"aditi2313"},"content":"        assertEquals(expectedUniquePatronList, uniquePatronList);","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"aditi2313"},"content":"    public void setPatron_editedPatronHasDifferentIdentity_success() {","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"aditi2313"},"content":"        uniquePatronList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"aditi2313"},"content":"        uniquePatronList.setPatron(ALICE, BOB);","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"aditi2313"},"content":"        UniquePatronList expectedUniquePatronList \u003d new UniquePatronList();","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"aditi2313"},"content":"        expectedUniquePatronList.add(BOB);","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"aditi2313"},"content":"        assertEquals(expectedUniquePatronList, uniquePatronList);","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"    public void setPatron_editedPatronHasNonUniqueIdentity_throwsDuplicatePatronException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"aditi2313"},"content":"        uniquePatronList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"aditi2313"},"content":"        uniquePatronList.add(BOB);","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"aditi2313"},"content":"        assertThrows(DuplicatePatronException.class, () -\u003e uniquePatronList.setPatron(ALICE, BOB));","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"aditi2313"},"content":"    public void remove_nullPatron_throwsNullPointerException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":114,"author":{"gitId":"aditi2313"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatronList.remove(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"aditi2313"},"content":"    public void remove_patronDoesNotExist_throwsPatronNotFoundException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"aditi2313"},"content":"        assertThrows(PatronNotFoundException.class, () -\u003e uniquePatronList.remove(ALICE));","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"aditi2313"},"content":"    public void remove_existingPatron_removesPatron() {","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"aditi2313"},"content":"        uniquePatronList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"aditi2313"},"content":"        uniquePatronList.remove(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"aditi2313"},"content":"        UniquePatronList expectedUniquePatronList \u003d new UniquePatronList();","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"aditi2313"},"content":"        assertEquals(expectedUniquePatronList, uniquePatronList);","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"aditi2313"},"content":"    public void setPatrons_nullUniquePatronList_throwsNullPointerException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":132,"author":{"gitId":"aditi2313"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatronList.setPatrons((UniquePatronList) null));","lastModifiedDate":"2022-03-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"aditi2313"},"content":"    public void setPatrons_uniquePatronList_replacesOwnListWithProvidedUniquePatronList() {","lastModifiedDate":"2022-03-12"},{"lineNumber":137,"author":{"gitId":"aditi2313"},"content":"        uniquePatronList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"aditi2313"},"content":"        UniquePatronList expectedUniquePatronList \u003d new UniquePatronList();","lastModifiedDate":"2022-03-12"},{"lineNumber":139,"author":{"gitId":"aditi2313"},"content":"        expectedUniquePatronList.add(BOB);","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"aditi2313"},"content":"        uniquePatronList.setPatrons(expectedUniquePatronList);","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"aditi2313"},"content":"        assertEquals(expectedUniquePatronList, uniquePatronList);","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"aditi2313"},"content":"    public void setPatrons_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":146,"author":{"gitId":"aditi2313"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatronList.setPatrons((List\u003cPatron\u003e) null));","lastModifiedDate":"2022-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"aditi2313"},"content":"    public void setPatrons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-03-12"},{"lineNumber":151,"author":{"gitId":"aditi2313"},"content":"        uniquePatronList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"aditi2313"},"content":"        List\u003cPatron\u003e patronList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-03-11"},{"lineNumber":153,"author":{"gitId":"aditi2313"},"content":"        uniquePatronList.setPatrons(patronList);","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"aditi2313"},"content":"        UniquePatronList expectedUniquePatronList \u003d new UniquePatronList();","lastModifiedDate":"2022-03-12"},{"lineNumber":155,"author":{"gitId":"aditi2313"},"content":"        expectedUniquePatronList.add(BOB);","lastModifiedDate":"2022-03-11"},{"lineNumber":156,"author":{"gitId":"aditi2313"},"content":"        assertEquals(expectedUniquePatronList, uniquePatronList);","lastModifiedDate":"2022-03-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"aditi2313"},"content":"    public void setPatrons_listWithDuplicatePatrons_throwsDuplicatePatronException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":161,"author":{"gitId":"aditi2313"},"content":"        List\u003cPatron\u003e listWithDuplicatePatrons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"aditi2313"},"content":"        assertThrows(DuplicatePatronException.class, () -\u003e uniquePatronList.setPatrons(listWithDuplicatePatrons));","lastModifiedDate":"2022-03-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"aditi2313"},"content":"            -\u003e uniquePatronList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-03-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"aditi2313":84,"-":86}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedBookStatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.util.SampleDataUtil.SAMPLE_AVAILABLE_STATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.util.SampleDataUtil.getSampleBorrowedStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalPatrons.getTypicalPatrons;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookStatusType;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"public class JsonAdaptedBookStatusTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    private static final String INVALID_TYPE \u003d \"invalid\";","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    private static final String INVALID_DATE_1 \u003d \"14Feb-2022\";","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    private static final String INVALID_DATE_2 \u003d \"11-MON-2022\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    private static final String VALID_TYPE_AVAILABLE \u003d \"Available\";","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    private static final String VALID_TYPE_BORROWED \u003d \"Borrowed\";","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    private static final JsonAdaptedPatron VALID_BORROWER \u003d new JsonAdaptedPatron(getTypicalPatrons().get(0));","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    private static final String VALID_BORROW_DATE \u003d \"14-Feb-2022\";","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    private static final String VALID_RETURN_DATE \u003d \"28-Feb-2022\";","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    private static final BookStatus VALID_AVAILABLE_BOOK_STATUS \u003d SAMPLE_AVAILABLE_STATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    private static final BookStatus VALID_BORROWED_BOOK_STATUS \u003d getSampleBorrowedStatus();","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_validBookStatusDetails_returnsBookStatus() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        // available status","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBookStatus bookStatus \u003d new JsonAdaptedBookStatus(VALID_AVAILABLE_BOOK_STATUS);","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(VALID_AVAILABLE_BOOK_STATUS, bookStatus.toModelType());","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        // borrowed status","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        bookStatus \u003d new JsonAdaptedBookStatus(VALID_BORROWED_BOOK_STATUS);","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(VALID_BORROWED_BOOK_STATUS, bookStatus.toModelType());","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_invalidBookStatusType_throwsIllegalValueException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBookStatus bookStatus \u003d new JsonAdaptedBookStatus(INVALID_TYPE,","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"                null, null, null);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d BookStatusType.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, bookStatus::toModelType);","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        // invalid borrow date","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBookStatus bookStatus \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedBookStatus(VALID_TYPE_BORROWED, VALID_BORROWER, INVALID_DATE_1, VALID_RETURN_DATE);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d BookStatus.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, bookStatus::toModelType);","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        // invalid return date that does not match regex","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        bookStatus \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedBookStatus(VALID_TYPE_BORROWED, VALID_BORROWER, VALID_RETURN_DATE, INVALID_DATE_1);","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, bookStatus::toModelType);","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        // invalid return date that matches regex but cannot be parsed","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        bookStatus \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedBookStatus(VALID_TYPE_BORROWED, VALID_BORROWER, VALID_RETURN_DATE, INVALID_DATE_2);","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, bookStatus::toModelType);","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_nullDetailsAvailableStatus_success() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        // null borrow date","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBookStatus bookStatus \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedBookStatus(VALID_TYPE_AVAILABLE, null, null, null);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(VALID_AVAILABLE_BOOK_STATUS, bookStatus.toModelType());","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_nonNullDetailsAvailableStatus_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        // borrower not null","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBookStatus bookStatus \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedBookStatus(VALID_TYPE_AVAILABLE, VALID_BORROWER, null, null);","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d BookStatus.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, bookStatus::toModelType);","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        // borrowDate not null","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        bookStatus \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedBookStatus(VALID_TYPE_AVAILABLE, null, VALID_BORROW_DATE, null);","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, bookStatus::toModelType);","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        // returnDate not null","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        bookStatus \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedBookStatus(VALID_TYPE_AVAILABLE, null, null, VALID_RETURN_DATE);","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, bookStatus::toModelType);","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_nullDetailsBorrowedStatus_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"        // borrower is null","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBookStatus bookStatus \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedBookStatus(VALID_TYPE_BORROWED, null, VALID_BORROW_DATE, VALID_RETURN_DATE);","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d BookStatus.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, bookStatus::toModelType);","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"        // borrowDate is null","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"        bookStatus \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedBookStatus(VALID_TYPE_BORROWED, VALID_BORROWER, null, VALID_RETURN_DATE);","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, bookStatus::toModelType);","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"        // returnDate is null","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"        bookStatus \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedBookStatus(VALID_TYPE_BORROWED, VALID_BORROWER, VALID_BORROW_DATE, null);","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, bookStatus::toModelType);","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"bingsen0806":112}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.util.SampleDataUtil.SAMPLE_AVAILABLE_STATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.util.SampleDataUtil.SAMPLE_BOOK_CREATED_TIME;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.storage.JsonAdaptedBook.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.ALGORITHM;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalPatrons.BENSON;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"public class JsonAdaptedBookTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    private static final String INVALID_BOOK_NAME \u003d \"H@rryPotter\";","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    private static final String INVALID_ISBN \u003d \"+97829812\";","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    private static final String INVALID_TAG \u003d \"#Adventure\";","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    private static final String INVALID_AUTHOR \u003d \"J!KRowling\";","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    private static final String INVALID_TIME_ADDED \u003d \"askdj\";","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    private static final String INVALID_REQUESTER_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    private static final String VALID_BOOK_NAME \u003d ALGORITHM.getBookName().fullBookName;","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    private static final String VALID_ISBN \u003d ALGORITHM.getIsbn().toString();","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d ALGORITHM.getTags().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    private static final List\u003cJsonAdaptedAuthor\u003e VALID_AUTHORS \u003d ALGORITHM.getAuthors().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"            .map(JsonAdaptedAuthor::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    private static final String SAMPLE_CREATED_TIME \u003d Long.toString(SAMPLE_BOOK_CREATED_TIME);","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    private static final JsonAdaptedBookStatus SAMPLE_AVAILABLE_BOOK_STATUS \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"            new JsonAdaptedBookStatus(SAMPLE_AVAILABLE_STATUS);","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    private static final List\u003cJsonAdaptedPatron\u003e VALID_REQUESTERS \u003d ALGORITHM.getRequesters().stream()","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"            .map(JsonAdaptedPatron::new)","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    private static final String VALID_REQUESTER_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    private static final String VALID_REQUESTER_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    private static final String VALID_REQUESTER_ID \u003d BENSON.getId().toString();","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_REQUESTER_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_validBookDetails_returnsBook() throws Exception {","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBook book \u003d new JsonAdaptedBook(ALGORITHM);","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(ALGORITHM, book.toModelType());","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_invalidBookName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBook book \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedBook(INVALID_BOOK_NAME, VALID_ISBN, VALID_TAGS, VALID_AUTHORS, SAMPLE_CREATED_TIME,","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"                        SAMPLE_AVAILABLE_BOOK_STATUS, VALID_REQUESTERS);","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d BookName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, book::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_nullBookName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBook book \u003d new JsonAdaptedBook(null, VALID_ISBN, VALID_TAGS, VALID_AUTHORS,","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"                SAMPLE_CREATED_TIME, SAMPLE_AVAILABLE_BOOK_STATUS, VALID_REQUESTERS);","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, BookName.class.getSimpleName());","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, book::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_invalidIsbn_throwsIllegalValueException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBook book \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedBook(VALID_BOOK_NAME, INVALID_ISBN, VALID_TAGS, VALID_AUTHORS, SAMPLE_CREATED_TIME,","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"                        SAMPLE_AVAILABLE_BOOK_STATUS, VALID_REQUESTERS);","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d Isbn.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, book::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_nullIsbn_throwsIllegalValueException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBook book \u003d new JsonAdaptedBook(VALID_BOOK_NAME, null, VALID_TAGS, VALID_AUTHORS,","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"                SAMPLE_CREATED_TIME, SAMPLE_AVAILABLE_BOOK_STATUS, VALID_REQUESTERS);","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Isbn.class.getSimpleName());","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, book::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_invalidRequesters_throwsIllegalValueException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        List\u003cJsonAdaptedPatron\u003e invalidRequesters \u003d new ArrayList\u003c\u003e(VALID_REQUESTERS);","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        invalidRequesters.add(new JsonAdaptedPatron(INVALID_REQUESTER_NAME, VALID_REQUESTER_PHONE,","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"                VALID_REQUESTER_EMAIL, VALID_REQUESTER_ID, VALID_REQUESTER_TAGS));","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBook book \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedBook(VALID_BOOK_NAME, VALID_ISBN, VALID_TAGS, VALID_AUTHORS, SAMPLE_CREATED_TIME,","lastModifiedDate":"2022-03-21"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"                        SAMPLE_AVAILABLE_BOOK_STATUS, invalidRequesters);","lastModifiedDate":"2022-03-21"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, book::toModelType);","lastModifiedDate":"2022-03-21"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBook book \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedBook(VALID_BOOK_NAME, VALID_ISBN, invalidTags, VALID_AUTHORS, SAMPLE_CREATED_TIME,","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"                        SAMPLE_AVAILABLE_BOOK_STATUS, VALID_REQUESTERS);","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, book::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_invalidAuthors_throwsIllegalValueException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"        List\u003cJsonAdaptedAuthor\u003e invalidAuthors \u003d new ArrayList\u003c\u003e(VALID_AUTHORS);","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"        invalidAuthors.add(new JsonAdaptedAuthor(INVALID_AUTHOR));","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBook book \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedBook(VALID_BOOK_NAME, VALID_ISBN, VALID_TAGS, invalidAuthors, SAMPLE_CREATED_TIME,","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"                        SAMPLE_AVAILABLE_BOOK_STATUS, VALID_REQUESTERS);","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, book::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_invalidTimeAdded_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBook book \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedBook(VALID_BOOK_NAME, VALID_ISBN, VALID_TAGS, VALID_AUTHORS, INVALID_TIME_ADDED,","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"                        SAMPLE_AVAILABLE_BOOK_STATUS, VALID_REQUESTERS);","lastModifiedDate":"2022-03-21"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d Book.TIME_ADDED_MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, book::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_nullBookStatus_throwsIllegalValueException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBook book \u003d new JsonAdaptedBook(VALID_BOOK_NAME, VALID_ISBN, VALID_TAGS, VALID_AUTHORS,","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"                SAMPLE_CREATED_TIME, null, VALID_REQUESTERS);","lastModifiedDate":"2022-03-21"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, BookStatus.class.getSimpleName());","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, book::toModelType);","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":139}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPatronTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.storage.JsonAdaptedPatron.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalPatrons.BENSON;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Email;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Id;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Name;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Phone;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"public class JsonAdaptedPatronTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    private static final String INVALID_ID \u003d \" \";","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getId().toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"    public void toModelType_validPatronDetails_returnsPatron() throws Exception {","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        JsonAdaptedPatron patron \u003d new JsonAdaptedPatron(BENSON);","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"        assertEquals(BENSON, patron.toModelType());","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"        JsonAdaptedPatron patron \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"                new JsonAdaptedPatron(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patron::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"        JsonAdaptedPatron patron \u003d new JsonAdaptedPatron(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patron::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"        JsonAdaptedPatron patron \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"                new JsonAdaptedPatron(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patron::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"        JsonAdaptedPatron patron \u003d new JsonAdaptedPatron(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patron::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"        JsonAdaptedPatron patron \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"aditi2313"},"content":"                new JsonAdaptedPatron(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"aditi2313"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patron::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"aditi2313"},"content":"        JsonAdaptedPatron patron \u003d new JsonAdaptedPatron(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patron::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"        JsonAdaptedPatron patron \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedPatron(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ID, VALID_TAGS);","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"aditi2313"},"content":"        String expectedMessage \u003d Id.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"aditi2313"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patron::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"aditi2313"},"content":"        JsonAdaptedPatron patron \u003d new JsonAdaptedPatron(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"aditi2313"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Id.class.getSimpleName());","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"aditi2313"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patron::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"aditi2313"},"content":"        JsonAdaptedPatron patron \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"                new JsonAdaptedPatron(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"aditi2313"},"content":"        assertThrows(IllegalValueException.class, patron::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":73,"aditi2313":35,"bingsen0806":2}},{"path":"src/test/java/seedu/address/storage/JsonLibTaskStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalPatrons.ALICE;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalPatrons.HOON;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalPatrons.IDA;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.LibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ReadOnlyLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"public class JsonLibTaskStorageTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonLibTaskStorageTest\");","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    public void readLibTask_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e readLibTask(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    private java.util.Optional\u003cReadOnlyLibTask\u003e readLibTask(String filePath) throws Exception {","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        return new JsonLibTaskStorage(Paths.get(filePath)).readLibTask(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(readLibTask(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(DataConversionException.class, () -\u003e readLibTask(\"notJsonFormatLibTask.json\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    public void readLibTask_invalidPatronLibTask_throwDataConversionException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(DataConversionException.class, () -\u003e readLibTask(\"invalidPatronLibTask.json\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    public void readLibTask_invalidAndValidPatronLibTask_throwDataConversionException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(DataConversionException.class, () -\u003e readLibTask(\"invalidAndValidPatronLibTask.json\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"    public void readAndSaveLibTask_allInOrder_success() throws Exception {","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        Path filePath \u003d testFolder.resolve(\"TempLibTask.json\");","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        LibTask original \u003d TypicalLibTask.getTypicalLibTask();","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        JsonLibTaskStorage jsonLibTaskStorage \u003d new JsonLibTaskStorage(filePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        jsonLibTaskStorage.saveLibTask(original, filePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        ReadOnlyLibTask readBack \u003d jsonLibTaskStorage.readLibTask(filePath).get();","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(original, new LibTask(readBack));","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"        original.addPatron(HOON);","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"aditi2313"},"content":"        original.removePatron(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        jsonLibTaskStorage.saveLibTask(original, filePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        readBack \u003d jsonLibTaskStorage.readLibTask(filePath).get();","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(original, new LibTask(readBack));","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"        original.addPatron(IDA);","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        jsonLibTaskStorage.saveLibTask(original); // file path not specified","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        readBack \u003d jsonLibTaskStorage.readLibTask().get(); // file path not specified","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(original, new LibTask(readBack));","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"    public void saveLibTask_nullLibTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveLibTask(null, \"SomeFile.json\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"     * Saves {@code libTask} at the specified {@code filePath}.","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"    private void saveLibTask(ReadOnlyLibTask libTask, String filePath) {","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"            new JsonLibTaskStorage(Paths.get(filePath))","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"                    .saveLibTask(libTask, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"    public void saveLibTask_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveLibTask(new LibTask(), null));","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":68,"aditi2313":6,"bingsen0806":36}},{"path":"src/test/java/seedu/address/storage/JsonSerializableLibTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.LibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.LengthyBooks;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"import seedu.address.testutil.ManyPatrons;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"public class JsonSerializableLibTaskTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableLibTaskTest\");","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    private static final Path TYPICAL_PATRONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPatronsLibTask.json\");","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    private static final Path INVALID_PATRON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPatronLibTask.json\");","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    private static final Path DUPLICATE_PATRON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePatronLibTask.json\");","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    private static final Path TYPICAL_BOOKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalBooksLibTask.json\");","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    private static final Path INVALID_BOOK_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidBookLibTask.json\");","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    private static final Path LENGTHY_BOOK_FILE \u003d TEST_DATA_FOLDER.resolve(\"lengthyBooksLibTask.json\");","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"    private static final Path MANY_PATRONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"ManyPatronsLibTask.json\");","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_typicalPatronsFile_success() throws Exception {","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        JsonSerializableLibTask dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PATRONS_FILE,","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"                JsonSerializableLibTask.class).get();","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        LibTask libTaskFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        LibTask typicalPatronsLibTask \u003d TypicalLibTask.getTypicalLibTask();","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(libTaskFromFile, typicalPatronsLibTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_invalidPatronFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        JsonSerializableLibTask dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PATRON_FILE,","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"                JsonSerializableLibTask.class).get();","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_duplicatePatrons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        JsonSerializableLibTask dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PATRON_FILE,","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"                JsonSerializableLibTask.class).get();","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableLibTask.MESSAGE_DUPLICATE_PATRON,","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_typicalBooksFile_success() throws Exception {","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        JsonSerializableLibTask dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_BOOKS_FILE,","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"                JsonSerializableLibTask.class).get();","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        LibTask libTaskFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        LibTask typicalBooksLibTask \u003d TypicalLibTask.getTypicalLibTask();","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(libTaskFromFile, typicalBooksLibTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_invalidBookFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        JsonSerializableLibTask dataFromFile \u003d JsonUtil.readJsonFile(INVALID_BOOK_FILE,","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"                JsonSerializableLibTask.class).get();","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_lengthyBooksFile_success() throws Exception {","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        JsonSerializableLibTask dataFromFile \u003d JsonUtil.readJsonFile(LENGTHY_BOOK_FILE,","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"                JsonSerializableLibTask.class).get();","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        LibTask libTaskFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        LibTask lengthyBooksLibTask \u003d LengthyBooks.getLengthyLibTask();","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(libTaskFromFile, lengthyBooksLibTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"yl-ang"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"yl-ang"},"content":"    public void toModelType_manyPatronsFile_success() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"yl-ang"},"content":"        JsonSerializableLibTask dataFromFile \u003d JsonUtil.readJsonFile(MANY_PATRONS_FILE,","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"yl-ang"},"content":"                JsonSerializableLibTask.class).get();","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"yl-ang"},"content":"        LibTask libTaskFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"yl-ang"},"content":"        LibTask manyPatronsLibTask \u003d ManyPatrons.getManyPatronsLibTask();","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"yl-ang"},"content":"        assertEquals(libTaskFromFile, manyPatronsLibTask);","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"yl-ang":12,"bingsen0806":76}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        userPrefs.setLibTaskFilePath(Paths.get(\"libtask.json\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":122,"bingsen0806":1}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.LibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ReadOnlyLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalLibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"        JsonLibTaskStorage libTaskStorage \u003d new JsonLibTaskStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        storageManager \u003d new StorageManager(libTaskStorage, userPrefsStorage);","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    public void libTaskReadSave() throws Exception {","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"         * {@link JsonLibTaskStorage} class.","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonLibTaskStorageTest} class.","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        LibTask original \u003d TypicalLibTask.getTypicalLibTask();","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        storageManager.saveLibTask(original);","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        ReadOnlyLibTask retrieved \u003d storageManager.readLibTask().get();","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(original, new LibTask(retrieved));","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"    public void getLibTaskFilePath() {","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        assertNotNull(storageManager.getLibTaskFilePath());","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"yl-ang"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"yl-ang"},"content":"    public void getUserPrefsFilePath() {","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"yl-ang"},"content":"        assertNotNull(storageManager.getUserPrefsFilePath());","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yl-ang":3,"-":56,"bingsen0806":14}},{"path":"src/test/java/seedu/address/testutil/BookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.util.SampleDataUtil.SAMPLE_AVAILABLE_STATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.util.SampleDataUtil.SAMPLE_BOOK_CREATED_TIME;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":" * A utility class to help with building Book objects.","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"public class BookBuilder {","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    public static final String DEFAULT_NAME \u003d \"Harry Potter\";","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    public static final String DEFAULT_ISBN \u003d \"9780747532743\";","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    public static final long DEFAULT_TIME_ADDED \u003d SAMPLE_BOOK_CREATED_TIME;","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    public static final BookStatus DEFAULT_BOOK_STATUS \u003d SAMPLE_AVAILABLE_STATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"    public static final BookStatus BORROWED_BOOK_STATUS \u003d SampleDataUtil.getSampleBorrowedStatus();","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    private BookName bookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    private Isbn isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    private List\u003cAuthor\u003e authors;","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    private long timeAdded;","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    private BookStatus bookStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    private Set\u003cPatron\u003e requesters;","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"     * Creates a {@code BookBuilder} with the default details.","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder() {","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        bookName \u003d new BookName(DEFAULT_NAME);","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        isbn \u003d new Isbn(DEFAULT_ISBN);","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        authors \u003d new ArrayList\u003cAuthor\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        tags \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        timeAdded \u003d DEFAULT_TIME_ADDED;","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        bookStatus \u003d DEFAULT_BOOK_STATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        requesters \u003d new HashSet\u003cPatron\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"     * Initializes the BookBuilder with the data of {@code bookToCopy}.","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder(Book bookToCopy) {","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        bookName \u003d bookToCopy.getBookName();","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        isbn \u003d bookToCopy.getIsbn();","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        authors \u003d new ArrayList\u003cAuthor\u003e(bookToCopy.getAuthors());","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        tags \u003d new HashSet\u003cTag\u003e(bookToCopy.getTags());","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        timeAdded \u003d bookToCopy.getTimeAdded();","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        bookStatus \u003d bookToCopy.getBookStatus();","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        requesters \u003d bookToCopy.getRequesters();","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"yl-ang"},"content":"     * Creates a {@code BookBuilder} with borrowed status and default details.","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"yl-ang"},"content":"    public static BookBuilder bookBuilderWithBorrowedStatus() {","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"yl-ang"},"content":"        BookBuilder bookBuilder \u003d new BookBuilder();","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"yl-ang"},"content":"        return bookBuilder.withBookStatus(BORROWED_BOOK_STATUS);","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"     * Sets the {@code BookName} of the {@code Book} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder withName(String bookName) {","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        this.bookName \u003d new BookName(bookName);","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"     * Parses the {@code authors} into a {@code List\u003cAuthor\u003e} and set it to the {@code Book} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder withAuthors(String ... authors) {","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        this.authors \u003d SampleDataUtil.getAuthorList(authors);","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Book} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder withTags(String ... tags) {","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"     * Sets the {@code Isbn} of the {@code Book} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder withIsbn(String isbn) {","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"        this.isbn \u003d new Isbn(isbn);","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"     * Sets the {@code timeAdded} of the {@code Book} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder withTimeAdded(long timeAdded) {","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"        this.timeAdded \u003d timeAdded;","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"     * Sets the {@code bookStatus} of the {@code Book} that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder withBookStatus(BookStatus bookStatus) {","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"        this.bookStatus \u003d bookStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"     * Parses the {@code requesters} into a {@code Set\u003cPatron\u003e} and set it to the {@code Book} that we are building.","lastModifiedDate":"2022-03-21"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder withRequesters(Patron ... requesters) {","lastModifiedDate":"2022-03-21"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"        this.requesters \u003d SampleDataUtil.getRequesterSet(requesters);","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"        return this;","lastModifiedDate":"2022-03-21"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"    public Book build() {","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"        return new Book(bookName, isbn, authors, tags, timeAdded, bookStatus, requesters);","lastModifiedDate":"2022-03-21"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"yl-ang":10,"bingsen0806":123}},{"path":"src/test/java/seedu/address/testutil/EditBookDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.book.EditBookCommand.EditBookDescriptor;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":" * A utility class to help with building EditBookDescriptor objects.","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"public class EditBookDescriptorBuilder {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"    private EditBookDescriptor bookDescriptor;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"    public EditBookDescriptorBuilder() {","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor \u003d new EditBookDescriptor();","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"    public EditBookDescriptorBuilder(EditBookDescriptor bookDescriptor) {","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"        this.bookDescriptor \u003d new EditBookDescriptor(bookDescriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":"     * Returns an {@code EditBookDescriptor} with fields containing {@code book}\u0027s details","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"    public EditBookDescriptorBuilder(Book book) {","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor \u003d new EditBookDescriptor();","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor.setBookName(book.getBookName());","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor.setIsbn(book.getIsbn());","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor.setAuthors(book.getAuthors());","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor.setTags(book.getTags());","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"     * Sets the {@code BookName} of the {@code EditBookDescriptor} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"yuqitanyq"},"content":"    public EditBookDescriptorBuilder withBookName(String name) {","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor.setBookName(new BookName(name));","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"yuqitanyq"},"content":"        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"yuqitanyq"},"content":"     * Sets the {@code Isbn} of the {@code EditBookDescriptor} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"yuqitanyq"},"content":"    public EditBookDescriptorBuilder withIsbn(String isbn) {","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor.setIsbn(new Isbn(isbn));","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"yuqitanyq"},"content":"        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"yuqitanyq"},"content":"     * Sets the {@code authors} of the {@code EditBookDescriptor} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"yuqitanyq"},"content":"    public EditBookDescriptorBuilder withAuthors(String ... authors) {","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor.setAuthors(SampleDataUtil.getAuthorList(authors));","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"yuqitanyq"},"content":"        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"yuqitanyq"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditBookDescriptor}","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"yuqitanyq"},"content":"     * that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"yuqitanyq"},"content":"    public EditBookDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"yuqitanyq"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor.setTags(tagSet);","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"yuqitanyq"},"content":"        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"yuqitanyq"},"content":"    public EditBookDescriptor build() {","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"yuqitanyq"},"content":"        return bookDescriptor;","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"yuqitanyq":80}},{"path":"src/test/java/seedu/address/testutil/EditPatronDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Email;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Id;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Name;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Phone;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":" * A utility class to help with building EditPatronDescriptor objects.","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"public class EditPatronDescriptorBuilder {","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    private EditPatronCommand.EditPatronDescriptor descriptor;","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"    public EditPatronDescriptorBuilder() {","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"        descriptor \u003d new EditPatronCommand.EditPatronDescriptor();","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"    public EditPatronDescriptorBuilder(EditPatronCommand.EditPatronDescriptor descriptor) {","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"        this.descriptor \u003d new EditPatronCommand.EditPatronDescriptor(descriptor);","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"     * Returns an {@code EditPatronDescriptor} with fields containing {@code patron}\u0027s details","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"    public EditPatronDescriptorBuilder(Patron patron) {","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"        descriptor \u003d new EditPatronCommand.EditPatronDescriptor();","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"        descriptor.setName(patron.getName());","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        descriptor.setPhone(patron.getPhone());","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"        descriptor.setEmail(patron.getEmail());","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"        descriptor.setId(patron.getId());","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"        descriptor.setTags(patron.getTags());","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"     * Sets the {@code Name} of the {@code EditPatronDescriptor} that we are building.","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"    public EditPatronDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"        return this;","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"     * Sets the {@code Phone} of the {@code EditPatronDescriptor} that we are building.","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"    public EditPatronDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"        return this;","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"     * Sets the {@code Email} of the {@code EditPatronDescriptor} that we are building.","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"    public EditPatronDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"        return this;","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"     * Sets the {@code Id} of the {@code EditPatronDescriptor} that we are building.","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"aditi2313"},"content":"    public EditPatronDescriptorBuilder withId(String id) {","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"aditi2313"},"content":"        descriptor.setId(new Id(id));","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"        return this;","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"aditi2313"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPatronDescriptor}","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"aditi2313"},"content":"     * that we are building.","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"aditi2313"},"content":"    public EditPatronDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"aditi2313"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"aditi2313"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"        return this;","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"aditi2313"},"content":"    public EditPatronCommand.EditPatronDescriptor build() {","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"        return descriptor;","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"aditi2313":88}},{"path":"src/test/java/seedu/address/testutil/LengthyBooks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.LibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":" * A utility class containing a list of {@code Book} objects to be used in tests.","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"public class LengthyBooks {","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"    // Book with 800 characters in name, 800 characters in author name, 800 characters in tag label.","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"    public static final Book EIGHT_HUNDRED_LARGE_BOOK \u003d new BookBuilder().withName(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\")","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"            .withIsbn(\"0-545-01022-5\")","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"            .withAuthors(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaa\")","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"            .withTags(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaa\")","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"            .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"    // LARGE_BOOK contains lengthy book titles, lengthy author names, multiple tags","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"    public static final Book LARGE_BOOK \u003d new BookBuilder().withName(\"Lorem Ipsum comes from a latin text written\"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"            + \" in 45BC by Roman statesman Lorem Ipsum comes from a latin text written in 45BC by Roman statesman\"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"            + \" Lorem Ipsum comes from a latin text written in 45BC by Roman statesman Lorem Ipsum comes from a \"","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"            + \"latin text written in 45BC by Roman statesman Lorem Ipsum comes from a latin text written in 45BC by\"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"            + \" Roman statesman Lorem Ipsum comes from a latin text written in 45BC by Roman statesman\")","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"            .withIsbn(\"0-545-01022-5\")","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"            .withAuthors(\"accusamus acutum aegritudine alios aliquip allevatio antiqua\"","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"                    + \" arbitramur arbitrium arcu augeri captet censes cetero cogitavisse comparare conscientiam\"","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"                    + \" contentus cupiditatum deditum democritus depravata deserunt desiderant desistunt detracta\"","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"                    + \" didicerimus dirigentur displicet dissensio disseretur distinguique eget elit eo epicurei equos\"","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"                    + \" exercitus exorsus fastidium faucibus felis foedus fuissent generis geometrica gravida illam\"","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"                    + \" impetus incursione indignae inhaererent initia inquam inter ipsas ipsi iriure lacinia licet\"","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"                    + \" mel mi minim mors muniti netus noster nostro occultarum odioque omnino oratoribus oriantur\"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"yl-ang"},"content":"                    + \" ornateque percipit plura pluribus possint praetulerit privamur probamus procedat propemodum\"","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"yl-ang"},"content":"                    + \" pulchraeque quaerendi quanti quisque rudem sensum sole stultorum successerit successionem\"","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"yl-ang"},"content":"                    + \" suspicor tranquilli unde varias videre voce vulgo \")","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"yl-ang"},"content":"            .withTags(\"Detective\", \"Mystery\", \"Fantasy\", \"Classics\", \"Historical\",","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"yl-ang"},"content":"                    \"Horror\", \"Literary\", \"Romance\", \"Crime\", \"SciFi\", \"Thrillers\", \"Drama\", \"Poetry\", \"Media\",","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"yl-ang"},"content":"                    \"Nonfiction\", \"Horror1\", \"Literary1\", \"Romance1\", \"Crime1\", \"SciFi1\", \"Thrillers1\", \"Drama1\",","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"yl-ang"},"content":"                    \"Poetry1\", \"Media1\" , \"Media2\", \"Media3\", \"Media4\", \"Media5\", \"Media6\", \"Media7\", \"Media8\",","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"yl-ang"},"content":"                    \"Media9\", \"Media10\")","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"yl-ang"},"content":"            .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"yl-ang"},"content":"    private LengthyBooks() {} // prevents instantiation","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"     * Returns an {@code LibTask} with all the lengthy books.","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    public static LibTask getLengthyLibTask() {","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        LibTask ab \u003d new LibTask();","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"yl-ang"},"content":"        for (Book book : getLengthyBooks()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"yl-ang"},"content":"            ab.addBook(book);","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"yl-ang"},"content":"        return ab;","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"yl-ang"},"content":"    public static List\u003cBook\u003e getLengthyBooks() {","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"yl-ang"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(EIGHT_HUNDRED_LARGE_BOOK, LARGE_BOOK));","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"yl-ang":82,"bingsen0806":4}},{"path":"src/test/java/seedu/address/testutil/LibTaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.LibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":" * A utility class to help with building LibTask objects.","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":" *     {@code LibTask ab \u003d new LibTaskBuilder().withPatron(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"public class LibTaskBuilder {","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"    private LibTask libTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    public LibTaskBuilder() {","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"        libTask \u003d new LibTask();","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"    public LibTaskBuilder(LibTask libTask) {","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"        this.libTask \u003d libTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"     * Adds a new {@code Patron} to the {@code LibTask} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    public LibTaskBuilder withPatron(Patron patron) {","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"        libTask.addPatron(patron);","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    public LibTask build() {","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        return libTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"bingsen0806":34}},{"path":"src/test/java/seedu/address/testutil/ManyPatrons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.LibTask;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"public class ManyPatrons {","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"    // Thirty Patrons are manually added to test if JsonSerializableLibTask will be able to load huge number of Patrons","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"    public static final Patron ALICE_PAULINE \u003d new PatronBuilder().withName(\"Alice Pauline\").withPhone(\"94351253\")","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"alice@example.com\").withId(\"A0123422H\").withTags(\"Student\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"    public static final Patron BENSON_MEIER \u003d new PatronBuilder().withName(\"Benson Meier\").withPhone(\"98765432\")","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"johnd@example.com\").withId(\"A0123412H\").withTags(\"Student\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"    public static final Patron CARL_KURZ \u003d new PatronBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"heinz@example.com\").withId(\"A0123450H\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"    public static final Patron DANIEL_MEIER \u003d new PatronBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"cornelia@example.com\").withId(\"A0123451H\").withTags(\"Student\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"    public static final Patron ELLE_MEYER \u003d new PatronBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"werner@example.com\").withId(\"A0123452H\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"    public static final Patron FIONA_KUNZ \u003d new PatronBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"lydia@example.com\").withId(\"A0123454H\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"    public static final Patron GEORGE_BEST \u003d new PatronBuilder().withName(\"George Best\").withPhone(\"94824421\")","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"george@example.com\").withId(\"A0123455H\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"    public static final Patron AMY \u003d new PatronBuilder().withName(\"Amy\").withPhone(\"94824452\")","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"amy@example.com\").withId(\"A0123457H\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"    public static final Patron ROBERT \u003d new PatronBuilder().withName(\"Robert\").withPhone(\"91234412\")","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"robert99@example.com\").withId(\"A1231231X\").withTags(\"Student\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"    public static final Patron JEAN \u003d new PatronBuilder().withName(\"Jean\").withPhone(\"91234416\")","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"jean199@example.com\").withId(\"A0012125Y\").withTags(\"Student\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"    public static final Patron THOMAS \u003d new PatronBuilder().withName(\"Thomas\").withPhone(\"91234013\")","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"thomas1212@example.com\").withId(\"A0002105Y\").withTags(\"Student\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"    public static final Patron TOMMY_GOH \u003d new PatronBuilder().withName(\"Tommy Goh\").withPhone(\"91234013\")","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"tommyGoh1919@example.com\").withId(\"A0001234G\").withTags(\"Student\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"    public static final Patron TOMMY_LIM \u003d new PatronBuilder().withName(\"Tommy Lim\").withPhone(\"91234543\")","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"tomlim121@example.com\").withId(\"A0001111G\").withTags(\"Student\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"    public static final Patron ALICE_MAKER \u003d new PatronBuilder().withName(\"Alice Maker\").withPhone(\"94354443\")","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"aliceMaker1221@example.com\").withId(\"A0129090H\").withTags(\"Student\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"    public static final Patron BENSON_TOH \u003d new PatronBuilder().withName(\"Benson Toh\").withPhone(\"90120991\")","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"bensontoh@example.com\").withId(\"A0123400F\").withTags(\"Student\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"    public static final Patron CARL_KARL \u003d new PatronBuilder().withName(\"Carl Karl\").withPhone(\"81118222\")","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"KarlKarl11@example.com\").withId(\"A1234111Y\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"yl-ang"},"content":"    public static final Patron DANIEL_NG \u003d new PatronBuilder().withName(\"Daniel Ng\").withPhone(\"87652533\")","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"DanielNgWarrior11@example.com\").withId(\"A4343123H\").withTags(\"Student\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"yl-ang"},"content":"    public static final Patron MASHMALLOW \u003d new PatronBuilder().withName(\"Mashmallow\").withPhone(\"80001234\")","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"mashmallowFire@example.com\").withId(\"A8889991H\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"yl-ang"},"content":"    public static final Patron FIONA_RAIN \u003d new PatronBuilder().withName(\"Fiona Rain\").withPhone(\"99911122\")","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"FionaRain1143@example.com\").withId(\"A0012345E\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"yl-ang"},"content":"    public static final Patron GEORGER_WONG \u003d new PatronBuilder().withName(\"Georger Wong\").withPhone(\"99911123\")","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"GeorgerWong99@example.com\").withId(\"A1212126T\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"yl-ang"},"content":"    public static final Patron AMY_LOW \u003d new PatronBuilder().withName(\"Amy Low\").withPhone(\"97876565\")","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"amylow66@example.com\").withId(\"A1234432R\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"yl-ang"},"content":"    public static final Patron ROBBERT_HOOK \u003d new PatronBuilder().withName(\"Robert Hook\").withPhone(\"98001234\")","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"robertHook11@example.com\").withId(\"A5454121U\").withTags(\"Student\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"yl-ang"},"content":"    public static final Patron JEAN_CHUA \u003d new PatronBuilder().withName(\"Jean Chua\").withPhone(\"98019022\")","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"jeanChua11@example.com\").withId(\"A1122334C\").withTags(\"Student\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"yl-ang"},"content":"    public static final Patron THOMAS_TAN \u003d new PatronBuilder().withName(\"Thomas Tan\").withPhone(\"97616467\")","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"yl-ang"},"content":"            .withEmail(\"thomastan222@example.com\").withId(\"A9898123Y\").withTags(\"Student\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"yl-ang"},"content":"    private ManyPatrons() {} // prevents instantiation","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"yl-ang"},"content":"     * Returns an {@code LibTask} with many Patrons.","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"yl-ang"},"content":"    public static LibTask getManyPatronsLibTask() {","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"yl-ang"},"content":"        LibTask ab \u003d new LibTask();","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"yl-ang"},"content":"        for (Patron patron : getManyPatrons()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"yl-ang"},"content":"            ab.addPatron(patron);","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"yl-ang"},"content":"        return ab;","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"yl-ang"},"content":"    public static List\u003cPatron\u003e getManyPatrons() {","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"yl-ang"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_PAULINE, BENSON_MEIER, CARL_KURZ, DANIEL_MEIER, ELLE_MEYER,","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"yl-ang"},"content":"                FIONA_KUNZ, GEORGE_BEST, AMY, ROBERT, JEAN, THOMAS, TOMMY_GOH, TOMMY_LIM, ALICE_MAKER, BENSON_TOH,","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"yl-ang"},"content":"                CARL_KARL, DANIEL_NG, MASHMALLOW, FIONA_RAIN, GEORGER_WONG, AMY_LOW, ROBBERT_HOOK, JEAN_CHUA,","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"yl-ang"},"content":"                THOMAS_TAN));","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"yl-ang":104}},{"path":"src/test/java/seedu/address/testutil/PatronBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Email;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Id;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Name;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Phone;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":" * A utility class to help with building Patron objects.","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"public class PatronBuilder {","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"    public static final String DEFAULT_ID \u003d \"A6666666H\";","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"    private Id id;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"     * Creates a {@code PatronBuilder} with the default details.","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"    public PatronBuilder() {","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        id \u003d new Id(DEFAULT_ID);","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"     * Initializes the PatronBuilder with the data of {@code patronToCopy}.","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"    public PatronBuilder(Patron patronToCopy) {","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"        name \u003d patronToCopy.getName();","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"        phone \u003d patronToCopy.getPhone();","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"        email \u003d patronToCopy.getEmail();","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"        id \u003d patronToCopy.getId();","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"        tags \u003d new HashSet\u003c\u003e(patronToCopy.getTags());","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"     * Sets the {@code Name} of the {@code Patron} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"    public PatronBuilder withName(String name) {","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Patron} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"    public PatronBuilder withTags(String ... tags) {","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"     * Sets the {@code Id} of the {@code Patron} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"aditi2313"},"content":"    public PatronBuilder withId(String id) {","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"        this.id \u003d new Id(id);","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"aditi2313"},"content":"     * Sets the {@code Phone} of the {@code Patron} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"aditi2313"},"content":"    public PatronBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"aditi2313"},"content":"     * Sets the {@code Email} of the {@code Patron} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"aditi2313"},"content":"    public PatronBuilder withEmail(String email) {","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"aditi2313"},"content":"    public Patron build() {","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"aditi2313"},"content":"        return new Patron(name, phone, email, id, tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"-":64,"aditi2313":32}},{"path":"src/test/java/seedu/address/testutil/PatronUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.Command.PATRON_COMMAND_GROUP;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":" * A utility class for Patron.","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"public class PatronUtil {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"     * Returns an add command string for adding the {@code patron}.","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    public static String getAddCommand(Patron patron) {","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"        return PATRON_COMMAND_GROUP + \" \" + Command.ADD_COMMAND_WORD + \" \" + getPatronDetails(patron);","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"     * Returns the part of command string for the given {@code patron}\u0027s details.","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"    public static String getPatronDetails(Patron patron) {","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"        sb.append(PREFIX_NAME + patron.getName().fullName + \" \");","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"        sb.append(PREFIX_PHONE + patron.getPhone().value + \" \");","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"        sb.append(PREFIX_EMAIL + patron.getEmail().value + \" \");","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        sb.append(PREFIX_ID + patron.getId().value + \" \");","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"        patron.getTags().stream().forEach(","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"     * Returns the part of command string for the given {@code EditPatronDescriptor}\u0027s details.","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"    public static String getEditPatronDescriptorDetails(EditPatronCommand.EditPatronDescriptor descriptor) {","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"        descriptor.getId().ifPresent(address -\u003e sb.append(PREFIX_ID).append(address.value).append(\" \"));","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"-":43,"aditi2313":20}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"     * Returns the middle index of the patron in the {@code model}\u0027s patron list.","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"        return Index.fromOneBased(model.getFilteredPatronList().size() / 2);","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"     * Returns the last index of the patron in the {@code model}\u0027s patron list.","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"        return Index.fromOneBased(model.getFilteredPatronList().size());","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"     * Returns the patron in the {@code model}\u0027s patron list at {@code index}.","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"    public static Patron getPatron(Model model, Index index) {","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"        return model.getFilteredPatronList().get(index.getZeroBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":47,"aditi2313":8}},{"path":"src/test/java/seedu/address/testutil/TypicalBooks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_JK_ROWLING;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HARRY_POTTER;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HUNGER_GAMES;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HARRY_POTTER;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HUNGER_GAMES;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_ADVENTURE;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MAGIC;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SCIFI;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_THRILLER;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.book.BookStatusType.BORROWED;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":" * A utility class containing a list of {@code Patron} objects to be used in tests.","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"public class TypicalBooks {","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    public static final Book ALGORITHM \u003d new BookBuilder().withName(\"Introduction to Algorithms\")","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(\"978-03-71-88850-6\").withAuthors(\"Cormen\", \"Leiserson\", \"Rivest\", \"Stein\")","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"            .withTags(\"ComputerScience\", \"Mathematics\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    public static final Book SEMAPHORE \u003d new BookBuilder().withName(\"The Little Book of Semaphores\")","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(\"4992719864\")","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"            .withTags(\"ComputerScience\", \"Technology\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    public static final Book MAZE_RUNNER \u003d new BookBuilder().withName(\"The Maze Runner\")","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(\"1-474-59282-1\")","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"            .withAuthors(\"James Dashner1\", \"James Dashner2\", \"James Dashner3\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    public static final Book AI \u003d new BookBuilder().withName(\"Artificial Intelligence: A Modern Approach\")","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(\"9780131038059\")","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"            .withAuthors(\"Peter Norvig\", \"Stuart J. Russell\")","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"            .withTags(\"Technology\")","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"            .withBookStatus(getSampleBorrowedStatus())","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"            .build();","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    public static final Book CINDERELLA \u003d new BookBuilder().withName(\"Cinderella\")","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(\"9781409580454\")","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"            .build();","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    // Manually added - Book\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    public static final Book HARRY_POTTER \u003d new BookBuilder().withName(VALID_BOOK_NAME_HARRY_POTTER)","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(VALID_ISBN_HARRY_POTTER)","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"            .withAuthors(VALID_AUTHOR_JK_ROWLING)","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"            .withTags(VALID_TAG_ADVENTURE, VALID_TAG_MAGIC).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"    public static final Book HUNGER_GAMES \u003d new BookBuilder().withName(VALID_BOOK_NAME_HUNGER_GAMES)","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(VALID_ISBN_HUNGER_GAMES)","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"            .withAuthors(VALID_AUTHOR_SUZANNE_COLLINS)","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"            .withTags(VALID_TAG_THRILLER, VALID_TAG_SCIFI, VALID_TAG_ADVENTURE).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    private TypicalBooks() {} // prevents instantiation","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    public static List\u003cBook\u003e getTypicalBooks() {","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALGORITHM, SEMAPHORE, MAZE_RUNNER, AI, CINDERELLA));","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"    private static BookStatus getSampleBorrowedStatus() {","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        return new BookStatus(BORROWED,","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"                Optional.ofNullable(TypicalPatrons.getTypicalPatrons().get(0)),","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"                Optional.ofNullable(\"14-Feb-2022\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"                Optional.ofNullable(\"28-Feb-2022\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":68,"aditi2313":1}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"    public static final Index INDEX_FIRST_PATRON \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"    public static final Index INDEX_SECOND_PATRON \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"    public static final Index INDEX_THIRD_PATRON \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"    public static final Index INDEX_FOURTH_PATRON \u003d Index.fromOneBased(4);","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"    public static final Index INDEX_FIRST_BOOK \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"    public static final Index INDEX_SECOND_BOOK \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    public static final Index INDEX_FOURTH_BOOK \u003d Index.fromOneBased(4);","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"yuqitanyq":3,"-":9,"aditi2313":3,"bingsen0806":2}},{"path":"src/test/java/seedu/address/testutil/TypicalLibTask.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBooks;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.testutil.TypicalPatrons.getTypicalPatrons;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.LibTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"public class TypicalLibTask {","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"     * Returns an {@code LibTask} with all the typical patrons and books.","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"     * @return An {@code LibTask} with all the typical patrons and books.","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    public static LibTask getTypicalLibTask() {","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"        LibTask ab \u003d new LibTask();","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"        for (Patron patron : getTypicalPatrons()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"            ab.addPatron(patron);","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"        for (Book book : getTypicalBooks()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"            ab.addBook(book);","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"        return ab;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":22,"aditi2313":4}},{"path":"src/test/java/seedu/address/testutil/TypicalPatrons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.patron.Patron;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":" * A utility class containing a list of {@code Patron} objects to be used in tests.","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"public class TypicalPatrons {","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    public static final Patron ALICE \u003d new PatronBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"            .withId(\"A0123451H\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"    public static final Patron BENSON \u003d new PatronBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"            .withId(\"A0123452H\")","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"    public static final Patron CARL \u003d new PatronBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"            .withEmail(\"heinz@example.com\").withId(\"A0123453H\").build();","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"    public static final Patron DANIEL \u003d new PatronBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"            .withEmail(\"cornelia@example.com\").withId(\"A0123454H\").withTags(\"friends\").build();","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"    public static final Patron ELLE \u003d new PatronBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"            .withEmail(\"werner@example.com\").withId(\"A0123455H\").build();","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"    public static final Patron FIONA \u003d new PatronBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"            .withEmail(\"lydia@example.com\").withId(\"A0123456H\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"    public static final Patron GEORGE \u003d new PatronBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"            .withEmail(\"anna@example.com\").withId(\"A0123457H\").build();","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"    public static final Patron HOON \u003d new PatronBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"            .withEmail(\"stefan@example.com\").withId(\"A0123458H\").build();","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"    public static final Patron IDA \u003d new PatronBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"            .withEmail(\"hans@example.com\").withId(\"A0123459H\").build();","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"    // Manually added - Patron\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"    public static final Patron AMY \u003d new PatronBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"            .withEmail(VALID_EMAIL_AMY).withId(VALID_ID_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"    public static final Patron BOB \u003d new PatronBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"            .withEmail(VALID_EMAIL_BOB).withId(VALID_ID_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"    private TypicalPatrons() {} // prevents instantiation","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"    public static List\u003cPatron\u003e getTypicalPatrons() {","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"-":34,"aditi2313":30}}]
