[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"# LibTask","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W14-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W14-1/tp/actions)","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"* **LibTask** is a desktop application to allow librarians to keep track of book statuses and contact details of patrons who have borrowed them or requested for them.","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"* Example usages:","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"  * as a tracking tool to track patrons with overdue books.","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"  * as a tracking tool to patrons that are interested in certain books.","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"* It is named `LibTask` as we aim to help librarians to accomplish their daily tasks efficiently.","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"* For the detailed documentation of this project, you may refer to our **[user](https://ay2122s2-cs2103t-w14-1.github.io/tp/UserGuide.html)** and **[developer guide](https://ay2122s2-cs2103t-w14-1.github.io/tp/DeveloperGuide.html)**.","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"yl-ang":14,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"### Lim Bing Sen","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"\u003cimg src\u003d\"images/bingsen0806.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"[[github](https://github.com/bingsen0806)]","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"[[portfolio](team/bingsen0806.md)]","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"* Role: Developer, Project Lead","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"* Responsibilities: Book commands","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"### Ang Yong Liang","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"\u003cimg src\u003d\"images/yl-ang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"[[github](http://github.com/yl-ang)]","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"[[portfolio](team/yl-ang.md)]","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"* Role: Developer","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"### Tan Yu Qi","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"\u003cimg src\u003d\"images/yuqitanyq.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"[[github](http://github.com/yuqitanyq)] [[portfolio](team/yuqitanyq.md)]","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"* Responsibilities: Implementation of some book, patron and general commands, plus integration.","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Halpfrog"},"content":"### Sarthak Pradhan","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Halpfrog"},"content":"\u003cimg src\u003d\"images/halpfrog.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Halpfrog"},"content":"[[github](http://github.com/halpfrog)]","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"Halpfrog"},"content":"[[portfolio](team/halpfrog.md)]","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Halpfrog"},"content":"* Responsibilities: General Commands","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"### Aditi Gupta","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"\u003cimg src\u003d\"images/aditi2313.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"[[github](http://github.com/aditi2313)]","lastModifiedDate":"2022-02-25"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"[[portfolio](team/aditi2313.md)]","lastModifiedDate":"2022-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"* Responsibilities: Patron commands","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"yl-ang":5,"yuqitanyq":4,"-":32,"bingsen0806":6,"Halpfrog":5,"aditi2313":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"yl-ang"},"content":"* a librarian who wants to manage book loans and requests by patrons","lastModifiedDate":"2022-03-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"yl-ang"},"content":"**Value proposition**: simplifying how librarians manage the status of library book loans and requests by patrons","lastModifiedDate":"2022-03-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"| Priority | As a …​                                                   | I want to …​                                                                  | So that I can…​                                                                                                                       |","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"yuqitanyq"},"content":"|----------|-----------------------------------------------------------|-------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-02-24"},{"lineNumber":275,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian                                                 | add a patron (student or staff) to my database                                | I can keep track of books borrowed or requested by the patron                                                                         |","lastModifiedDate":"2022-02-24"},{"lineNumber":276,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian                                                 | delete a patron from my database                                              | I do not get overwhelmed by data of graduated students or retired staff.                                                              |","lastModifiedDate":"2022-02-24"},{"lineNumber":277,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Admin in charge of updating student records               | update information about patrons in my database                               | I have their latest contact when I need to contact them                                                                               |","lastModifiedDate":"2022-02-24"},{"lineNumber":278,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Efficient librarian                                       | filter patrons in my database based on books                                  | I can know which patrons are requesting or borrowing the book                                                                         |","lastModifiedDate":"2022-02-24"},{"lineNumber":279,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Efficient librarian                                       | find patrons based on categories                                              | I do not get overwhelmed by long lists of patrons in uncategorized search results                                                     |","lastModifiedDate":"2022-02-24"},{"lineNumber":280,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Admin                                                     | view information of a specific patron                                         | I can see the books they borrowed or requested for                                                                                    |","lastModifiedDate":"2022-02-24"},{"lineNumber":281,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Efficient librarian                                       | view patrons who have not returned overdue books                              | I can automate the process of sending reminders instead of sending reminders individually                                             |","lastModifiedDate":"2022-02-24"},{"lineNumber":282,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian                                                 | add a book to my database                                                     | I can keep track of details of the book                                                                                               |","lastModifiedDate":"2022-02-24"},{"lineNumber":283,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Easily overwhelmed librarian                              | delete a book from my database                                                | I do not get overwhelmed by information about books that no longer exist                                                              |","lastModifiedDate":"2022-02-24"},{"lineNumber":284,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Careless librarian                                        | edit information about a book                                                 | I can correct typos in the details of the books when I first added them to the database                                               |","lastModifiedDate":"2022-02-24"},{"lineNumber":285,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Book recommender                                          | classify books into categories                                                | I can more easily provide book recommendations                                                                                        |","lastModifiedDate":"2022-02-24"},{"lineNumber":286,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Request handler                                           | filter books based on authors and keywords                                    | I can quickly navigate the book when a patron is requesting it                                                                        |","lastModifiedDate":"2022-02-24"},{"lineNumber":287,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Forward looking librarian                                 | filter books based on their borrowing date and expected return date           | I can have an estimate of my incoming workload for processing returned books                                                          |","lastModifiedDate":"2022-02-24"},{"lineNumber":288,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian                                                 | store details about a book loan by a patron                                   | I can perform tasks such as sorting, searching or categorizing books and patrons later                                                |","lastModifiedDate":"2022-02-24"},{"lineNumber":289,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian                                                 | update return and order status of books                                       | I can keep track of a book’s availability                                                                                             |","lastModifiedDate":"2022-02-24"},{"lineNumber":290,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Request handler                                           | take note of requests from students to be notified when a book is returned    | I can easily notify the student when the book under request is returned                                                               |","lastModifiedDate":"2022-02-24"},{"lineNumber":291,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Request handler                                           | take note of book order requests from professors                              | I can easily inform the professor when the book has arrived                                                                           |","lastModifiedDate":"2022-02-24"},{"lineNumber":292,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian                                                 | view all books in my database                                                 | I can make use of the list to perform other tasks                                                                                     |","lastModifiedDate":"2022-02-24"},{"lineNumber":293,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian overwhelmed with lots of book requests          | delete book requests I have                                                   | records of book requests are minimized by not keeping track of cancelled and fulfilled requests                                       |","lastModifiedDate":"2022-02-24"},{"lineNumber":294,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | New user                                                  | be able to access help                                                        | I can learn how to use the application                                                                                                |","lastModifiedDate":"2022-02-24"},{"lineNumber":295,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | User who has done learning how to use the application     | remove all the current entries and sample data                                | I can start a fresh and input my own data                                                                                             |","lastModifiedDate":"2022-02-24"},{"lineNumber":296,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | User                                                      | exit the application                                                          | I can leave the application                                                                                                           |","lastModifiedDate":"2022-02-24"},{"lineNumber":297,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | User with strong personal preference                      | change the background theme of the dashboard                                  | it looks more visually appealing to me and motivates me to use the application                                                        |","lastModifiedDate":"2022-02-24"},{"lineNumber":298,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | User                                                      | be able to adjust the window size                                             | I can see the data more clearly.                                                                                                      |","lastModifiedDate":"2022-02-24"},{"lineNumber":299,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Efficient user who is familiar with CLI tools             | refer to recent commands using up and down arrows                             | I can save time from retyping past commands                                                                                           |","lastModifiedDate":"2022-02-24"},{"lineNumber":300,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | User with poor eyesight and strong personal preference    | edit font size and style                                                      | I can read contents on the application better                                                                                         |","lastModifiedDate":"2022-02-24"},{"lineNumber":301,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | User who likes to stay on top of tasks                    | have a short note taking session to take down notes                           | I do not need to remember small details.                                                                                              |","lastModifiedDate":"2022-02-24"},{"lineNumber":302,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Admin in charge of sending emails                         | be able to export a group of emails such as overdue emails based on templates | I can craft personalized emails without the need to draft them individually                                                           |","lastModifiedDate":"2022-02-24"},{"lineNumber":303,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Efficient librarian                                       | continue where I left off from the previous days                              | I can continue to deliver to my borrowers the books they wanted                                                                       |","lastModifiedDate":"2022-02-24"},{"lineNumber":304,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian in charge of placing book orders                | view statistics for different book categories                                 | I can make important decisions for the library such as getting more copies of a certain book/getting more books of a certain category |","lastModifiedDate":"2022-02-24"},{"lineNumber":305,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Book recommender who used the application for a long time | recommend books using stored statistics of most frequently requested books    | I can make better recommendations for students that come to us                                                                        |","lastModifiedDate":"2022-02-24"},{"lineNumber":306,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Impatient user                                            | be able to experience reasonable response time while using the application    | I can do my job more efficiently                                                                                                      |","lastModifiedDate":"2022-02-24"},{"lineNumber":307,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Easily overwhelmed request handler                        | be able to prioritize my book requests                                        | I can effectively handle requests                                                                                                     |","lastModifiedDate":"2022-02-24"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"Halpfrog"},"content":"(For all use cases below, the **System** is the `LibTask` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-03-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"Halpfrog"},"content":"### UC01: Adding a patron to LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"Halpfrog"},"content":"1. User requests to add a patron and provides the name and details of the patron.","lastModifiedDate":"2022-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":321,"author":{"gitId":"Halpfrog"},"content":"2. LibTask adds the patron.","lastModifiedDate":"2022-03-02"},{"lineNumber":322,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":323,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":327,"author":{"gitId":"Halpfrog"},"content":"* 1a. Compulsory fields are not provided.","lastModifiedDate":"2022-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":329,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":331,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":333,"author":{"gitId":"Halpfrog"},"content":"* 1b. The patron details are invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":335,"author":{"gitId":"Halpfrog"},"content":"    * 1b1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":337,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":339,"author":{"gitId":"Halpfrog"},"content":"* 1c. The given name and details are duplicated.","lastModifiedDate":"2022-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":341,"author":{"gitId":"Halpfrog"},"content":"    * 1c1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":343,"author":{"gitId":"Halpfrog"},"content":"      Use case resume from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":344,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":345,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":346,"author":{"gitId":"Halpfrog"},"content":"### UC02: List patron\u0027s on LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":347,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":348,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":349,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":350,"author":{"gitId":"Halpfrog"},"content":"1. User requests to list all patrons","lastModifiedDate":"2022-03-02"},{"lineNumber":351,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":352,"author":{"gitId":"Halpfrog"},"content":"2. LibTask shows the list of all the patrons.","lastModifiedDate":"2022-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"Halpfrog"},"content":"* 2a. LibTask has no stored patrons.","lastModifiedDate":"2022-03-02"},{"lineNumber":359,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":360,"author":{"gitId":"Halpfrog"},"content":"    * 2a1. LibTask shows an empty list.","lastModifiedDate":"2022-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"Halpfrog"},"content":"### UC03: Editing a patron on LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":367,"author":{"gitId":"Halpfrog"},"content":"1. User list all patrons [UC02](#uc02-list-patrons-on-libtask)","lastModifiedDate":"2022-03-02"},{"lineNumber":368,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":369,"author":{"gitId":"Halpfrog"},"content":"2. User requests to edit a patron and provide the index and the necessary details to be edited.","lastModifiedDate":"2022-03-02"},{"lineNumber":370,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":371,"author":{"gitId":"Halpfrog"},"content":"3. LibTask edits the patron.","lastModifiedDate":"2022-03-02"},{"lineNumber":372,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":373,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":374,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":375,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":376,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":377,"author":{"gitId":"Halpfrog"},"content":"* 1a. The index is not provided or is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":378,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":379,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":380,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":381,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":382,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":383,"author":{"gitId":"Halpfrog"},"content":"* 1b. The details are not provided or are invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":384,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":385,"author":{"gitId":"Halpfrog"},"content":"    * 1b1.  LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":386,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":387,"author":{"gitId":"Halpfrog"},"content":"      Use case resume from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":388,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":389,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":390,"author":{"gitId":"Halpfrog"},"content":"### UC04: Find a patron on LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":391,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":392,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":393,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":394,"author":{"gitId":"Halpfrog"},"content":"1. User request to find patron(s) and provide a number of keywords.","lastModifiedDate":"2022-03-02"},{"lineNumber":395,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":396,"author":{"gitId":"Halpfrog"},"content":"2. LibTask shows the list of patrons that match the search.","lastModifiedDate":"2022-03-02"},{"lineNumber":397,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":398,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":399,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":400,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":401,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":402,"author":{"gitId":"Halpfrog"},"content":"* 1a. Keywords not provided or are invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":403,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":404,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":405,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":406,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":407,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":408,"author":{"gitId":"Halpfrog"},"content":"* 2a.  No patrons fulfil the search criteria.","lastModifiedDate":"2022-03-02"},{"lineNumber":409,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":410,"author":{"gitId":"Halpfrog"},"content":"    * 2a1. LibTask shows an empty list.","lastModifiedDate":"2022-03-02"},{"lineNumber":411,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":412,"author":{"gitId":"Halpfrog"},"content":"      Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":413,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":414,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":415,"author":{"gitId":"Halpfrog"},"content":"### UC05: Delete a patron from LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":416,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":417,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":418,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":419,"author":{"gitId":"Halpfrog"},"content":"1. User list all patrons [UC02](#uc02-list-patrons-on-libtask).","lastModifiedDate":"2022-03-02"},{"lineNumber":420,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":421,"author":{"gitId":"Halpfrog"},"content":"2. User requests to delete a patron and provide the index.","lastModifiedDate":"2022-03-02"},{"lineNumber":422,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":423,"author":{"gitId":"Halpfrog"},"content":"3. LibTask deletes the patron.","lastModifiedDate":"2022-03-02"},{"lineNumber":424,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":425,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":426,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":427,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":428,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":429,"author":{"gitId":"Halpfrog"},"content":"* 1a. The index is not provided or is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":430,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":431,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":432,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":433,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":434,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":435,"author":{"gitId":"Halpfrog"},"content":"### UC06: Add book to LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":436,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":437,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":438,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":439,"author":{"gitId":"Halpfrog"},"content":"1. User requests to add a book and provides the name and details of the book","lastModifiedDate":"2022-03-02"},{"lineNumber":440,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":441,"author":{"gitId":"Halpfrog"},"content":"2. LibTask adds the module.","lastModifiedDate":"2022-03-02"},{"lineNumber":442,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":443,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":444,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":445,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":446,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":447,"author":{"gitId":"Halpfrog"},"content":"* 1a. Compulsory fields are not provided.","lastModifiedDate":"2022-03-02"},{"lineNumber":448,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":449,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":450,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":451,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":452,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":453,"author":{"gitId":"Halpfrog"},"content":"* 1b. The book details are invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":454,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":455,"author":{"gitId":"Halpfrog"},"content":"    * 1b1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":456,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":457,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":458,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":459,"author":{"gitId":"Halpfrog"},"content":"### UC07: List Books on LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":460,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":461,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":462,"author":{"gitId":"Halpfrog"},"content":"1. User requests to list all books.","lastModifiedDate":"2022-03-02"},{"lineNumber":463,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":464,"author":{"gitId":"Halpfrog"},"content":"2. LibTask shows the list of all the books.","lastModifiedDate":"2022-03-02"},{"lineNumber":465,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":466,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":467,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":468,"author":{"gitId":"Halpfrog"},"content":"### UC08: Edit a book on LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":469,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":470,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":471,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":472,"author":{"gitId":"Halpfrog"},"content":"1. User requests to edit a book and provides the index of the book and the new details.","lastModifiedDate":"2022-03-02"},{"lineNumber":473,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":474,"author":{"gitId":"Halpfrog"},"content":"2. LibTask edits the book.","lastModifiedDate":"2022-03-02"},{"lineNumber":475,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":476,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":477,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":478,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":479,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":480,"author":{"gitId":"Halpfrog"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":481,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":482,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":483,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":484,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":485,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":486,"author":{"gitId":"Halpfrog"},"content":"* 1b. The new details are invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":487,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":488,"author":{"gitId":"Halpfrog"},"content":"    * 1b1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":489,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":490,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":491,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":492,"author":{"gitId":"Halpfrog"},"content":"### UC09: Delete Book from LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":493,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":494,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":495,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":496,"author":{"gitId":"Halpfrog"},"content":"1. User requests to delete a book and provides the index.","lastModifiedDate":"2022-03-02"},{"lineNumber":497,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":498,"author":{"gitId":"Halpfrog"},"content":"2. LibTask deletes the book.","lastModifiedDate":"2022-03-02"},{"lineNumber":499,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":500,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":501,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":502,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":503,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":504,"author":{"gitId":"Halpfrog"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":505,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":506,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":507,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":508,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":509,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":510,"author":{"gitId":"Halpfrog"},"content":"### UC10: Borrow Book","lastModifiedDate":"2022-03-02"},{"lineNumber":511,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":512,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":513,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":514,"author":{"gitId":"Halpfrog"},"content":"1. User lists all patrons [UC02](#uc02-list-patrons-on-libtask)","lastModifiedDate":"2022-03-02"},{"lineNumber":515,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":516,"author":{"gitId":"Halpfrog"},"content":"2. User lists all books [UC07](#uc07-list-books-on-libtask)","lastModifiedDate":"2022-03-02"},{"lineNumber":517,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":518,"author":{"gitId":"Halpfrog"},"content":"3. User requests to establish a borrow relationship and provides index of the patron and index of the book in lists, as well as return date of the book.","lastModifiedDate":"2022-03-02"},{"lineNumber":519,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":520,"author":{"gitId":"Halpfrog"},"content":"4. LibTask establishes a borrow relationship between the patron and the book.","lastModifiedDate":"2022-03-02"},{"lineNumber":521,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":522,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":523,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":524,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":525,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":526,"author":{"gitId":"Halpfrog"},"content":"* 3a. The given index of patron or book is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":527,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":528,"author":{"gitId":"Halpfrog"},"content":"    * 3a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":529,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":530,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2022-03-02"},{"lineNumber":531,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":532,"author":{"gitId":"Halpfrog"},"content":"* 3b. The return date of the book is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":533,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":534,"author":{"gitId":"Halpfrog"},"content":"    * 3a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":535,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":536,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2022-03-02"},{"lineNumber":537,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":538,"author":{"gitId":"Halpfrog"},"content":"* 3b. The book is already borrowed.","lastModifiedDate":"2022-03-02"},{"lineNumber":539,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":540,"author":{"gitId":"Halpfrog"},"content":"    * 3a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":541,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":542,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2022-03-02"},{"lineNumber":543,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":544,"author":{"gitId":"Halpfrog"},"content":"### UC11: Return Book on LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":545,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":546,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":547,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":548,"author":{"gitId":"Halpfrog"},"content":"1. User finds a patron [UC04](#uc04-find-a-patron-on-libtask)","lastModifiedDate":"2022-03-02"},{"lineNumber":549,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":550,"author":{"gitId":"Halpfrog"},"content":"2. User requests to end a borrow relationship and provides index of the patron and index of the book in lists.","lastModifiedDate":"2022-03-02"},{"lineNumber":551,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":552,"author":{"gitId":"Halpfrog"},"content":"3. LibTask removes the borrow relationship between the patron and the book.","lastModifiedDate":"2022-03-02"},{"lineNumber":553,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":554,"author":{"gitId":"Halpfrog"},"content":"Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":555,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":556,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":557,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":558,"author":{"gitId":"Halpfrog"},"content":"* 2a. The given index of patron or book is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":559,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":560,"author":{"gitId":"Halpfrog"},"content":"    * 2a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":561,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":562,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-03-02"},{"lineNumber":563,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":564,"author":{"gitId":"Halpfrog"},"content":"* 2b. The book is not borrowed by the patron.","lastModifiedDate":"2022-03-02"},{"lineNumber":565,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":566,"author":{"gitId":"Halpfrog"},"content":"    * 2a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":567,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":568,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-03-02"},{"lineNumber":569,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":570,"author":{"gitId":"Halpfrog"},"content":"### UC12: Asking for Help on LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":571,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":572,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":573,"author":{"gitId":"Halpfrog"},"content":"1. User requests to list all commands","lastModifiedDate":"2022-03-02"},{"lineNumber":574,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":575,"author":{"gitId":"Halpfrog"},"content":"2. LibTask shows the list of all the commands","lastModifiedDate":"2022-03-02"},{"lineNumber":576,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":577,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":578,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":579,"author":{"gitId":"Halpfrog"},"content":"### UC13: Exiting LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":580,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":581,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":582,"author":{"gitId":"Halpfrog"},"content":"1. User requests to exit LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":583,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":584,"author":{"gitId":"Halpfrog"},"content":"2. LibTask closes.","lastModifiedDate":"2022-03-02"},{"lineNumber":585,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":586,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":587,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":588,"author":{"gitId":"Halpfrog"},"content":"### UC14: Clear database of all Patron\u0027s and Book\u0027s","lastModifiedDate":"2022-03-02"},{"lineNumber":589,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":590,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":591,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":592,"author":{"gitId":"Halpfrog"},"content":"1. User requests to clear database","lastModifiedDate":"2022-03-02"},{"lineNumber":593,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":594,"author":{"gitId":"Halpfrog"},"content":"2. LibTask clears the database.","lastModifiedDate":"2022-03-02"},{"lineNumber":595,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":596,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":597,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":598,"author":{"gitId":"Halpfrog"},"content":"Extension","lastModifiedDate":"2022-03-02"},{"lineNumber":599,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":600,"author":{"gitId":"Halpfrog"},"content":"* 1a. The database is already empty","lastModifiedDate":"2022-03-02"},{"lineNumber":601,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":602,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message","lastModifiedDate":"2022-03-02"},{"lineNumber":603,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":604,"author":{"gitId":"Halpfrog"},"content":"      Use case ends","lastModifiedDate":"2022-03-02"},{"lineNumber":605,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":606,"author":{"gitId":"Halpfrog"},"content":"### UC15: Show previously run commands","lastModifiedDate":"2022-03-02"},{"lineNumber":607,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":608,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":609,"author":{"gitId":"Halpfrog"},"content":"1. User requests to see previous command","lastModifiedDate":"2022-03-02"},{"lineNumber":610,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":611,"author":{"gitId":"Halpfrog"},"content":"2. LibTask shows the last command used","lastModifiedDate":"2022-03-02"},{"lineNumber":612,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":613,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":614,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":615,"author":{"gitId":"Halpfrog"},"content":"Extension","lastModifiedDate":"2022-03-02"},{"lineNumber":616,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":617,"author":{"gitId":"Halpfrog"},"content":"* 1a. No previous command","lastModifiedDate":"2022-03-02"},{"lineNumber":618,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":619,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an empty field","lastModifiedDate":"2022-03-02"},{"lineNumber":620,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":621,"author":{"gitId":"Halpfrog"},"content":"      Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"Halpfrog"},"content":"4. A novice with no coding background should be able to use the Lib Task.","lastModifiedDate":"2022-03-02"},{"lineNumber":631,"author":{"gitId":"Halpfrog"},"content":"5. The system should respond in 1 second.","lastModifiedDate":"2022-03-02"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"Halpfrog"},"content":"* **Mainstream OS**: Windows, Linux, Unix, macOS","lastModifiedDate":"2022-03-02"},{"lineNumber":636,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"Halpfrog"},"content":"* **Patron**: A user of the library","lastModifiedDate":"2022-03-02"},{"lineNumber":638,"author":{"gitId":"Halpfrog"},"content":"* **ISBN**: An International Standard Book Number 13 digits in length.","lastModifiedDate":"2022-03-02"},{"lineNumber":639,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yl-ang":2,"yuqitanyq":34,"-":366,"Halpfrog":290}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"LibTask is a **desktop application for librarians to manage book loans and requests by patrons, optimized for use via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you can type fast, AB3 can get your book tracking tasks done faster than traditional GUI apps. ","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"# 1. Introduction","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"As a school librarian of a large library, you may already have your own desktop library software. However, existing library softwares are GUI-based and slow to work with. If you prefer to work with CLI commands efficiently while still having the benefits of aesthetic displays, then LibTask is designed just for you! LibTask provides you with a well packaged system of commands for managing book loans and book requests by your patrons. Using LibTask, you can quickly process borrowing and returning books, and view different groups of patrons and books to perform tasks such as notifying patrons with overdue books. The system also maintains two independent lists of books and patrons, allowing you to perform queries more efficiently.","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"# 2. Quick start","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"1. Download the latest `libtask.jar` from [here](https://github.com/AY2122S2-CS2103T-W14-1/tp/releases).","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your LibTask.","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds.\u003cbr\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"   * **`patron list`** : Lists all the patrons in libTask.","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"   * **`patron add`**`n/Alice s/S01823283S p/90123212 e/profA@u.nus.edu ` : Adds a patron named `Alice` into LibTask.","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"   * **`patron delete`**`3` : Deletes the 3rd patron shown in the current patron list.","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"   * **`book add`**` n/Harry Potter i/12398-12398-239 a/J.K.Rowling t/Thriller t/Magic`: Adds a book titled `Harry Potter`.","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"   * **`book list`** : Lists all the books in libTask.","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"   * **`book delete`**`1` : Deletes the 1st book shown in the current book list.","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"   * **`exit`** : Exits libTask.","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"aditi2313"},"content":"### Adding a patron: `add`","lastModifiedDate":"2022-03-01"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"Adds a patron to the library database.","lastModifiedDate":"2022-03-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"Format: `patron add n/NAME s/ID p/PHONE e/EMAIL [t/TAG]…​`","lastModifiedDate":"2022-03-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"aditi2313"},"content":"A patron can have any number of tags (including 0)","lastModifiedDate":"2022-03-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"aditi2313"},"content":"* `patron add n/John s/A02128282A p/93231222 e/e03482@u.nus.edu t/student`","lastModifiedDate":"2022-03-01"},{"lineNumber":96,"author":{"gitId":"aditi2313"},"content":"* `patron add n/Alice s/S01823283S p/90123212 e/profA@u.nus.edu`","lastModifiedDate":"2022-03-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"aditi2313"},"content":"### Listing all patrons : `list`","lastModifiedDate":"2022-03-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"aditi2313"},"content":"Shows a list of all patrons in the database.","lastModifiedDate":"2022-03-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"aditi2313"},"content":"Format: `patron list`","lastModifiedDate":"2022-03-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"aditi2313"},"content":"### Editing a patron : `edit`","lastModifiedDate":"2022-03-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"Edits a patron at a specified index of the displayed patron list.","lastModifiedDate":"2022-03-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"aditi2313"},"content":"Format: `patron edit INDEX [n/NAME] [s/ID] [p/PHONE] [e/EMAIL] [t/TAG]…​`","lastModifiedDate":"2022-03-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"aditi2313"},"content":"* Edits the patron at the specified `INDEX`. The index refers to the index number shown in the displayed patron list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"aditi2313"},"content":"* When editing tags, the existing tags of the patron will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2022-03-01"},{"lineNumber":114,"author":{"gitId":"aditi2313"},"content":"* You can remove all the patron’s tags by typing `t/` without","lastModifiedDate":"2022-03-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"aditi2313"},"content":"* `patron edit 1 n/John Cena p/91959491 e/johncena@u.nus.edu` Edits the name, phone number and email address of the 1st patron to be `John Cena`, `91959491` and `johncena@u.nus.edu` respectively.","lastModifiedDate":"2022-03-01"},{"lineNumber":119,"author":{"gitId":"aditi2313"},"content":"* `patron edit 2 n/Alice t/Professor t/Horror ` Edits the name of the 2nd patron to be `Alice` and changes tags to `Professor` and `Horror`.","lastModifiedDate":"2022-03-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"aditi2313"},"content":"### Finding a patron by name: `find`","lastModifiedDate":"2022-03-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"aditi2313"},"content":"Finds all patrons with names matching the given keywords in the database.","lastModifiedDate":"2022-03-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"aditi2313"},"content":"Format: `patron find n/KEYWORD [n/KEYWORD]…​`","lastModifiedDate":"2022-03-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"aditi2313"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2022-03-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"aditi2313"},"content":"* Patrons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-03-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"aditi2313"},"content":"Example:","lastModifiedDate":"2022-03-01"},{"lineNumber":135,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":136,"author":{"gitId":"aditi2313"},"content":"`patron find n/alex n/david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":137,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"aditi2313"},"content":"### Deleting a patron : `delete`","lastModifiedDate":"2022-03-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"aditi2313"},"content":"Delete a patron from the system at a specified index of the displayed patron list.","lastModifiedDate":"2022-03-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"aditi2313"},"content":"Format: `patron delete INDEX`","lastModifiedDate":"2022-03-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"aditi2313"},"content":"* Deletes the patron at the specified `INDEX`.","lastModifiedDate":"2022-03-01"},{"lineNumber":147,"author":{"gitId":"aditi2313"},"content":"* The index refers to the index number shown in the displayed patron list.","lastModifiedDate":"2022-03-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"aditi2313"},"content":"* `patron list` followed by `patron delete 2` deletes the 2nd patron in the patron list.","lastModifiedDate":"2022-03-01"},{"lineNumber":152,"author":{"gitId":"aditi2313"},"content":"* `patron find n/Betsy` followed by `patron delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2022-03-01"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"### Adding a book: `add`","lastModifiedDate":"2022-03-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"Adds a book to LibTask database.","lastModifiedDate":"2022-03-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"Format: `book add n/NAME i/ISBN [a/AUTHOR …] [t/CATEGORY_TAG …] `","lastModifiedDate":"2022-03-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"* ISBN must be 10 or 13 digits in length","lastModifiedDate":"2022-03-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"* `book add n/Harry Potter i/978-7-783828-15-1 a/J.K.Rowling t/Thriller t/Magic`","lastModifiedDate":"2022-03-01"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"* `book add n/Heads You Lose i/979-381-26-8943-3 a/Lisa Lutz a/David Hayward`","lastModifiedDate":"2022-03-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"### Listing all books : `list`","lastModifiedDate":"2022-03-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"List all books in LibTask database.","lastModifiedDate":"2022-03-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"Format: `book list`","lastModifiedDate":"2022-03-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"### Editing a book : `edit`","lastModifiedDate":"2022-03-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"Edit details of the book at the specified index.","lastModifiedDate":"2022-03-01"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"Format: `book edit INDEX [n/NAME] [i/ISBN] [a/AUTHOR …] [t/CATEGORY_TAG …]`","lastModifiedDate":"2022-03-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"* Edits the book at the specified `INDEX`. The index refers to the index number shown in the displayed book list. The index **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of books in the displayed list.","lastModifiedDate":"2022-03-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"bingsen0806"},"content":"* When editing tags or authors, the existing tags or authors of the book will be removed i.e. adding of tags and authors is not cumulative.","lastModifiedDate":"2022-03-01"},{"lineNumber":184,"author":{"gitId":"bingsen0806"},"content":"* You can remove all the book’s authors and tags by typing `a/` or `t/` respectively without","lastModifiedDate":"2022-03-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"bingsen0806"},"content":"*  `book edit 1 n/Harry Potter: Sorcerer\u0027s Stone t/Adventure` Edits the name of the 1st book to be `Harry Potter: Sorceror\u0027s Stone` and edit its category tag to be `Adventure`.","lastModifiedDate":"2022-03-01"},{"lineNumber":189,"author":{"gitId":"bingsen0806"},"content":"*  `book edit 2 i/978-79317-3-542-3 a/Another Rowling t/` Edits the ISBN of the 2nd book to be `978-79317-3-542-3`, changes the author to `Another Rowling` and clears all existing tags.","lastModifiedDate":"2022-03-01"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"bingsen0806"},"content":"### Deleting a book : `delete`","lastModifiedDate":"2022-03-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"bingsen0806"},"content":"Deletes the book at the specified index.","lastModifiedDate":"2022-03-01"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"bingsen0806"},"content":"Format: `book delete INDEX`","lastModifiedDate":"2022-03-01"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"bingsen0806"},"content":"* Deletes the book at the specified `INDEX`.","lastModifiedDate":"2022-03-01"},{"lineNumber":198,"author":{"gitId":"bingsen0806"},"content":"* The index refers to the index number shown in the displayed book list.","lastModifiedDate":"2022-03-01"},{"lineNumber":199,"author":{"gitId":"bingsen0806"},"content":"* The index **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of books in the displayed list.","lastModifiedDate":"2022-03-01"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"bingsen0806"},"content":"* `book list` followed by `book delete 2` deletes the 2nd book from LibTask\u0027s database.","lastModifiedDate":"2022-03-01"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"bingsen0806"},"content":"### Borrowing a book : `borrow`","lastModifiedDate":"2022-03-01"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"bingsen0806"},"content":"Establishes a relationship that patron at index INDEX1 borrows a book at index INDEX2.","lastModifiedDate":"2022-03-01"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"bingsen0806"},"content":"Format: `borrow INDEX1 INDEX2`","lastModifiedDate":"2022-03-01"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"bingsen0806"},"content":"* `INDEX1` refers to the index number shown in the displayed patron list.","lastModifiedDate":"2022-03-01"},{"lineNumber":211,"author":{"gitId":"bingsen0806"},"content":"* `INDEX2` refers to the index number shown in the displayed book list.","lastModifiedDate":"2022-03-01"},{"lineNumber":212,"author":{"gitId":"bingsen0806"},"content":"* `INDEX1` **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of patrons in the displayed list.","lastModifiedDate":"2022-03-01"},{"lineNumber":213,"author":{"gitId":"bingsen0806"},"content":"* `INDEX2` **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of books in the displayed list.","lastModifiedDate":"2022-03-01"},{"lineNumber":214,"author":{"gitId":"bingsen0806"},"content":"* The book at `INDEX2` must not be already borrowed.","lastModifiedDate":"2022-03-01"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"bingsen0806"},"content":"* `patron list` and `book list` followed by `borrow 2 3` establishes a relationship that the 2nd patron borrows the 3rd book.","lastModifiedDate":"2022-03-01"},{"lineNumber":218,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":219,"author":{"gitId":"bingsen0806"},"content":"### Returning a book : `return`","lastModifiedDate":"2022-03-01"},{"lineNumber":220,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":221,"author":{"gitId":"bingsen0806"},"content":"Depending on the exact command, return all books borrowed by a patron at the specified index, or return a book at the specified index.","lastModifiedDate":"2022-03-01"},{"lineNumber":222,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":223,"author":{"gitId":"bingsen0806"},"content":"Format: `return PREFIX/INDEX`","lastModifiedDate":"2022-03-01"},{"lineNumber":224,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":225,"author":{"gitId":"bingsen0806"},"content":"* `PREFIX` must be either `p` for patrons or `b` for books.","lastModifiedDate":"2022-03-01"},{"lineNumber":226,"author":{"gitId":"bingsen0806"},"content":"* If `PREFIX` is `p`, `INDEX` refers to the index number shown in the displayed patron list.","lastModifiedDate":"2022-03-01"},{"lineNumber":227,"author":{"gitId":"bingsen0806"},"content":"* If `PREFIX` is `b`, `INDEX` refers to the index number shown in the displayed book list.","lastModifiedDate":"2022-03-01"},{"lineNumber":228,"author":{"gitId":"bingsen0806"},"content":"* `INDEX` **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of patrons or books in the displayed list.","lastModifiedDate":"2022-03-01"},{"lineNumber":229,"author":{"gitId":"bingsen0806"},"content":"* If the book at index `INDEX` is not borrowed, or if the patron at index `INDEX` does not borrow any books, nothing happens.","lastModifiedDate":"2022-03-01"},{"lineNumber":230,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":231,"author":{"gitId":"bingsen0806"},"content":"Examples:","lastModifiedDate":"2022-03-01"},{"lineNumber":232,"author":{"gitId":"bingsen0806"},"content":"* `patron list` followed by `return p/3` will return all books borrowed by the 3rd patron, if any.","lastModifiedDate":"2022-03-01"},{"lineNumber":233,"author":{"gitId":"bingsen0806"},"content":"* `book list` followed by `return b/2` will return the 2nd book, if it is borrowed.","lastModifiedDate":"2022-03-01"},{"lineNumber":234,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":235,"author":{"gitId":"bingsen0806"},"content":"### Requesting a book : `request`","lastModifiedDate":"2022-03-01"},{"lineNumber":236,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":237,"author":{"gitId":"bingsen0806"},"content":"Establishes a relationship that patron at index INDEX1 is requesting to be notified when the book at index INDEX2 is available.","lastModifiedDate":"2022-03-01"},{"lineNumber":238,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":239,"author":{"gitId":"bingsen0806"},"content":"Format: `request INDEX1 INDEX2`","lastModifiedDate":"2022-03-01"},{"lineNumber":240,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":241,"author":{"gitId":"bingsen0806"},"content":"* `INDEX1` **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of patrons in the displayed list.","lastModifiedDate":"2022-03-01"},{"lineNumber":242,"author":{"gitId":"bingsen0806"},"content":"* `INDEX2` **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of books in the displayed list.","lastModifiedDate":"2022-03-01"},{"lineNumber":243,"author":{"gitId":"bingsen0806"},"content":"* If the book at index `INDEX2` is currently available, a message will be displayed.","lastModifiedDate":"2022-03-01"},{"lineNumber":244,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":245,"author":{"gitId":"bingsen0806"},"content":"Examples:","lastModifiedDate":"2022-03-01"},{"lineNumber":246,"author":{"gitId":"bingsen0806"},"content":"* `patron list` and `book list` followed by `request 1 2` keeps a record that the 1st patron would like to be notified when the 2nd book is available.","lastModifiedDate":"2022-03-01"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-02-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"yuqitanyq"},"content":"**Q**: How does this app help current librarians?\u003cbr\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":281,"author":{"gitId":"yuqitanyq"},"content":"**A**: The app helps librarians manage the statuses of books borrowed and borrowers.","lastModifiedDate":"2022-02-24"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"yuqitanyq"},"content":"### Category: Patron Commands","lastModifiedDate":"2022-02-27"},{"lineNumber":287,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":288,"author":{"gitId":"yuqitanyq"},"content":"| Function             | Format Of Command                                                 |","lastModifiedDate":"2022-03-06"},{"lineNumber":289,"author":{"gitId":"yuqitanyq"},"content":"|----------------------|-------------------------------------------------------------------|","lastModifiedDate":"2022-03-06"},{"lineNumber":290,"author":{"gitId":"yuqitanyq"},"content":"| **Add a new patron** | `patron add n/NAME s/ID p/PHONE e/EMAIL [t/TAG]…​`                |","lastModifiedDate":"2022-03-06"},{"lineNumber":291,"author":{"gitId":"yuqitanyq"},"content":"| **List all patrons** | `patron list`                                                     |","lastModifiedDate":"2022-03-06"},{"lineNumber":292,"author":{"gitId":"yuqitanyq"},"content":"| **Edit a patron**    | `patron edit INDEX [n/NAME] [s/ID] [p/PHONE] [e/EMAIL] [t/TAG]…​` |","lastModifiedDate":"2022-03-06"},{"lineNumber":293,"author":{"gitId":"yuqitanyq"},"content":"| **Find a patron**    | `patron find n/KEYWORD [n/KEYWORD]…​`                             |","lastModifiedDate":"2022-03-06"},{"lineNumber":294,"author":{"gitId":"yuqitanyq"},"content":"| **Delete a patron**  | `patron delete INDEX`                                             |","lastModifiedDate":"2022-03-06"},{"lineNumber":295,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":296,"author":{"gitId":"yuqitanyq"},"content":"### Category: Book Commands","lastModifiedDate":"2022-02-27"},{"lineNumber":297,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":298,"author":{"gitId":"yuqitanyq"},"content":"| Function           | Format Of Command                                                   |","lastModifiedDate":"2022-03-06"},{"lineNumber":299,"author":{"gitId":"yuqitanyq"},"content":"|--------------------|---------------------------------------------------------------------|","lastModifiedDate":"2022-03-06"},{"lineNumber":300,"author":{"gitId":"yuqitanyq"},"content":"| **Add a book**     | `book add n/NAME i/ISBN [a/AUTHOR …] [t/CATEGORY_TAG …]`            |","lastModifiedDate":"2022-03-06"},{"lineNumber":301,"author":{"gitId":"yuqitanyq"},"content":"| **List all books** | `book list`                                                         |","lastModifiedDate":"2022-03-06"},{"lineNumber":302,"author":{"gitId":"yuqitanyq"},"content":"| **Edit a book**    | `book edit INDEX [n/NAME] [i/ISBN] [a/AUTHOR …] [t/CATEGORY_TAG …]` |","lastModifiedDate":"2022-03-06"},{"lineNumber":303,"author":{"gitId":"yuqitanyq"},"content":"| **Delete a book**  | `book delete INDEX`                                                 |","lastModifiedDate":"2022-03-06"},{"lineNumber":304,"author":{"gitId":"yuqitanyq"},"content":"| **Borrow a book**  | `borrow INDEX1 INDEX2`                                              |","lastModifiedDate":"2022-03-06"},{"lineNumber":305,"author":{"gitId":"yuqitanyq"},"content":"| **Return a book**  | `return PREFIX/INDEX`                                               |","lastModifiedDate":"2022-03-06"},{"lineNumber":306,"author":{"gitId":"yuqitanyq"},"content":"| **Request a book** | `request INDEX1 INDEX2`                                             |","lastModifiedDate":"2022-03-06"},{"lineNumber":307,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":308,"author":{"gitId":"yuqitanyq"},"content":"### Category: General Commands","lastModifiedDate":"2022-02-27"},{"lineNumber":309,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":310,"author":{"gitId":"yuqitanyq"},"content":"| Function                                   | Format Of Command                                                          |","lastModifiedDate":"2022-03-06"},{"lineNumber":311,"author":{"gitId":"yuqitanyq"},"content":"|--------------------------------------------|----------------------------------------------------------------------------|","lastModifiedDate":"2022-03-06"},{"lineNumber":312,"author":{"gitId":"yuqitanyq"},"content":"| **Clear all entries**                      | `clear`                                                                    |","lastModifiedDate":"2022-03-06"},{"lineNumber":313,"author":{"gitId":"yuqitanyq"},"content":"| **Exit the program**                       | `exit`                                                                     |","lastModifiedDate":"2022-03-06"},{"lineNumber":314,"author":{"gitId":"yuqitanyq"},"content":"| **Show message to help page**              | `help`                                                                     |","lastModifiedDate":"2022-03-06"},{"lineNumber":315,"author":{"gitId":"yuqitanyq"},"content":"| **Navigating the different patrons/books** | **Pressing the :arrow_up: and :arrow_down: arrows on keyboard :keyboard:** |","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yl-ang":18,"yuqitanyq":32,"-":170,"aditi2313":33,"bingsen0806":62}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"title: LibTask","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W14-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W14-1/tp/actions)","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-W14-1/tp/branch/master/graph/badge.svg?token\u003dXNUDJ0U08U)](https://codecov.io/gh/AY2122S2-CS2103T-W14-1/tp)","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"**LibTask** is a desktop application to allow librarians to keep track of book statuses and contact details of patrons who have borrowed them or requested for them. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"* If you are interested in using LibTask, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"* If you are interested about developing LibTask, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yl-ang":5,"-":14}},{"path":"docs/team/aditi2313.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"layout: page","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"title: Aditi Gupta\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"### Project: LibTask","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"LibTask is a desktop application used by librarians to keep track of books, overdue books, and contact details of patrons who have borrowed them and those who requested them. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on AddressBook - Level 3.","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"* **Project management**:","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    * User Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"* **Community**:","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"* **Tools**:","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"aditi2313":28}},{"path":"docs/team/bingsen0806.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"layout: page","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"title: Lim Bing Sen\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"### Project: LibTask","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"LibTask is a desktop application used by librarians to keep track of books, overdue books, and contact details of patrons who have borrowed them and those who requested them. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on AddressBook - Level 3.","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"### Summary of contributions","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"* **User Guide contribution**:","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"* **Developer Guide contribution**:","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"* **Team-based tasks contributions**:","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"  * Created team organization and setup CI/CD and workflow","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"  * Setup team repo, CodeCov, GitHub actions","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"  * Set target for milestone and manage milestone issues","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"* **Project management**:","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"* **Community**:","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"* **Tools**:","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"bingsen0806":30}},{"path":"docs/team/halpfrog.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Halpfrog"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"Halpfrog"},"content":"layout: page","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"Halpfrog"},"content":"title: Sarthak Pradhan\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"Halpfrog"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"Halpfrog"},"content":"### Project: LibTask","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"Halpfrog"},"content":"LibTask is a desktop application used by NUS libraries to keep track of books, overdue books, and contact details of patrons who have borrowed them and those who requested them.","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"Halpfrog"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on AddressBook - Level 3.","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"Halpfrog"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"Halpfrog"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"Halpfrog"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"Halpfrog"},"content":"* **Project management**:","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"Halpfrog"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"Halpfrog"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"Halpfrog"},"content":"  * User Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"Halpfrog"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"Halpfrog"},"content":"* **Community**:","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"Halpfrog"},"content":"* **Tools**:","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"Halpfrog":36}},{"path":"docs/team/yl-ang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"layout: page","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"title: Ang Yong Liang\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"### Project: LibTask","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"LibTask is a desktop application used by librarians to keep track of books, overdue books, and contact details of patrons who have borrowed them and those who requested them. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on AddressBook - Level 3.","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"* **Project management**:","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"    * User Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"* **Community**:","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"* **Tools**:","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"yl-ang":28}},{"path":"docs/team/yuqitanyq.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"layout: page","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"title: Tan Yu Qi\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"### Project: LibTask","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"LibTask is a desktop application used by librarians to keep track of books, overdue books, and contact details of patrons who have borrowed them and those who requested them. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on AddressBook - Level 3.","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yuqitanyq":12,"-":16}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookList;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    private final BookList books;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        books \u003d new BookList();","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"     * Replaces the contents of the book list with {@code books}.","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"    public void setBooks(List\u003cBook\u003e books) {","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        this.books.setBooks(books);","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        setBooks(newData.getBookList());","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if a book with the same identity as {@code book} exists in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasBook(Book book) {","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(book);","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        return books.contains(book);","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"     * Adds a book to the address book.","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"    public void addBook(Book book) {","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"        books.add(book);","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"     * Replaces the given book {@code target} in the list with {@code editedBook}.","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"    public void setBook(Book target, Book editedBook) {","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(editedBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"        books.setBook(target, editedBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"    public void removeBook(Book key) {","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"        books.remove(key);","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"    public ObservableList\u003cBook\u003e getBookList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"        return books.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 books.equals(((AddressBook) other).books));","lastModifiedDate":"2022-03-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"        return Objects.hash(persons, books);","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":118,"bingsen0806":54}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    Predicate\u003cBook\u003e PREDICATE_SHOW_ALL_BOOKS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if a book with the same identity as {@code book} exists in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"    boolean hasBook(Book book);","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"     * Deletes the given book.","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"     * The book must exist in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"    void deleteBook(Book target);","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"     * Adds the given book.","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"    void addBook(Book book);","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"     * Replaces the given book {@code target} with {@code editedBook}.","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"     * The book identity of {@code editedBook} must not be the same as another existing book in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"    void setBook(Book target, Book editedBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"    /** Returns an unmodifiable view of the filtered book list */","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"    ObservableList\u003cBook\u003e getFilteredBookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"     * Updates the filter of the filtered book list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"    void updateFilteredBookList(Predicate\u003cBook\u003e predicate);","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":87,"bingsen0806":34}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    private final FilteredList\u003cBook\u003e filteredBooks;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        filteredBooks \u003d new FilteredList\u003c\u003e(this.addressBook.getBookList());","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasBook(Book book) {","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(book);","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"        return addressBook.hasBook(book);","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"    public void deleteBook(Book target) {","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"        addressBook.removeBook(target);","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"    public void addBook(Book book) {","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"        addressBook.addBook(book);","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"        updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"    public void setBook(Book target, Book editedBook) {","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(target, editedBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"        addressBook.setBook(target, editedBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"     * Returns an unmodifiable view of the list of {@code Book} backed by the internal list of","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"    public ObservableList\u003cBook\u003e getFilteredBookList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"        return filteredBooks;","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"    public void updateFilteredBookList(Predicate\u003cBook\u003e predicate) {","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"        filteredBooks.setPredicate(predicate);","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":189,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-03-10"},{"lineNumber":190,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 filteredBooks.equals(other.filteredBooks);","lastModifiedDate":"2022-03-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":149,"bingsen0806":44}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"     * Returns an unmodifiable view of the books list.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    ObservableList\u003cBook\u003e getBookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":17,"bingsen0806":5}},{"path":"src/main/java/seedu/address/model/book/Author.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":" * Represents a Author in LibTask.","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAuthor(String)}","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"public class Author {","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"            \"Author names should only contain alphanumeric characters, spaces and dot, \"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"            + \"and it should not be blank, and it must start with an alphanumeric character.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    /*","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"     * The name should also contain at least one alphanumeric character,","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"     * and contains no non-alphanumeric characters other than the dot character.","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} .]*\";","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    public final String fullAuthorName;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a {@code AuthorName}.","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"     * @param name A valid author name.","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    public Author(String name) {","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        checkArgument(isValidAuthor(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        fullAuthorName \u003d name;","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if a given string can be converted to a valid author.","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    public static boolean isValidAuthor(String test) {","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        return fullAuthorName;","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"            || (other instanceof Author // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"            \u0026\u0026 fullAuthorName.equals(((Author) other).fullAuthorName)); // state check","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":55}},{"path":"src/main/java/seedu/address/model/book/Book.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":" * Represents a Book in LibTask.","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"public class Book {","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    // Identity fields","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    private final BookName bookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    private final Isbn isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    // Data fields","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    private final List\u003cAuthor\u003e authors \u003d new ArrayList\u003cAuthor\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    public Book(BookName bookName, Isbn isbn, List\u003cAuthor\u003e authors, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(bookName, isbn, authors, tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        this.bookName \u003d bookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        this.isbn \u003d isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        this.authors.addAll(authors);","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    public BookName getBookName() {","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        return bookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    public Isbn getIsbn() {","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        return isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    public List\u003cAuthor\u003e getAuthors() {","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        return Collections.unmodifiableList(authors);","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if both books have the same isbn.","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"     * This defines a weaker notion of equality between two books.","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"    public boolean isSameBook(Book otherBook) {","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        if (otherBook \u003d\u003d this) {","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"            return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        return otherBook !\u003d null","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 otherBook.getIsbn().equals(getIsbn());","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if both books have the same identity and data fields.","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"     * This defines a stronger notion of equality between two books.","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"            return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"        if (!(other instanceof Book)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"        Book otherBook \u003d (Book) other;","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        return otherBook.getBookName().equals(getBookName())","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 otherBook.getAuthors().equals(getAuthors())","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 otherBook.getTags().equals(getTags())","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 otherBook.getIsbn().equals(getIsbn());","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        return Objects.hash(bookName, isbn, authors, tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"        builder.append(getBookName())","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"                .append(\"; Isbn: \")","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"                .append(getIsbn());","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"        List\u003cAuthor\u003e authors \u003d getAuthors();","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"        if (!authors.isEmpty()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"            builder.append(\"; Authors: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"            authors.forEach(builder::append);","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":118}},{"path":"src/main/java/seedu/address/model/book/BookList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":" * A list of persons that does not allow nulls.","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":" *","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"public class BookList implements Iterable\u003cBook\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    private final ObservableList\u003cBook\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    private final ObservableList\u003cBook\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if the list contains an equivalent book as the given argument.","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"     * Equivalence is defined based on {@link Book#isSameBook(Book)}","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"     * @param toCheck The book to be checked.","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    public boolean contains(Book toCheck) {","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        return internalList.stream().anyMatch(toCheck::isSameBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"     * Adds a book to the list.","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    public void add(Book book) {","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(book);","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        internalList.add(book);","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"     * Replaces the book {@code target} in the list with {@code editedBook}.","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    public void setBook(Book target, Book editedBook) {","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(target, editedBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"            throw new BookNotFoundException();","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        internalList.set(index, editedBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"     * Removes the equivalent book from the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"     * The book must exist in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    public void remove(Book toRemove) {","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"            throw new BookNotFoundException();","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"    public void setBooks(BookList replacement) {","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"     * Replaces the contents of this list with {@code books}.","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"     * {@code books} must not contain duplicate books.","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"    public void setBooks(List\u003cBook\u003e books) {","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(books);","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"        internalList.setAll(books);","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"    public ObservableList\u003cBook\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"    public Iterator\u003cBook\u003e iterator() {","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"                || (other instanceof BookList // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 internalList.equals(((BookList) other).internalList));","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":106}},{"path":"src/main/java/seedu/address/model/book/BookName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":" * Represents a Book\u0027s name in LibTask.","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBookName(String)}","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"public class BookName {","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"            \"Book names should only contain alphanumeric characters and spaces, \"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"        + \"and it should not be blank, and it must start with an alphanumeric character.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    /*","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"     * The name should also contain at least one alphanumeric character,","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"     * and contains no non-alphanumeric characters other than \u0027 character and : character.","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} \\\\\u0027\\\\:]*\";","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    public final String fullBookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a {@code BookName}.","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"     * @param bookname A valid book name.","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    public BookName(String bookname) {","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(bookname);","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        checkArgument(isValidBookName(bookname), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        fullBookName \u003d bookname;","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if a given string is a valid book name.","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    public static boolean isValidBookName(String test) {","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        return fullBookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"                || (other instanceof BookName) //instanceof handle nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 fullBookName.equals(((BookName) other).fullBookName);","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        return fullBookName.hashCode();","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":59}},{"path":"src/main/java/seedu/address/model/book/Isbn.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"public class Isbn {","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"    public static final String SPECIAL_CHARACTERS \u003d \"-\";","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Isbn should adhere to the following constraints:\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"            + \"1. Contain only digits and at most one \\\"\" + SPECIAL_CHARACTERS + \"\\\" character between digits,\"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"            + \" and must start and end with digit characters.\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"            + \"2. Contain exactly 10 digits or 13 digits\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"            + \"3. For 10-digit Isbn, the sum of [position]x[digit at position] must be divisible by 11\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"            + \"4. For 13-digit Isbn, the digits must start with 978 or 979, and have correct check sum.\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"            + \"The check sum:\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"            + \"    - is defined as [weight of position]x[digit at position] and must be divisible by 10\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"            + \"    - weight is 1 if position is odd and 3 otherwise\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"            + \"5. Position is the 1-based index of the digit in the isbn input after removal of \\\"\"","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"            + SPECIAL_CHARACTERS + \"\\\" character.\\n\";","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALIDATION_REGEX_ISBN \u003d \"^[0-9]+(-?[0-9]+)+$\";","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    private static final int ISBN10_CHECKSUM_DIVIDER \u003d 11;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    private static final int ISBN13_CHECKSUM_DIVIDER \u003d 10;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    private static final int ISBN10_LENGTH \u003d 10;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    private static final int ISBN13_LENGTH \u003d 13;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    private static final int ISBN13_VALID_PREFIX1 \u003d 978;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    private static final int ISBN13_VALID_PREFIX2 \u003d 979;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    private final String isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a {@code Isbn}","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"     * @param isbn A valid isbn.","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    public Isbn(String isbn) {","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(isbn);","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        checkArgument(isValidIsbn(isbn), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        this.isbn \u003d isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if a given string is a valid isbn.","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    public static boolean isValidIsbn(String test) {","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        if (!test.matches(VALIDATION_REGEX_ISBN)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        String isbnWithoutHyphen \u003d removeHyphen(test);","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        if (isbnWithoutHyphen.length() \u003d\u003d ISBN10_LENGTH) {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"            return isValidIsbn10(isbnWithoutHyphen);","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        if (isbnWithoutHyphen.length() \u003d\u003d ISBN13_LENGTH) {","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"            return isValidIsbn13(isbnWithoutHyphen);","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"    private static String removeHyphen(String fullIsbn) {","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        String[] isbnParts \u003d fullIsbn.split(\"-\");","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        StringBuilder isbnWithoutHyphen \u003d new StringBuilder();","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        for (String substring: isbnParts) {","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"            isbnWithoutHyphen.append(substring);","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        return isbnWithoutHyphen.toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"    private static boolean isValidIsbn10(String isbnWithoutHyphen) {","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        assert isbnWithoutHyphen.length() \u003d\u003d ISBN10_LENGTH : \"isbn length is not correct.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        int checkSum \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        for (int i \u003d 0; i \u003c ISBN10_LENGTH; i++) {","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"            int weight \u003d ISBN10_LENGTH - i;","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"            int digitAtPosition \u003d Integer.parseInt(isbnWithoutHyphen.substring(i, i + 1));","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"            checkSum +\u003d weight * digitAtPosition;","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        return checkSum % ISBN10_CHECKSUM_DIVIDER \u003d\u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"    private static boolean isValidIsbn13(String isbnWithoutHyphen) {","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"        assert isbnWithoutHyphen.length() \u003d\u003d ISBN13_LENGTH : \"isbn length is not correct.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        // Checks for valid prefix","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        int prefix \u003d Integer.parseInt(isbnWithoutHyphen.substring(0, 3));","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"        boolean hasValidPrefix \u003d prefix \u003d\u003d ISBN13_VALID_PREFIX1 || prefix \u003d\u003d ISBN13_VALID_PREFIX2;","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        // Checks for valid check sum","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        int checkSum \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        for (int i \u003d 0; i \u003c ISBN13_LENGTH; i++) {","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"            // weights alternate between 1 and 3 according to Isbn standards","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"            int weight \u003d i % 2 \u003d\u003d 0 ? 1 : 3;","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"            int digitAtPosition \u003d Integer.parseInt(isbnWithoutHyphen.substring(i, i + 1));","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"            checkSum +\u003d weight * digitAtPosition;","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        boolean hasValidCheckSum \u003d checkSum % ISBN13_CHECKSUM_DIVIDER \u003d\u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        return hasValidPrefix \u0026\u0026 hasValidCheckSum;","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"        return isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"                || (other instanceof Isbn // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 removeHyphen(isbn).equals(removeHyphen(((Isbn) other).isbn))); // state check","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":113}},{"path":"src/main/java/seedu/address/model/book/exceptions/BookNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book.exceptions;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":" * Signals that the operation is unable to find the specified book.","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"public class BookNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    public static Book[] getSampleBooks() {","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        return new Book[] {","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"            new Book(new BookName(\"Harry Potter and The Philosopher\u0027s Stone\"), new Isbn(\"978-71617-018-8-5\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"                getAuthorList(\"J. K. Rowling\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"Adventure\", \"Magic\")),","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"            new Book(new BookName(\"The Hunger Games: MockingJay\"), new Isbn(\"9786029293883\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"                getAuthorList(\"Suzanne Collins\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"Thriller\", \"Scifi\", \"Adventure\")),","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"            new Book(new BookName(\"Introduction to Algorithms\"), new Isbn(\"978-03-71-88850-6\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"                getAuthorList(\"Cormen\", \"Leiserson\", \"Rivest\", \"Stein\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"ComputerScience\", \"Mathematics\")),","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"            new Book(new BookName(\"The Little Book of Semaphores\"), new Isbn(\"4992719864\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"                getAuthorList(),","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"ComputerScience\", \"Technology\")),","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"            new Book(new BookName(\"The Maze Runner\"), new Isbn(\"1-474-59282-1\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"                getAuthorList(\"James Dashner1\", \"James Dashner2\", \"James Dashner3\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"Adventure\", \"Romance\", \"Scifi\")),","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"            new Book(new BookName(\"Artificial Intelligence: A Modern Approach\"), new Isbn(\"9780131038059\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"                getAuthorList(\"Peter Norvig\", \"Stuart J. Russell\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"Technology\")),","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"            new Book(new BookName(\"Cinderella\"), new Isbn(\"9781409580454\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"                getAuthorList(),","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"                getTagSet())","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        };","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"        for (Book sampleBook : getSampleBooks()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"            sampleAb.addBook(sampleBook);","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"     * Returns a list of authors containing the list of strings given.","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"    public static ArrayList\u003cAuthor\u003e getAuthorList(String... strings) {","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"                .map(Author::new)","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"-":60,"bingsen0806":42}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAuthor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":" * Jackson-friendly version of {@link Author}.","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"public class JsonAdaptedAuthor {","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    private final String authorName;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a {@code JsonAdaptedAuthor} with the given {@code authorName}.","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    public JsonAdaptedAuthor(String authorName) {","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"        this.authorName \u003d authorName;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"     * Converts a given {@code Author} into this class for Jackson use.","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    public JsonAdaptedAuthor(Author source) {","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        authorName \u003d source.fullAuthorName;","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    @JsonValue","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    public String getTagName() {","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        return authorName;","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"     * Converts this Jackson-friendly adapted author object into the model\u0027s {@code Author} object.","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted author.","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    public Author toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        if (!Author.isValidAuthor(authorName)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(Author.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        return new Author(authorName);","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":49}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":" * Jackson-friendly version of {@link Book}.","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"class JsonAdaptedBook {","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Book\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    private final String isbn;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    private final String bookName;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    private final List\u003cJsonAdaptedAuthor\u003e authors \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    public JsonAdaptedBook(@JsonProperty(\"bookName\") String bookName, @JsonProperty(\"isbn\") String isbn,","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        @JsonProperty(\"authors\") List\u003cJsonAdaptedAuthor\u003e authors) {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        this.bookName \u003d bookName;","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        this.isbn \u003d isbn;","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        if (authors !\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"            this.authors.addAll(authors);","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"     * Converts a given {@code Book} into this class for Jackson use.","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    public JsonAdaptedBook(Book source) {","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        bookName \u003d source.getBookName().fullBookName;","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        isbn \u003d source.getIsbn().toString();","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        authors.addAll(source.getAuthors().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"                .map(JsonAdaptedAuthor::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"     * Converts this Jackson-friendly adapted book object into the model\u0027s {@code Book} object.","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted book.","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    public Book toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        final List\u003cTag\u003e bookTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"            bookTags.add(tag.toModelType());","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        final List\u003cAuthor\u003e bookAuthors \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        for (JsonAdaptedAuthor author : authors) {","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"            bookAuthors.add(author.toModelType());","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        if (bookName \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"                BookName.class.getSimpleName()));","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"        if (!Name.isValidName(bookName)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(BookName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"        final BookName modelName \u003d new BookName(bookName);","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        if (isbn \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Isbn.class.getSimpleName()));","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"        if (!Isbn.isValidIsbn(isbn)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"        final Isbn modelIsbn \u003d new Isbn(isbn);","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(bookTags);","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"        return new Book(modelName, modelIsbn, bookAuthors, modelTags);","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":98}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    private final List\u003cJsonAdaptedBook\u003e books \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"                                       @JsonProperty(\"books\") List\u003cJsonAdaptedBook\u003e books) {","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        this.books.addAll(books);","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        books.addAll(source.getBookList().stream().map(JsonAdaptedBook::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        for (JsonAdaptedBook jsonAdaptedBook : books) {","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"            Book book \u003d jsonAdaptedBook.toModelType();","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"            addressBook.addBook(book);","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":59,"bingsen0806":10}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"        public void addBook(Book book) {","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"        public boolean hasBook(Book book) {","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"        public void deleteBook(Book target) {","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"        public void setBook(Book target, Book editedBook) {","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":173,"author":{"gitId":"bingsen0806"},"content":"        public ObservableList\u003cBook\u003e getFilteredBookList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":177,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"        public void updateFilteredBookList(Predicate\u003cBook\u003e predicate) {","lastModifiedDate":"2022-03-10"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"-":194,"bingsen0806":31}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_BOOK_NAME_HARRY_POTTER \u003d \"Harry Potter and The Philosopher\u0027s Stone\";","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_BOOK_NAME_HUNGER_GAMES \u003d \"The Hunger Games: MockingJay\";","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_ISBN_HARRY_POTTER \u003d \"978-71617-018-8-5\";","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_ISBN_HARRY_POTTER_2 \u003d \"9787161701885\";","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_ISBN_HUNGER_GAMES \u003d \"9786029293883\";","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_AUTHOR_JK_ROWLING \u003d \"J. K. Rowling\";","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_AUTHOR_SUZANNE_COLLINS \u003d \"Suzanne Collins\";","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_TAG_ADVENTURE \u003d \"Adventure\";","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_TAG_MAGIC \u003d \"Magic\";","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_TAG_THRILLER \u003d \"Thriller\";","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_TAG_SCIFI \u003d \"Scifi\";","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":128,"bingsen0806":12}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"        private final ObservableList\u003cBook\u003e books \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003cBook\u003e books) {","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"            this.books.setAll(books);","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"        public ObservableList\u003cBook\u003e getBookList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"            return books;","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"-":100,"bingsen0806":11}},{"path":"src/test/java/seedu/address/model/book/AuthorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"public class AuthorTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Author(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Author(invalidName));","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    public void isValidAuthor() {","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"        // null author","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e Author.isValidAuthor(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"        // invalid author","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Author.isValidAuthor(\"\")); // empty string","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Author.isValidAuthor(\" \")); // spaces only","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Author.isValidAuthor(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Author.isValidAuthor(\"J\u0026KRowling\")); // contains non-alphanumeric character that is not dot","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Author.isValidAuthor(\" JKRowling\")); // starts with non-alphanumeric character","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        // valid author","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Author.isValidAuthor(\"jkrowling\")); //alphabets only","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Author.isValidAuthor(\"123\")); // numbers only","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Author.isValidAuthor(\"Queen Elizabeth 1\")); // alphanumeric characters","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Author.isValidAuthor(\"J.K.Rowling\")); // with dot character","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":40}},{"path":"src/test/java/seedu/address/model/book/BookListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HUNGER_GAMES;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SCIFI;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.HARRY_POTTER;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.HUNGER_GAMES;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"public class BookListTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    private final BookList bookList \u003d new BookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    public void contains_nullBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.contains(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    public void contains_bookNotInList_returnsFalse() {","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(bookList.contains(HARRY_POTTER));","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    public void contains_bookInList_returnsTrue() {","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(bookList.contains(HARRY_POTTER));","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        Book editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withName(VALID_BOOK_NAME_HUNGER_GAMES)","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"                .withAuthors(VALID_AUTHOR_SUZANNE_COLLINS)","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"                .withTags(VALID_TAG_SCIFI)","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"                .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(bookList.contains(editedHarryPotter));","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"    public void add_nullBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.add(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    public void setBook_nullTargetBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.setBook(null, HARRY_POTTER));","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    public void setBook_nullEditedBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.setBook(HARRY_POTTER, null));","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    public void setBook_targetBookNotInList_throwsBookNotFoundException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(BookNotFoundException.class, () -\u003e bookList.setBook(HARRY_POTTER, HARRY_POTTER));","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    public void setBook_editedBookIsSameBook_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        bookList.setBook(HARRY_POTTER, HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedBookList, bookList);","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"    public void setBook_editedBookHasSameIdentity_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        Book editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withAuthors(VALID_AUTHOR_SUZANNE_COLLINS)","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"                .withTags(VALID_TAG_SCIFI)","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"                .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        bookList.setBook(HARRY_POTTER, editedHarryPotter);","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(editedHarryPotter);","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedBookList, bookList);","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"    public void setBook_editedBookHasDifferentIdentity_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        bookList.setBook(HARRY_POTTER, HUNGER_GAMES);","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(HUNGER_GAMES);","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedBookList, bookList);","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"    public void remove_nullBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.remove(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"    public void remove_bookDoesNotExist_throwsBookNotFoundException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(BookNotFoundException.class, () -\u003e bookList.remove(HARRY_POTTER));","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"    public void remove_existingBook_removesBook() {","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"        bookList.remove(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedBookList, bookList);","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"    public void setBooks_nullBookList_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.setBooks((BookList) null));","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"    public void setBooks_bookList_replacesOwnListWithProvidedBookList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(HUNGER_GAMES);","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"        bookList.setBooks(expectedBookList);","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedBookList, bookList);","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"    public void setBooks_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.setBooks((List\u003cBook\u003e) null));","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"    public void setBooks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"        List\u003cBook\u003e listOfBooks \u003d Collections.singletonList(HUNGER_GAMES);","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"        bookList.setBooks(listOfBooks);","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(HUNGER_GAMES);","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedBookList, bookList);","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"            -\u003e bookList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":153}},{"path":"src/test/java/seedu/address/model/book/BookNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"public class BookNameTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e new BookName(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BookName(invalidName));","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    public void isValidBookName() {","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"        // null book name","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e BookName.isValidBookName(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"        // invalid book name","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(BookName.isValidBookName(\"\")); // empty string","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(BookName.isValidBookName(\" \")); // spaces only","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(BookName.isValidBookName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(BookName.isValidBookName(\"Harry\u0026Potter\")); // contains non-alphanumeric characters not : or \u0027","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(BookName.isValidBookName(\" HarryPotter\")); // starts with non-alphanumeric character","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        // valid name","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(BookName.isValidBookName(\"Harry Potter\")); //alphabets only","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(BookName.isValidBookName(\"123\")); // numbers only","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(BookName.isValidBookName(\"Harry Potter 2\")); // alphanumeric characters","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(BookName.isValidBookName(\"Harry Potter 1 The Philosopher\u0027s Stone\")); // with \u0027 character","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(BookName.isValidBookName(\"Algorithms: 1st Edition\")); // with : character","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":42}},{"path":"src/test/java/seedu/address/model/book/BookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HUNGER_GAMES;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HARRY_POTTER_2;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HUNGER_GAMES;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SCIFI;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.HARRY_POTTER;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.SEMAPHORE;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"public class BookTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"        Book book \u003d new BookBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e book.getTags().remove(0));","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    public void isSameBook() {","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(HARRY_POTTER.isSameBook(HARRY_POTTER));","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.isSameBook(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        // same isbn, all other attributes different -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        Book editedAlice \u003d new BookBuilder(HARRY_POTTER).withName(VALID_BOOK_NAME_HUNGER_GAMES)","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"                .withAuthors(VALID_AUTHOR_SUZANNE_COLLINS)","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"                .withTags(VALID_TAG_SCIFI).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(HARRY_POTTER.isSameBook(editedAlice));","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        // different isbn, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        editedAlice \u003d new BookBuilder(HARRY_POTTER).withIsbn(VALID_ISBN_HUNGER_GAMES).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.isSameBook(editedAlice));","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    public void equals() {","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        Book harryPotterCopy \u003d new BookBuilder(HARRY_POTTER).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(HARRY_POTTER.equals(harryPotterCopy));","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(HARRY_POTTER.equals(HARRY_POTTER));","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.equals(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.equals(5));","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        // different book -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.equals(SEMAPHORE));","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        Book editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withName(VALID_BOOK_NAME_HUNGER_GAMES).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        // different isbn -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withIsbn(VALID_ISBN_HUNGER_GAMES).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        // same isbn but different hyphen positions -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withIsbn(VALID_ISBN_HARRY_POTTER_2).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withTags(VALID_TAG_SCIFI).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":79}},{"path":"src/test/java/seedu/address/model/book/IsbnTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"public class IsbnTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Isbn(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Isbn(invalidName));","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    public void isValidIsbn_invalidFormat_returnsFalse() {","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"        // null isbn","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e Isbn.isValidIsbn(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"        // isbn with invalid string pattern","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"\")); // empty string","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\" \")); // spaces only","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"false\")); // contains non-numeric characters that are not hyphen","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"978--71617-018-8-5\")); // contains consecutive hyphen characters","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"-978-71617-018-8-5\")); // starts with non-numeric character","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"978-71617-018-8-5-\")); // ends with non-numeric character","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"978-71617-018-8-4\")); // wrong check sum for ISBN13 format","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"17-18-13730-4\")); // wrong check sum for ISBN10 format","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"980-71617-018-8-4\")); // does not start with 978 or 979 for ISBN13 format","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"978-71617-0184\")); // wrong number of digits","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    public void isValidIsbn_validFormat_returnsTrue() {","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Isbn.isValidIsbn(\"978-71617-018-8-5\")); // ISBN13 with hyphen","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Isbn.isValidIsbn(\"9787161701885\")); // ISBN13 without hyphen","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Isbn.isValidIsbn(\"17-18-13730-3\")); // ISBN10 with hyphen","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Isbn.isValidIsbn(\"1718137303\")); // ISBN10 without hyphen","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Isbn.isValidIsbn(\"97-971617-018-8-4\")); // ISBN13 starting with 979","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":48}},{"path":"src/test/java/seedu/address/testutil/BookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":" * A utility class to help with building Book objects.","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"public class BookBuilder {","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    public static final String DEFAULT_NAME \u003d \"Harry Potter\";","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    public static final String DEFAULT_ISBN \u003d \"9780747532743\";","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    private BookName bookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    private Isbn isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    private List\u003cAuthor\u003e authors;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"     * Creates a {@code BookBuilder} with the default details.","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder() {","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        bookName \u003d new BookName(DEFAULT_NAME);","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        isbn \u003d new Isbn(DEFAULT_ISBN);","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        authors \u003d new ArrayList\u003cAuthor\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        tags \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"     * Initializes the BookBuilder with the data of {@code bookToCopy}.","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder(Book bookToCopy) {","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        bookName \u003d bookToCopy.getBookName();","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        isbn \u003d bookToCopy.getIsbn();","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        authors \u003d new ArrayList\u003cAuthor\u003e(bookToCopy.getAuthors());","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        tags \u003d new HashSet\u003cTag\u003e(bookToCopy.getTags());","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"     * Sets the {@code BookName} of the {@code Book} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder withName(String bookName) {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        this.bookName \u003d new BookName(bookName);","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"     * Parses the {@code authors} into a {@code List\u003cAuthor\u003e} and set it to the {@code Book} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder withAuthors(String ... authors) {","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        this.authors \u003d SampleDataUtil.getAuthorList(authors);","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Book} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder withTags(String ... tags) {","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"     * Sets the {@code Isbn} of the {@code Book} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder withIsbn(String isbn) {","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        this.isbn \u003d new Isbn(isbn);","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"    public Book build() {","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"        return new Book(bookName, isbn, authors, tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":83}},{"path":"src/test/java/seedu/address/testutil/TypicalBooks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_JK_ROWLING;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HARRY_POTTER;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HUNGER_GAMES;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HARRY_POTTER;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HUNGER_GAMES;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_ADVENTURE;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MAGIC;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SCIFI;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_THRILLER;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"public class TypicalBooks {","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    public static final Book ALGORITHM \u003d new BookBuilder().withName(\"Introduction to Algorithms\")","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(\"978-03-71-88850-6\").withAuthors(\"Cormen\", \"Leiserson\", \"Rivest\", \"Stein\")","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"            .withTags(\"ComputerScience\", \"Mathematics\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    public static final Book SEMAPHORE \u003d new BookBuilder().withName(\"The Little Book of Semaphores\")","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(\"4992719864\")","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"            .withTags(\"ComputerScience\", \"Technology\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    public static final Book MAZE_RUNNER \u003d new BookBuilder().withName(\"The Maze Runner\")","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(\"1-474-59282-1\")","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"            .withAuthors(\"James Dashner1\", \"James Dashner2\", \"James Dashner3\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    public static final Book AI \u003d new BookBuilder().withName(\"Artificial Intelligence: A Modern Approach\")","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(\"9780131038059\")","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"            .withAuthors(\"Peter Norvig\", \"Stuart J. Russell\")","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"            .withTags(\"Technology\")","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"            .build();","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    public static final Book CINDERELLA \u003d new BookBuilder().withName(\"Cinderella\")","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(\"9781409580454\")","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"            .build();","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    // Manually added - Book\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    public static final Book HARRY_POTTER \u003d new BookBuilder().withName(VALID_BOOK_NAME_HARRY_POTTER)","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(VALID_ISBN_HARRY_POTTER)","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"            .withAuthors(VALID_AUTHOR_JK_ROWLING)","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"            .withTags(VALID_TAG_ADVENTURE, VALID_TAG_MAGIC).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    public static final Book HUNGER_GAMES \u003d new BookBuilder().withName(VALID_BOOK_NAME_HUNGER_GAMES)","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(VALID_ISBN_HUNGER_GAMES)","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"            .withAuthors(VALID_AUTHOR_SUZANNE_COLLINS)","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"            .withTags(VALID_TAG_THRILLER, VALID_TAG_SCIFI, VALID_TAG_ADVENTURE).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    private TypicalBooks() {} // prevents instantiation","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        for (Book book : getTypicalBooks()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"            ab.addBook(book);","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        return ab;","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    public static List\u003cBook\u003e getTypicalBooks() {","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALGORITHM, SEMAPHORE, MAZE_RUNNER, AI, CINDERELLA));","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":70}}]
