[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"seanlaiys"},"content":"# Project: camNUS","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"seanlaiys"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W13-2/tp/actions) ","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"seanlaiys"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-W13-2/tp/branch/master/graph/badge.svg?token\u003d6C0U9C1K7K)](https://codecov.io/gh/AY2122S2-CS2103T-W13-2/tp)","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"seanlaiys"},"content":"### Introduction","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"seanlaiys"},"content":"camNUS is a **desktop app** for Teaching Assistants (TAs) to **manage their own contacts, as well as assessments and class participation among students** in their contact book. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"seanlaiys"},"content":"### Getting Started","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"seanlaiys"},"content":"Learn how to get started with **camNUS** by going to the Quick Start section of the [**User Guide**](https://ay2122s2-cs2103t-w13-2.github.io/tp/UserGuide.html#quick-start).","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"seanlaiys"},"content":"### Contributing to camNUS","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"seanlaiys"},"content":"For more information on how to contribute code to our project, see our [**Developer Guide**](https://ay2122s2-cs2103t-w13-2.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"seanlaiys"},"content":"### About the Team","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"seanlaiys"},"content":"If you wish to know more about the team behind camNUS, find us [**here**](https://ay2122s2-cs2103t-w13-2.github.io/tp/AboutUs.html)!","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"seanlaiys"},"content":"### Acknowledgements","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"seanlaiys"},"content":"* This project is based on the AddressBook-Level3 project created by the SE-EDU initiative.","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"seanlaiys"},"content":"* Libraries used: [**JavaFx**](https://openjfx.io/), [**Jackson**](https://github.com/FasterXML/jackson), [**JUnit5**](https://github.com/junit-team/junit5)","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"seanlaiys":19,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"### Nguyen Hong Anh","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"\u003cimg src\u003d\"images/honganhcs.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"[[github](http://github.com/honganhcs)]","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"[[portfolio](team/honganhcs.md)]","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"* Role: Developer","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"### Quek Wenjie Kevin","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"kev-intq"},"content":"\u003cimg src\u003d\"images/kev-intq.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"kev-intq"},"content":"[[github](http://github.com/kev-intq)] [[portfolio](team/kev-intq.md)]","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"kev-intq"},"content":"* Responsibilities: Front-end","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"seanlaiys"},"content":"### Lai Yuen Sheng","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"seanlaiys"},"content":"\u003cimg src\u003d\"images/seanlaiys.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"seanlaiys"},"content":"[[github](http://github.com/seanlaiys)]","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"seanlaiys"},"content":"[[portfolio](team/seanlaiys.md)]","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"seanlaiys"},"content":"* Responsibilities: Code Quality + Testing","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"zixin448"},"content":"### Yong Zi Xin","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"zixin448"},"content":"\u003cimg src\u003d\"images/zixin448.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"zixin448"},"content":"[[github](http://github.com/zixin448)]","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"zixin448"},"content":"[[portfolio](team/zixin448.md)]","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"zixin448"},"content":"* Responsibilities: Deliverables and deadlines","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"garethkoh"},"content":"### Gareth Koh Sheng","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"garethkoh"},"content":"\u003cimg src\u003d\"images/garethkoh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"garethkoh"},"content":"[[github](http://github.com/garethkoh)]","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"garethkoh"},"content":"[[portfolio](team/garethkoh.md)]","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-02-26"},{"lineNumber":59,"author":{"gitId":"garethkoh"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"honganhcs":6,"zixin448":5,"kev-intq":4,"seanlaiys":5,"-":34,"garethkoh":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"garethkoh"},"content":"## **Introduction**","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"garethkoh"},"content":"### **Purpose**","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"garethkoh"},"content":"This document specifies architecture and software design decisions for the application, CamNUS. ","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"garethkoh"},"content":"CamNUS (Continuous Assessment Manager NUS) is an application for Teaching Assistants to manage their classes and keep ","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"garethkoh"},"content":"track of the graded components of a module such as class participation, assignments and exams.","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"garethkoh"},"content":"### **Scope**","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"garethkoh"},"content":"This describes the software architecture and software design decisions for the implementation","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"garethkoh"},"content":"of CamNUS. The intended audience of this document is the developers, designers, and","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"garethkoh"},"content":"software testers of CamNUS.","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"garethkoh"},"content":"### **Design Goals**","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"garethkoh"},"content":"#### **Maintainability**","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"garethkoh"},"content":"With a team of developers working on a project, it is important that developers are able to change one","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"garethkoh"},"content":"component of the project without needing to change many components that other developers","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"garethkoh"},"content":"may be working on.","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"garethkoh"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":286,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"garethkoh"},"content":"* TAs of modules that require class participation, and/or have regular submissions.","lastModifiedDate":"2022-02-26"},{"lineNumber":288,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":289,"author":{"gitId":"garethkoh"},"content":"**Value proposition**:","lastModifiedDate":"2022-02-26"},{"lineNumber":290,"author":{"gitId":"garethkoh"},"content":"* manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-02-26"},{"lineNumber":291,"author":{"gitId":"garethkoh"},"content":"* Systematic and convenient way to manage assessments and class participation among students based on their contacts.","lastModifiedDate":"2022-02-26"},{"lineNumber":292,"author":{"gitId":"garethkoh"},"content":"* Address book contains contacts of all students in class.","lastModifiedDate":"2022-02-26"},{"lineNumber":293,"author":{"gitId":"garethkoh"},"content":"  Features can include special remarks, class participation fulfilled, assignment submitted, attendance.","lastModifiedDate":"2022-02-26"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"garethkoh"},"content":"| No. | Priority | As a                                                | I can                                                                                                                          | So that I can                                                                                                        |","lastModifiedDate":"2022-02-26"},{"lineNumber":302,"author":{"gitId":"garethkoh"},"content":"|-----|----------|-----------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-02-27"},{"lineNumber":303,"author":{"gitId":"garethkoh"},"content":"| 1   | `*`      | potential user who just launched the app to explore | see a brief instruction to guide me on getting started with the app                                                            | know what I can do in the app.                                                                                       |","lastModifiedDate":"2022-02-26"},{"lineNumber":304,"author":{"gitId":"garethkoh"},"content":"| 2   | `*`      | beginner user                                       | see sample classes on my list                                                                                                  | try out the features without adding my own classes first.                                                            |","lastModifiedDate":"2022-02-26"},{"lineNumber":305,"author":{"gitId":"garethkoh"},"content":"| 3   | `***`    | forgetful beginner user                             | see a help manual with the list of commands available                                                                          | refer to them to use the command I need.                                                                             |","lastModifiedDate":"2022-02-26"},{"lineNumber":306,"author":{"gitId":"garethkoh"},"content":"| 4   | `***`    | beginner user                                       | add classes to the list                                                                                                        | have an organized list of classes under my charge.                                                                   |","lastModifiedDate":"2022-02-26"},{"lineNumber":307,"author":{"gitId":"garethkoh"},"content":"| 5   | `***`    | beginner user                                       | remove classes from the list of classes                                                                                        | so that I can delete any unavailable classes after the semester have ended                                           |","lastModifiedDate":"2022-03-02"},{"lineNumber":308,"author":{"gitId":"garethkoh"},"content":"| 6   | `***`    | beginner user                                       | add the contacts of my students to their respective classes                                                                    | have a list of the students in each of my classes.                                                                   |","lastModifiedDate":"2022-03-02"},{"lineNumber":309,"author":{"gitId":"garethkoh"},"content":"| 7   | `***`    | beginner user                                       | remove any contact from a class or a module                                                                                    |                                                                                                                      |","lastModifiedDate":"2022-03-02"},{"lineNumber":310,"author":{"gitId":"garethkoh"},"content":"| 8   | `***`    | beginner user                                       | edit the details of each student in a particular class                                                                         | quickly update or correct the student’s details.                                                                     |","lastModifiedDate":"2022-03-02"},{"lineNumber":311,"author":{"gitId":"garethkoh"},"content":"| 9   | `***`    | beginner user                                       | search for and view each student’s contact based on their name                                                                 | easily contact them when needed.                                                                                     |","lastModifiedDate":"2022-03-02"},{"lineNumber":312,"author":{"gitId":"garethkoh"},"content":"| 10  | `***`    | beginner user                                       | view the list of the classes added with their basic information                                                                | refer to the classes that I am in charge of.                                                                         |","lastModifiedDate":"2022-03-02"},{"lineNumber":313,"author":{"gitId":"garethkoh"},"content":"| 11  | `***`    | beginner user                                       | see the list of students in my classes                                                                                         | so that I can keep track which student has been added into my classes.                                               |","lastModifiedDate":"2022-03-02"},{"lineNumber":314,"author":{"gitId":"garethkoh"},"content":"| 12  | `**`     | beginner user                                       | view class details and statistics                                                                                              | manage my class                                                                                                      |","lastModifiedDate":"2022-03-02"},{"lineNumber":315,"author":{"gitId":"garethkoh"},"content":"| 13  | `***`    | beginner user                                       | add the module’s assessment components and their details (e.g. type, scale, deadline, etc.)                                    | keep track of my students’ performance for each component.                                                           |","lastModifiedDate":"2022-03-02"},{"lineNumber":316,"author":{"gitId":"garethkoh"},"content":"| 14  | `***`    | beginner user                                       | delete an assessment component                                                                                                 | remove irrelevant assessment components                                                                              |","lastModifiedDate":"2022-03-02"},{"lineNumber":317,"author":{"gitId":"garethkoh"},"content":"| 15  | `*`      | beginner user                                       | edit the details of an assessment component such as weightage                                                                  | quickly update or correct the information about the component.                                                       |","lastModifiedDate":"2022-03-02"},{"lineNumber":318,"author":{"gitId":"garethkoh"},"content":"| 16  | `**`     | beginner user                                       | view a student’s performance in the assessment components                                                                      | know how the student has performed in the components.                                                                |","lastModifiedDate":"2022-03-02"},{"lineNumber":319,"author":{"gitId":"garethkoh"},"content":"| 17  | `*`      | beginner user                                       | make notes relevant to a particular student.                                                                                   | keep track of any miscellaneous information about the student.                                                       |","lastModifiedDate":"2022-03-02"},{"lineNumber":320,"author":{"gitId":"garethkoh"},"content":"| 18  | `*`      | expert user                                         | create shortcuts to classes                                                                                                    | save time on frequently visited classes.                                                                             |","lastModifiedDate":"2022-03-02"},{"lineNumber":321,"author":{"gitId":"garethkoh"},"content":"| 19  | `*`      | expert user                                         | mark attendance for multiple students at once                                                                                  | quickly mark the attendance of a group of students.                                                                  |","lastModifiedDate":"2022-03-02"},{"lineNumber":322,"author":{"gitId":"garethkoh"},"content":"| 20  | `*`      | expert user                                         | quickly update a student’s participation score during class                                                                    | save the time spent marking participation after class.                                                               |","lastModifiedDate":"2022-03-02"},{"lineNumber":323,"author":{"gitId":"garethkoh"},"content":"| 21  | `*`      | expert user                                         | view details and statistics of different classes at the same time                                                              | To facilitate comparison of class performance and save time spent on accessing the details of each class one by one. |","lastModifiedDate":"2022-03-02"},{"lineNumber":324,"author":{"gitId":"garethkoh"},"content":"| 22  | `*`      | expert user                                         | create aliases for commands                                                                                                    | save time spent on typing frequently used commands                                                                   |","lastModifiedDate":"2022-03-02"},{"lineNumber":325,"author":{"gitId":"garethkoh"},"content":"| 23  | `*`      | TA                                                  | receive reminder for my upcoming classes when I open the app                                                                   | have an overview of my schedule.                                                                                     |","lastModifiedDate":"2022-03-02"},{"lineNumber":326,"author":{"gitId":"garethkoh"},"content":"| 24  | `*`      | TA                                                  | filter students by assignment completion                                                                                       | send reminders to those who have not submitted.                                                                      |","lastModifiedDate":"2022-03-02"},{"lineNumber":327,"author":{"gitId":"garethkoh"},"content":"| 25  | `*`      | TA                                                  | receive notifications of students who did not attend tutorial                                                                  | proceed with a follow-up action.                                                                                     |","lastModifiedDate":"2022-03-02"},{"lineNumber":328,"author":{"gitId":"garethkoh"},"content":"| 26  | `*`      | TA                                                  | filter students who do not / barely meet minimum attendance rate                                                               | send them a reminder to attend the lessons.                                                                          |","lastModifiedDate":"2022-03-02"},{"lineNumber":329,"author":{"gitId":"garethkoh"},"content":"| 27  | `*`      | TA                                                  | save overall class participation, assignment submission and assignment grades of a particular class in a separate storage file | retrieve each class’s collated statistics to be used in end of semester TA evaluation and reflection.                |","lastModifiedDate":"2022-03-02"},{"lineNumber":330,"author":{"gitId":"garethkoh"},"content":"| 28  | `*`      | TA                                                  | choose a backup file to restore statistics from                                                                                | manage my classes on different computers when traveling.                                                             |","lastModifiedDate":"2022-03-02"},{"lineNumber":331,"author":{"gitId":"garethkoh"},"content":"| 29  | `*`      | TA                                                  | receive reminders for checking of submission of assignments on the assignment due date                                         | consistently update if students have submitted their assignment on time.                                             |","lastModifiedDate":"2022-03-02"},{"lineNumber":332,"author":{"gitId":"garethkoh"},"content":"| 30  | `*`      | TA                                                  | randomly generate a name from a specified class of a module                                                                    | facilitate class participation where TA can call a random student to answer a question.                              |","lastModifiedDate":"2022-03-02"},{"lineNumber":333,"author":{"gitId":"garethkoh"},"content":"| 31  | `*`      | TA                                                  | save to do list for a specific lesson, notes for each lesson will be cleared after one week                                    | facilitate tutoring, so that TA can keep track of important tasks to clear during that week’s lesson.                |","lastModifiedDate":"2022-03-02"},{"lineNumber":334,"author":{"gitId":"garethkoh"},"content":"| 32  | `*`      | TA                                                  | resize the application window                                                                                                  | avoid disruptions of switching between windows and tutorial documents during class.                                  |","lastModifiedDate":"2022-03-02"},{"lineNumber":335,"author":{"gitId":"garethkoh"},"content":"| 33  | `*`      | TA                                                  | group a specified number of students in a class together randomly.                                                             | assign project groups quickly.                                                                                       |","lastModifiedDate":"2022-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":337,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"kev-intq"},"content":"2.  camNUS shows a list of persons","lastModifiedDate":"2022-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"kev-intq"},"content":"4.  camNUS deletes the person","lastModifiedDate":"2022-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"kev-intq"},"content":"    * 3a1. camNUS shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":369,"author":{"gitId":"honganhcs"},"content":"**Use Case: Update results for an assignment**","lastModifiedDate":"2022-02-26"},{"lineNumber":370,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":371,"author":{"gitId":"zixin448"},"content":"**MSS**","lastModifiedDate":"2022-02-25"},{"lineNumber":372,"author":{"gitId":"zixin448"},"content":"1. User request to list all students in a class","lastModifiedDate":"2022-02-25"},{"lineNumber":373,"author":{"gitId":"zixin448"},"content":"2. camNUS show a list of students","lastModifiedDate":"2022-02-25"},{"lineNumber":374,"author":{"gitId":"zixin448"},"content":"3. User request to update the score of an assessment component","lastModifiedDate":"2022-02-25"},{"lineNumber":375,"author":{"gitId":"zixin448"},"content":"4. camNUS show one student at a time and request input score from user for each student","lastModifiedDate":"2022-02-25"},{"lineNumber":376,"author":{"gitId":"zixin448"},"content":"5. The scores of all students are updated","lastModifiedDate":"2022-02-25"},{"lineNumber":377,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":378,"author":{"gitId":"zixin448"},"content":"    Use case ends.","lastModifiedDate":"2022-02-25"},{"lineNumber":379,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":380,"author":{"gitId":"zixin448"},"content":"**Extensions**","lastModifiedDate":"2022-02-25"},{"lineNumber":381,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":382,"author":{"gitId":"zixin448"},"content":"* 2a. No existing class with input class_code","lastModifiedDate":"2022-02-25"},{"lineNumber":383,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":384,"author":{"gitId":"zixin448"},"content":"    Use case ends.","lastModifiedDate":"2022-02-25"},{"lineNumber":385,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":386,"author":{"gitId":"zixin448"},"content":"* 3a. No existing assessment component with input assessment_name","lastModifiedDate":"2022-02-25"},{"lineNumber":387,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":388,"author":{"gitId":"zixin448"},"content":"  New assessment component is created.","lastModifiedDate":"2022-02-25"},{"lineNumber":389,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":390,"author":{"gitId":"zixin448"},"content":"* 4a. Student did not submit relevant assessment","lastModifiedDate":"2022-02-25"},{"lineNumber":391,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":392,"author":{"gitId":"zixin448"},"content":"  Use case resumes at step 4 at the next student in the list.","lastModifiedDate":"2022-02-25"},{"lineNumber":393,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":394,"author":{"gitId":"honganhcs"},"content":"**Use case: Edit a person**","lastModifiedDate":"2022-02-26"},{"lineNumber":395,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":396,"author":{"gitId":"honganhcs"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":397,"author":{"gitId":"honganhcs"},"content":"1. User requests to list persons","lastModifiedDate":"2022-02-26"},{"lineNumber":398,"author":{"gitId":"kev-intq"},"content":"2. camNUS shows a list of persons","lastModifiedDate":"2022-03-02"},{"lineNumber":399,"author":{"gitId":"honganhcs"},"content":"3. User requests to edit a specific person in the list and provides the field(s) they want to update","lastModifiedDate":"2022-02-26"},{"lineNumber":400,"author":{"gitId":"kev-intq"},"content":"4. camNUS updates the existing values to the input values","lastModifiedDate":"2022-03-02"},{"lineNumber":401,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":402,"author":{"gitId":"honganhcs"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":403,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":404,"author":{"gitId":"honganhcs"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-26"},{"lineNumber":405,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":406,"author":{"gitId":"honganhcs"},"content":"  Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":407,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":408,"author":{"gitId":"honganhcs"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-02-26"},{"lineNumber":409,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":410,"author":{"gitId":"kev-intq"},"content":"    * 3a1. camNUS shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":411,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":412,"author":{"gitId":"honganhcs"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-02-26"},{"lineNumber":413,"author":{"gitId":"honganhcs"},"content":"* 3b. No fields are provided.","lastModifiedDate":"2022-02-26"},{"lineNumber":414,"author":{"gitId":"kev-intq"},"content":"  * 3b1. camNUS shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":415,"author":{"gitId":"honganhcs"},"content":"    ","lastModifiedDate":"2022-02-26"},{"lineNumber":416,"author":{"gitId":"honganhcs"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2022-02-26"},{"lineNumber":417,"author":{"gitId":"honganhcs"},"content":"* 3c. No value is provided for a field that is not tags.","lastModifiedDate":"2022-02-26"},{"lineNumber":418,"author":{"gitId":"kev-intq"},"content":"  * 3c1. camNUS shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":419,"author":{"gitId":"honganhcs"},"content":"    ","lastModifiedDate":"2022-02-26"},{"lineNumber":420,"author":{"gitId":"honganhcs"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2022-02-26"},{"lineNumber":421,"author":{"gitId":"honganhcs"},"content":"* 4a. The user enters values for tags.","lastModifiedDate":"2022-02-26"},{"lineNumber":422,"author":{"gitId":"honganhcs"},"content":"  * 4a1. Existing tags are removed and inputted tags are added to the person.","lastModifiedDate":"2022-02-26"},{"lineNumber":423,"author":{"gitId":"honganhcs"},"content":"* 4b. No value is entered after t/.","lastModifiedDate":"2022-02-26"},{"lineNumber":424,"author":{"gitId":"honganhcs"},"content":"  * 4b1. Existing tags are removed from the person.","lastModifiedDate":"2022-02-26"},{"lineNumber":425,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":426,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"honganhcs"},"content":"3. A TA with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using text commands than using the mouse.","lastModifiedDate":"2022-02-26"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"honganhcs":29,"zixin448":25,"kev-intq":8,"-":364,"garethkoh":64}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"seanlaiys"},"content":"camNUS is a **desktop app** for Teaching Assistants (TAs) to **manage their own contacts, as well as assessments and class participation among students** in their contact book. It is **optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"seanlaiys"},"content":"1. Download the latest `camNUS.jar` from [here](https://github.com/AY2122S2-CS2103T-W13-2/tp/releases).","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"seanlaiys"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your camNUS app.","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"seanlaiys"},"content":"Opens a window containing a list of help commands.","lastModifiedDate":"2022-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"seanlaiys"},"content":"Format: `help [n/COMMAND_NAME]`","lastModifiedDate":"2022-02-25"},{"lineNumber":73,"author":{"gitId":"seanlaiys"},"content":"* `COMMAND_NAME` is optional","lastModifiedDate":"2022-02-25"},{"lineNumber":74,"author":{"gitId":"seanlaiys"},"content":"* Directs the user to the list segment referred to by `COMMAND_NAME`","lastModifiedDate":"2022-02-25"},{"lineNumber":75,"author":{"gitId":"seanlaiys"},"content":"* Directs the user to the start of the list if `COMMAND_NAME` is unspecified","lastModifiedDate":"2022-02-25"},{"lineNumber":76,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":77,"author":{"gitId":"seanlaiys"},"content":"Examples:","lastModifiedDate":"2022-02-25"},{"lineNumber":78,"author":{"gitId":"seanlaiys"},"content":"* `help`","lastModifiedDate":"2022-02-25"},{"lineNumber":79,"author":{"gitId":"seanlaiys"},"content":"* `help n/delete`","lastModifiedDate":"2022-02-25"},{"lineNumber":80,"author":{"gitId":"seanlaiys"},"content":"* `help n/add`","lastModifiedDate":"2022-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"seanlaiys"},"content":"### Adding Commands","lastModifiedDate":"2022-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"seanlaiys"},"content":"#### Adding a person: `add`","lastModifiedDate":"2022-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2022-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` ","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2022-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":98,"author":{"gitId":"seanlaiys"},"content":"#### Adding a class: `add class`","lastModifiedDate":"2022-02-25"},{"lineNumber":99,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":100,"author":{"gitId":"seanlaiys"},"content":"Adds a class to the module.","lastModifiedDate":"2022-02-25"},{"lineNumber":101,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":102,"author":{"gitId":"zixin448"},"content":"Format: `add class tn/TUTORIAL_NAME v/VENUE d/DAY tm/TIME`","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"seanlaiys"},"content":"* `DAY` should be spelt in full or 3-letter abbreviation","lastModifiedDate":"2022-02-25"},{"lineNumber":104,"author":{"gitId":"seanlaiys"},"content":"* `TIME` will be in 1 hour block","lastModifiedDate":"2022-02-25"},{"lineNumber":105,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":106,"author":{"gitId":"seanlaiys"},"content":"Examples:","lastModifiedDate":"2022-02-25"},{"lineNumber":107,"author":{"gitId":"zixin448"},"content":"* `add class tn/T04 v/LT13 d/Monday tm/1300`","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"zixin448"},"content":"* `add class tn/G04 v/E-LEARNING d/Wed tm/1000`","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":110,"author":{"gitId":"seanlaiys"},"content":"#### Adding student to a class: `add student`","lastModifiedDate":"2022-02-25"},{"lineNumber":111,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":112,"author":{"gitId":"seanlaiys"},"content":"Adds a specified student to a given class.","lastModifiedDate":"2022-03-02"},{"lineNumber":113,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":114,"author":{"gitId":"zixin448"},"content":"Format: `add student INDEX id/STUDENT_ID tn/TUTORIAL_NAME`","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":116,"author":{"gitId":"seanlaiys"},"content":"* Adds the person at the specified `INDEX` as a student belonging to a specified class.","lastModifiedDate":"2022-03-02"},{"lineNumber":117,"author":{"gitId":"seanlaiys"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-03-02"},{"lineNumber":118,"author":{"gitId":"seanlaiys"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-02"},{"lineNumber":119,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":120,"author":{"gitId":"seanlaiys"},"content":"Examples:","lastModifiedDate":"2022-02-25"},{"lineNumber":121,"author":{"gitId":"zixin448"},"content":"* `add student 1 id/e01234567 tn/T13`","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"seanlaiys"},"content":"#### Adding an assessment component: `add assessment`","lastModifiedDate":"2022-02-25"},{"lineNumber":124,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":125,"author":{"gitId":"seanlaiys"},"content":"Adds an assessment component to the module.","lastModifiedDate":"2022-02-25"},{"lineNumber":126,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":127,"author":{"gitId":"zixin448"},"content":"Format: `add assessment as/ASSESSMENT_NAME w/WEIGHTAGE f/FULL_MARKS`","lastModifiedDate":"2022-03-08"},{"lineNumber":128,"author":{"gitId":"seanlaiys"},"content":"* `WEIGHTAGE` is out of 100%. ","lastModifiedDate":"2022-02-25"},{"lineNumber":129,"author":{"gitId":"zixin448"},"content":"* `FULL_MARKS` is the full marks of the assessment.","lastModifiedDate":"2022-03-08"},{"lineNumber":130,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":131,"author":{"gitId":"seanlaiys"},"content":"Examples:","lastModifiedDate":"2022-02-25"},{"lineNumber":132,"author":{"gitId":"zixin448"},"content":"* `add assessment as/Attendance w/5 f/1`","lastModifiedDate":"2022-03-08"},{"lineNumber":133,"author":{"gitId":"zixin448"},"content":"* `add assessment as/Assignment 1 w/10 f/10`","lastModifiedDate":"2022-03-08"},{"lineNumber":134,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":135,"author":{"gitId":"seanlaiys"},"content":"### Listing Commands","lastModifiedDate":"2022-02-25"},{"lineNumber":136,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":137,"author":{"gitId":"seanlaiys"},"content":"#### Listing all persons : `list`","lastModifiedDate":"2022-02-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"seanlaiys"},"content":"#### Listing all classes: `list class`","lastModifiedDate":"2022-02-25"},{"lineNumber":144,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":145,"author":{"gitId":"seanlaiys"},"content":"Shows a list of all the classes on the any input date.","lastModifiedDate":"2022-02-25"},{"lineNumber":146,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":147,"author":{"gitId":"seanlaiys"},"content":"Formats:","lastModifiedDate":"2022-02-25"},{"lineNumber":148,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":149,"author":{"gitId":"seanlaiys"},"content":"* `list class`","lastModifiedDate":"2022-02-25"},{"lineNumber":150,"author":{"gitId":"zixin448"},"content":"* `list class [dt/DATE] [d/DAY]`","lastModifiedDate":"2022-03-08"},{"lineNumber":151,"author":{"gitId":"seanlaiys"},"content":"* `DAY`/`DATE` is optional ","lastModifiedDate":"2022-02-25"},{"lineNumber":152,"author":{"gitId":"seanlaiys"},"content":"* `DATE` input should be in `DD/MM/YYYY` format ","lastModifiedDate":"2022-02-25"},{"lineNumber":153,"author":{"gitId":"seanlaiys"},"content":"* `DAY` should be spelt in full or 3-letter abbreviation","lastModifiedDate":"2022-02-25"},{"lineNumber":154,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":155,"author":{"gitId":"seanlaiys"},"content":"Examples:","lastModifiedDate":"2022-02-25"},{"lineNumber":156,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":157,"author":{"gitId":"seanlaiys"},"content":"* `list class`","lastModifiedDate":"2022-02-25"},{"lineNumber":158,"author":{"gitId":"seanlaiys"},"content":"![result for `list class`](images/listClassResult.png)","lastModifiedDate":"2022-02-25"},{"lineNumber":159,"author":{"gitId":"seanlaiys"},"content":"* `list class dt/20/02/2022`","lastModifiedDate":"2022-02-25"},{"lineNumber":160,"author":{"gitId":"seanlaiys"},"content":"* `list class d/Wed`","lastModifiedDate":"2022-02-25"},{"lineNumber":161,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":162,"author":{"gitId":"seanlaiys"},"content":"#### Listing students of a class: `list student`","lastModifiedDate":"2022-03-02"},{"lineNumber":163,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":164,"author":{"gitId":"seanlaiys"},"content":"Shows a list of all the students of a specified class.","lastModifiedDate":"2022-03-02"},{"lineNumber":165,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":166,"author":{"gitId":"seanlaiys"},"content":"Format:","lastModifiedDate":"2022-03-02"},{"lineNumber":167,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":168,"author":{"gitId":"zixin448"},"content":"* `list student INDEX [tn/TUTORIAL_NAME]`","lastModifiedDate":"2022-03-08"},{"lineNumber":169,"author":{"gitId":"zixin448"},"content":"* `TUTORIAL_NAME` is optional if `INDEX` is given.","lastModifiedDate":"2022-03-08"},{"lineNumber":170,"author":{"gitId":"seanlaiys"},"content":"* Shows list of student belonging to the class at the specified `INDEX`.","lastModifiedDate":"2022-03-02"},{"lineNumber":171,"author":{"gitId":"zixin448"},"content":"* Shows list of student belonging to the class with the specified `TUTORIAL_NAME`.","lastModifiedDate":"2022-03-08"},{"lineNumber":172,"author":{"gitId":"seanlaiys"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-03-02"},{"lineNumber":173,"author":{"gitId":"seanlaiys"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-03-02"},{"lineNumber":174,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":175,"author":{"gitId":"seanlaiys"},"content":"Examples:","lastModifiedDate":"2022-03-02"},{"lineNumber":176,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":177,"author":{"gitId":"zixin448"},"content":"* `list student tn/G04`","lastModifiedDate":"2022-03-08"},{"lineNumber":178,"author":{"gitId":"seanlaiys"},"content":"* `list student 1`","lastModifiedDate":"2022-03-02"},{"lineNumber":179,"author":{"gitId":"seanlaiys"},"content":"  ![result for `list student 1`](images/listStudentResult.png)","lastModifiedDate":"2022-03-02"},{"lineNumber":180,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":181,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"seanlaiys"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [id/STUDENT_ID] [t/TAG]…​`","lastModifiedDate":"2022-02-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"seanlaiys"},"content":"### Deleting Commands","lastModifiedDate":"2022-02-25"},{"lineNumber":219,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":220,"author":{"gitId":"seanlaiys"},"content":"#### Deleting a person : `delete`","lastModifiedDate":"2022-02-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":232,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"seanlaiys"},"content":"#### Deleting a class : `delete class`","lastModifiedDate":"2022-02-25"},{"lineNumber":236,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":237,"author":{"gitId":"seanlaiys"},"content":"Removes a class from the module","lastModifiedDate":"2022-02-25"},{"lineNumber":238,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":239,"author":{"gitId":"zixin448"},"content":"Format: ","lastModifiedDate":"2022-03-08"},{"lineNumber":240,"author":{"gitId":"zixin448"},"content":"* `delete class INDEX [tn/TUTORIAL_NAME]`","lastModifiedDate":"2022-03-08"},{"lineNumber":241,"author":{"gitId":"zixin448"},"content":"* `TUTORIAL_NAME` is optional if `INDEX` is given.","lastModifiedDate":"2022-03-08"},{"lineNumber":242,"author":{"gitId":"seanlaiys"},"content":"* Deletes the class at the specified `INDEX`.","lastModifiedDate":"2022-03-02"},{"lineNumber":243,"author":{"gitId":"zixin448"},"content":"* Deletes the class with the specified `TUTORIAL_NAME`.","lastModifiedDate":"2022-03-08"},{"lineNumber":244,"author":{"gitId":"seanlaiys"},"content":"* The index refers to the index number shown in the displayed list of classes.","lastModifiedDate":"2022-03-02"},{"lineNumber":245,"author":{"gitId":"seanlaiys"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-02"},{"lineNumber":246,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":247,"author":{"gitId":"seanlaiys"},"content":"Examples:","lastModifiedDate":"2022-02-25"},{"lineNumber":248,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":249,"author":{"gitId":"seanlaiys"},"content":"* `delete class 1`","lastModifiedDate":"2022-03-02"},{"lineNumber":250,"author":{"gitId":"zixin448"},"content":"* `delete class tn/G04`","lastModifiedDate":"2022-03-08"},{"lineNumber":251,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":252,"author":{"gitId":"zixin448"},"content":"#### Removing a student  : `remove student`","lastModifiedDate":"2022-03-03"},{"lineNumber":253,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":254,"author":{"gitId":"seanlaiys"},"content":"Removes a student from a given class, but does not remove their contact from the address book.","lastModifiedDate":"2022-02-25"},{"lineNumber":255,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":256,"author":{"gitId":"zixin448"},"content":"Format: ","lastModifiedDate":"2022-03-03"},{"lineNumber":257,"author":{"gitId":"zixin448"},"content":"* `remove student i/INDEX tn/TUTORIAL_NAME`.","lastModifiedDate":"2022-03-08"},{"lineNumber":258,"author":{"gitId":"zixin448"},"content":"* `remove student id/STUDENT_ID tn/TUTORIAL_NAME`.","lastModifiedDate":"2022-03-08"},{"lineNumber":259,"author":{"gitId":"zixin448"},"content":"* Removes the student with the specified `INDEX` or `STUDENT_ID` from the class with specified `TUTORIAL_NAME`.","lastModifiedDate":"2022-03-08"},{"lineNumber":260,"author":{"gitId":"zixin448"},"content":"* The `INDEX` refers to the index number shown in the displayed list of student in the class.","lastModifiedDate":"2022-03-03"},{"lineNumber":261,"author":{"gitId":"zixin448"},"content":"* The `STUDENT_ID` refers to the student_id of a particular student.","lastModifiedDate":"2022-03-03"},{"lineNumber":262,"author":{"gitId":"seanlaiys"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-02"},{"lineNumber":263,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":264,"author":{"gitId":"seanlaiys"},"content":"Examples:","lastModifiedDate":"2022-02-25"},{"lineNumber":265,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":266,"author":{"gitId":"zixin448"},"content":"* `remove student i/1 tn/G04`","lastModifiedDate":"2022-03-08"},{"lineNumber":267,"author":{"gitId":"zixin448"},"content":"* `remove student id/e0123456 tn/G04`","lastModifiedDate":"2022-03-08"},{"lineNumber":268,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":269,"author":{"gitId":"seanlaiys"},"content":"#### Deleting an assessment component: `delete assessment`","lastModifiedDate":"2022-02-25"},{"lineNumber":270,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":271,"author":{"gitId":"seanlaiys"},"content":"Deletes an assessment component from the module, removing all information about the assessment from the students taking the module.","lastModifiedDate":"2022-02-25"},{"lineNumber":272,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":273,"author":{"gitId":"zixin448"},"content":"Format: `delete assessment as/ASSESSMENT_NAME`","lastModifiedDate":"2022-03-08"},{"lineNumber":274,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":275,"author":{"gitId":"seanlaiys"},"content":"* Deletes the assessment with the specified `ASSESSMENT_NAME`.","lastModifiedDate":"2022-02-25"},{"lineNumber":276,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":277,"author":{"gitId":"seanlaiys"},"content":"Examples:","lastModifiedDate":"2022-02-25"},{"lineNumber":278,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":279,"author":{"gitId":"zixin448"},"content":"* `delete assessment as/Attendance`","lastModifiedDate":"2022-03-08"},{"lineNumber":280,"author":{"gitId":"zixin448"},"content":"* `delete assessment as/Assignment 1`","lastModifiedDate":"2022-03-08"},{"lineNumber":281,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":282,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":300,"author":{"gitId":"-"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-02-04"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":302,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":303,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":304,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":306,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"seanlaiys"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous camNUS home folder.","lastModifiedDate":"2022-02-25"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"seanlaiys"},"content":"| Action                | Format, Examples                                                                                                                                                       |","lastModifiedDate":"2022-02-25"},{"lineNumber":322,"author":{"gitId":"seanlaiys"},"content":"|-----------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-02"},{"lineNumber":323,"author":{"gitId":"seanlaiys"},"content":"| **Add**               | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665  t/friend t/colleague` |","lastModifiedDate":"2022-03-02"},{"lineNumber":324,"author":{"gitId":"zixin448"},"content":"| **Add Class**         | `add class tn/TUTORIAL_NAME v/VENUE d/DAY tm/TIME` \u003cbr\u003e e.g., `add class c/T04 v/LT13 d/Monday t/1300`                                                                 |","lastModifiedDate":"2022-03-08"},{"lineNumber":325,"author":{"gitId":"zixin448"},"content":"| **Add Student**       | `add student INDEX id/STUDENT_ID tn/TUTORIAL_NAME` \u003cbr\u003e e.g., `add student 1 id/e01234567 tn/T13`                                                                      |","lastModifiedDate":"2022-03-08"},{"lineNumber":326,"author":{"gitId":"zixin448"},"content":"| **Add Assessment**    | `add assessment as/ASSESSMENT_NAME w/WEIGHTAGE s/SCORE` \u003cbr\u003e e.g., `add assessment as/Attendance w/5 s/1`                                                              |","lastModifiedDate":"2022-03-08"},{"lineNumber":327,"author":{"gitId":"seanlaiys"},"content":"| **Clear**             | `clear`                                                                                                                                                                |","lastModifiedDate":"2022-02-25"},{"lineNumber":328,"author":{"gitId":"seanlaiys"},"content":"| **Delete**            | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                    |","lastModifiedDate":"2022-02-25"},{"lineNumber":329,"author":{"gitId":"zixin448"},"content":"| **Delete Class**      | `delete class INDEX [tn/TUTORIAL_NAME]` \u003cbr\u003e e.g., `delete class 1 [tn/G04]`                                                                                           |","lastModifiedDate":"2022-03-08"},{"lineNumber":330,"author":{"gitId":"seanlaiys"},"content":"| **Delete Student**    | `delete student INDEX` \u003cbr\u003e e.g. `delete student 2`                                                                                                                    |","lastModifiedDate":"2022-03-02"},{"lineNumber":331,"author":{"gitId":"zixin448"},"content":"| **Delete Assessment** | `delete assessment as/ASSESSMENT_NAME` \u003cbr\u003e e.g.,* `delete assessment as/Attendance`                                                                                   |","lastModifiedDate":"2022-03-08"},{"lineNumber":332,"author":{"gitId":"seanlaiys"},"content":"| **Edit**              | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [id/STUDENT_ID] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                            |","lastModifiedDate":"2022-02-25"},{"lineNumber":333,"author":{"gitId":"seanlaiys"},"content":"| **Find**              | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                             |","lastModifiedDate":"2022-02-25"},{"lineNumber":334,"author":{"gitId":"seanlaiys"},"content":"| **List**              | `list`                                                                                                                                                                 |","lastModifiedDate":"2022-02-25"},{"lineNumber":335,"author":{"gitId":"seanlaiys"},"content":"| **List Class**        | `list class [dt/DATE]` \u003cbr\u003e e.g., `list class dt/20/02/2022`                                                                                                           |","lastModifiedDate":"2022-02-25"},{"lineNumber":336,"author":{"gitId":"zixin448"},"content":"| **List Student**      | `list student INDEX [tn/TUTORIAL_NAME]` \u003cbr\u003e e.g., `list student 1 [tn/G04]`                                                                                           |","lastModifiedDate":"2022-03-08"},{"lineNumber":337,"author":{"gitId":"seanlaiys"},"content":"| **Help**              | `help [n/COMMAND_NAME]` \u003cbr\u003e e.g.,`help n/delete`                                                                                                                      |","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"zixin448":37,"seanlaiys":127,"-":173}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"seanlaiys"},"content":"title: camNUS","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![Java CI](https://github.com/AY2122S2-CS2103T-W13-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S2-CS2103T-W13-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-W13-2/tp/branch/master/graph/badge.svg?token\u003d6C0U9C1K7K)](https://codecov.io/gh/AY2122S2-CS2103T-W13-2/tp)","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"seanlaiys"},"content":"camNUS is a **desktop app** for Teaching Assistants (TAs) to **manage their own contacts, as well as assessments and class participation among students** in their contact book. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"seanlaiys"},"content":"* If you are interested in using camNUS, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"seanlaiys"},"content":"* If you are interested about developing camNUS, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"seanlaiys"},"content":"* This project is based on the AddressBook-Level3 project created by the SE-EDU initiative.","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"seanlaiys":5,"-":13}},{"path":"docs/team/garethkoh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"garethkoh"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"garethkoh"},"content":"layout: page","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"garethkoh"},"content":"title: Gareth Koh Sheng\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"garethkoh"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"garethkoh"},"content":"### Project: camNUS","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"garethkoh"},"content":"camNUS is a desktop app for Teaching Assistants (TAs) to manage assessments and class participation among students based on their contacts. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"garethkoh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"garethkoh"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"garethkoh"},"content":"    * to be added soon","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"garethkoh"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"garethkoh"},"content":"    * to be added soon","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"garethkoh"},"content":"* **Project management**:","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"garethkoh"},"content":"    * to be added soon","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"garethkoh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"garethkoh"},"content":"    * to be added soon","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"garethkoh"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"garethkoh"},"content":"    * User Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"garethkoh"},"content":"        * to be added soon","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"garethkoh"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"garethkoh"},"content":"        * to be added soon","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"garethkoh"},"content":"* **Team-based tasks**:","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"garethkoh"},"content":"    * to be added soon","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"garethkoh"},"content":"* **Review/Mentoring**:","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"garethkoh"},"content":"    * to be added soon","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"garethkoh"},"content":"* **Beyond the project team**:","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"garethkoh"},"content":"    * to be added soon","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"garethkoh":37}},{"path":"docs/team/honganhcs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"layout: page","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"title: Nguyen Hong Anh\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"### Project: camNUS","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"camNUS is a desktop app for Teaching Assistants (TAs) to manage assessments and class participation among students based on their contacts. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"* **New Feature**: ","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"  * to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"* **Code contributed**: ","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"  * to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"* **Project management**:","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"    * to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"    * to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    * User Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"        * to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"        * to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"* **Team-based tasks**:","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"    * to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"* **Review/Mentoring**:","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"    * to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"* **Beyond the project team**:","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"  * to be added soon","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"honganhcs":37}},{"path":"docs/team/kev-intq.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"layout: page","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"title: Quek Wenjie Kevin\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":"### Project: camNUS","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":"camNUS is a desktop app for Teaching Assistants (TAs) to manage assessments and class participation among students based on their contacts. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":"  * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"* **Code contributed**: ","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"  * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":"* **Project management**:","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":"  * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"kev-intq"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"kev-intq"},"content":"  * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"kev-intq"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"kev-intq"},"content":"    * User Guide:","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"kev-intq"},"content":"      * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"kev-intq"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"kev-intq"},"content":"      * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"kev-intq"},"content":"* **Team-based tasks**:","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"kev-intq"},"content":"  * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"kev-intq"},"content":"* **Review/Mentoring**:","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"kev-intq"},"content":"  * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"kev-intq"},"content":"* **Beyond the project team**:","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"kev-intq"},"content":"  * to be added soon","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"kev-intq":36}},{"path":"docs/team/seanlaiys.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"seanlaiys"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"seanlaiys"},"content":"layout: page","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"seanlaiys"},"content":"title: Lai Yuen Sheng\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"seanlaiys"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"seanlaiys"},"content":"### Project: camNUS","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"seanlaiys"},"content":"camNUS is a desktop app for Teaching Assistants (TAs) to manage assessments and class participation among students based on their contacts. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"seanlaiys"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"seanlaiys"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"seanlaiys"},"content":"  * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"seanlaiys"},"content":"* **Code contributed**: ","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"seanlaiys"},"content":"  * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"seanlaiys"},"content":"* **Project management**:","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"seanlaiys"},"content":"  * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"seanlaiys"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"seanlaiys"},"content":"  * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"seanlaiys"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"seanlaiys"},"content":"    * User Guide:","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"seanlaiys"},"content":"      * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"seanlaiys"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"seanlaiys"},"content":"      * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"seanlaiys"},"content":"* **Team-based tasks**:","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"seanlaiys"},"content":"  * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"seanlaiys"},"content":"* **Review/Mentoring**:","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"seanlaiys"},"content":"  * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"seanlaiys"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"seanlaiys"},"content":"* **Beyond the project team**:","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"seanlaiys"},"content":"  * to be added soon","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"seanlaiys":36}},{"path":"docs/team/zixin448.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"layout: page","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"title: Yong Zi Xin\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"### Project: camNUS","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"###Overview:","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"camNUS is a desktop app for Teaching Assistants (TAs) to manage assessments and class participation among students based on their contacts. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"  * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"  * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"* **Project management**:","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"* **Enhancements implemented to existing features**:","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"  * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"zixin448"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"zixin448"},"content":"  * User Guide:","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"zixin448"},"content":"    * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"zixin448"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"zixin448"},"content":"    * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"zixin448"},"content":"* **Team-based tasks**:","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"zixin448"},"content":"  * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"zixin448"},"content":"* **Review/Mentoring**:","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"zixin448"},"content":"  * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"zixin448"},"content":"* **Beyond the project team**:","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"zixin448"},"content":"  * to be added soon","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"zixin448":38}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"    public static final Prefix PREFIX_STUDENTID \u003d new Prefix(\"id/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"id/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"tm/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"    public static final Prefix PREFIX_DAY \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"    public static final Prefix PREFIX_VENUE \u003d new Prefix(\"v/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"    public static final Prefix PREFIX_TUTORIALNAME \u003d new Prefix(\"tn/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"    public static final Prefix PREFIX_ASSESSMENTNAME \u003d new Prefix(\"as/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"    public static final Prefix PREFIX_WEIGHTAGE \u003d new Prefix(\"w/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"    public static final Prefix PREFIX_FULLMARK \u003d new Prefix(\"f/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"zixin448":9,"-":14}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.assessment.Assessment;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.assessment.UniqueAssessmentList;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.tutorial.Tutorial;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.tutorial.UniqueTutorialList;","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":" * Wraps all data at the address-book level (persons, tutorials, assessments)","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":" * TODO: add methods for tutorial and assessment list which will be used by the ModelManager","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    private final UniqueTutorialList tutorials \u003d new UniqueTutorialList();","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    private final UniqueAssessmentList assessments \u003d new UniqueAssessmentList();","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"     * Replaces the contents of the tutorial list with {@code tutorials},","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"     * which does not contain duplicate tutorials.","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"    public void setTutorials(List\u003cTutorial\u003e tutorials) {","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"        this.tutorials.setTutorials(tutorials);","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"     * Replaces the contents of the assessment list with {@code assessments},","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"     * which does not contain duplicate assessments.","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"    public void setAssessments(List\u003cAssessment\u003e assessments) {","lastModifiedDate":"2022-03-07"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"        this.assessments.setAssessments(assessments);","lastModifiedDate":"2022-03-07"},{"lineNumber":71,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":80,"author":{"gitId":"honganhcs"},"content":"        setTutorials(newData.getTutorialList());","lastModifiedDate":"2022-03-07"},{"lineNumber":81,"author":{"gitId":"honganhcs"},"content":"        setAssessments(newData.getAssessmentList());","lastModifiedDate":"2022-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":134,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":135,"author":{"gitId":"honganhcs"},"content":"    public ObservableList\u003cTutorial\u003e getTutorialList() {","lastModifiedDate":"2022-03-07"},{"lineNumber":136,"author":{"gitId":"honganhcs"},"content":"        return tutorials.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-07"},{"lineNumber":137,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":138,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":139,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":140,"author":{"gitId":"honganhcs"},"content":"    public ObservableList\u003cAssessment\u003e getAssessmentList() {","lastModifiedDate":"2022-03-07"},{"lineNumber":141,"author":{"gitId":"honganhcs"},"content":"        return assessments.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-07"},{"lineNumber":142,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":143,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"honganhcs":36,"-":119}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":" * TODO: add methods for AddressBook to support command logic","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":" * The AddressBook contains the tutorial list and assessment list.","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":" * e.g. TutorialManager to provide higher-level methods.","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    private static final Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_STUDENTS_IN_ADDRESSBOOK \u003d Student::isStudent;","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"     * A list containing all Students in the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"     * Updated automatically when addressBook is updated.","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"     * TODO: add methods for allStudents if needed.","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"     * @see FilteredList","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"     * @see ObservableList","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"    private final FilteredList\u003cPerson\u003e allStudents;","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"        allStudents \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList(), PREDICATE_SHOW_ALL_STUDENTS_IN_ADDRESSBOOK);","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"honganhcs"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d All Students List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-03"},{"lineNumber":167,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"honganhcs":17,"-":151}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.assessment.Assessment;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.tutorial.Tutorial;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"     * Returns an unmodifiable view of the tutorials list.","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"     * This list will not contain any duplicate tutorials.","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    ObservableList\u003cTutorial\u003e getTutorialList();","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"     * Returns an unmodifiable view of the assessments list.","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"     * This list will not contain any duplicate assessments.","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    ObservableList\u003cAssessment\u003e getAssessmentList();","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"honganhcs":13,"-":17}},{"path":"src/main/java/seedu/address/model/assessment/Assessment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package seedu.address.model.assessment;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" * Represents an Assessment for all the tutorials in the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"public class Assessment {","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"    // Identity fields","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"    private final AssessmentName name;","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"    // Data fields","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"    private final Weightage weightage;","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"    private final FullMark fullMark;","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"    public Assessment(AssessmentName name, Weightage weightage, FullMark fullMark) {","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"        requireAllNonNull(name, weightage, fullMark);","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"        this.weightage \u003d weightage;","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"        this.fullMark \u003d fullMark;","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    public AssessmentName getAssessmentName() {","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"        return name;","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"    public Weightage getWeightage() {","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"        return weightage;","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"    public FullMark getFullMark() {","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"        return fullMark;","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"     * Returns true if both assessments have the same name.","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"     * Example usage: check for duplicates.","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"    public boolean isSameAssessment(Assessment other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"            return true;","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"        return other !\u003d null \u0026\u0026 other.getAssessmentName().equals(getAssessmentName());","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"     * Returns true if both assessments have the same identity and data fields.","lastModifiedDate":"2022-03-03"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"     * Defines a stronger notion of equality between 2 assessments.","lastModifiedDate":"2022-03-03"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"     * Example usage: deleting an Assessment from the UniqueAssessmentList","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"            return true;","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"        if (!(other instanceof Assessment)) {","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"            return false;","lastModifiedDate":"2022-03-03"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"        Assessment otherAssessment \u003d (Assessment) other;","lastModifiedDate":"2022-03-03"},{"lineNumber":68,"author":{"gitId":"honganhcs"},"content":"        return otherAssessment.getAssessmentName().equals(getAssessmentName())","lastModifiedDate":"2022-03-03"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 otherAssessment.getFullMark().equals(getFullMark())","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 otherAssessment.getWeightage().equals(getWeightage());","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":74,"author":{"gitId":"honganhcs"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-03"},{"lineNumber":75,"author":{"gitId":"honganhcs"},"content":"        return Objects.hash(name, weightage, fullMark);","lastModifiedDate":"2022-03-03"},{"lineNumber":76,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":77,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"honganhcs":77}},{"path":"src/main/java/seedu/address/model/assessment/AssessmentName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package seedu.address.model.assessment;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * Represents an Assessment\u0027s name in the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAssessmentName(String)}","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"public class AssessmentName {","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"            \"Assessment names should only contain alphanumeric characters and spaces, and should not be blank\";","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"    public final String name;","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"     * Constructs a {@code AssessmentName}.","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"     * @param value an assessment name.","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    public AssessmentName(String value) {","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"        checkArgument(isValidAssessmentName(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"        name \u003d value;","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"     * Returns true if a given String is a valid assessment name.","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"    public static boolean isValidAssessmentName(String value) {","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"        return value.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"    public String toString() {","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"        return name;","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"                || (other instanceof AssessmentName // instanceof handles nulls","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 name.equals(((AssessmentName) other).name)); // state check","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"        return name.hashCode();","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"honganhcs":50}},{"path":"src/main/java/seedu/address/model/assessment/AssessmentResults.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package seedu.address.model.assessment;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.assessment.exceptions.DuplicateStudentResultException;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":" * Contains a list of the students\u0027 results for a particular Assessment (found in UniqueAssessmentList).","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":" * The students are in the same Tutorial.","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":" * Has a whole-part relationship with StudentResult.","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":" * TODO: implement remove and setStudentResult (for updating student\u0027s result)","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":" * @see seedu.address.model.person.UniquePersonList","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":" * @see StudentResult","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"public class AssessmentResults {","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"    // Identity field","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"    private final AssessmentName assessmentName;","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"    // Data field","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    private final ObservableList\u003cStudentResult\u003e results \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    private final ObservableList\u003cStudentResult\u003e unmodifiableResults \u003d","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"            FXCollections.unmodifiableObservableList(results);","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"     * Constructs an AssessmentResults.","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"     * @param name name of the Assessment.","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"    public AssessmentResults(AssessmentName name) {","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"        assessmentName \u003d name;","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"     * Returns true if given AssessmentResults belong to the same assessment as this.","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"     * Used to check for duplicates when adding an assessment to the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"     * (unlikely to reach this as should check for duplicates in UniqueAssessmentList first before adding","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"     * AssessmentResultsList).","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"    public boolean isSameAssessmentResults(AssessmentResults ar) {","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"        return this \u003d\u003d ar","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"                || (ar !\u003d null","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 results.equals(ar.results));","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"     * Returns true if results list already contains the StudentResult.","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"    public boolean contains(StudentResult toCheck) {","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-03"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"        return results.stream().anyMatch(toCheck::isSameStudentResult);","lastModifiedDate":"2022-03-03"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"     * Adds a StudentResult to the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"     * The Student\u0027s result must not already be in the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"     * Can redefine this to allow updating for results already in the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"    public void add(StudentResult toAdd) {","lastModifiedDate":"2022-03-03"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-03"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"            throw new DuplicateStudentResultException();","lastModifiedDate":"2022-03-03"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"        results.add(toAdd);","lastModifiedDate":"2022-03-03"},{"lineNumber":68,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"    public ObservableList\u003cStudentResult\u003e asUnmodifiableStudentResultsList() {","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"honganhcs"},"content":"        return unmodifiableResults;","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"honganhcs":73}},{"path":"src/main/java/seedu/address/model/assessment/AssessmentResultsList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package seedu.address.model.assessment;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"import java.util.List;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.assessment.exceptions.DuplicateAssessmentException;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.tutorial.TutorialName;","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":" * Contains a list of AssessmentResults.","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":" * Each AssessmentResults in the list should correspond to an Assessment in the UniqueAssessmentList.","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":" * TODO: implement remove and other setters, depending on how commands are implemented.","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":" * @see AssessmentResults","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":" * @see StudentResult","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":" * @see UniqueAssessmentList","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"public class AssessmentResultsList {","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"    // Identity field","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    private final TutorialName tutorialName;","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    // Data field","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"    private final List\u003cAssessmentResults\u003e assessmentResultsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"    private final List\u003cAssessmentResults\u003e unmodifiableResultsList \u003d Collections.unmodifiableList(assessmentResultsList);","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"     * Constructs an AssessmentResultsList.","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"     * @param tutName the TutorialName of the Tutorial that the AssessmentResultsList is contained in.","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"    public AssessmentResultsList(TutorialName tutName) {","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"        requireNonNull(tutName);","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"        tutorialName \u003d tutName;","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"     * Returns true if assessmentResultsList contains the AssessmentResults.","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"    public boolean contains(AssessmentResults toCheck) {","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"        return assessmentResultsList.stream().anyMatch(toCheck::isSameAssessmentResults);","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"     * Used to add an AssessmentResults to the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"     * The AssessmentResults must not already be in the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"    public void add(AssessmentResults toAdd) {","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-03"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"            throw new DuplicateAssessmentException();","lastModifiedDate":"2022-03-03"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"        assessmentResultsList.add(toAdd);","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"     * Returns the backing list as an unmodifiable {@code List}.","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"    public List\u003cAssessmentResults\u003e asUnmodifiableList() {","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"        return unmodifiableResultsList;","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"honganhcs":65}},{"path":"src/main/java/seedu/address/model/assessment/FullMark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package seedu.address.model.assessment;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * Represents the full marks for an Assessment in the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidFullMark(String)}","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"public class FullMark {","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"The full mark should be a number greater than 0\";","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"     * The full mark must be an integer larger than 0","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[1-9][0-9]*\";","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"    public final int fullMark;","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"     * Constructs a {@code FullMark}.","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"     * @param value a full mark.","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    public FullMark(String value) {","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"        checkArgument(isValidFullMark(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"        fullMark \u003d Integer.parseInt(value);","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"     * Returns true if a given string is a valid weightage.","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"    public static boolean isValidFullMark(String value) {","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"        return value.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"    public String toString() {","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"        return Integer.toString(fullMark);","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"        return this \u003d\u003d other","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"                || (other instanceof FullMark","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 fullMark \u003d\u003d ((FullMark) other).fullMark);","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"        return fullMark;","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"honganhcs":52}},{"path":"src/main/java/seedu/address/model/assessment/Score.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package seedu.address.model.assessment;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * Represents the score for an Assessment in the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidScore(String, int)}","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"public class Score {","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"            \"Scores should be integers and should not be greater than the full mark, %d\";","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d+\";","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"    public final int score;","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"     * Constructs a Score.","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"     * @param value the score.","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"     * @param fullMark the full marks of the assessment.","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    public Score(String value, FullMark fullMark) {","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"        checkArgument(isValidScore(value, fullMark.fullMark), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"        score \u003d Integer.parseInt(value);","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"    public boolean isValidScore(String value, int fullMark) {","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"        return value.matches(VALIDATION_REGEX) \u0026\u0026 Integer.parseInt(value) \u003c\u003d fullMark;","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"    public String toString() {","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"        return Integer.toString(score);","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"        return this \u003d\u003d o","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"                || (o instanceof Score","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 score \u003d\u003d ((Score) o).score);","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"        return score;","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"honganhcs":47}},{"path":"src/main/java/seedu/address/model/assessment/StudentResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package seedu.address.model.assessment;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.person.NusNetId;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":" * Contains the score of a student for a particular Assessment in the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":" * Part of AssessmentResults, should not exist without an AssessmentResults object.","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":" * @see AssessmentResults","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":" * @see Score","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"public class StudentResult {","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"    // Identity field, change to name if desired","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"    private final NusNetId studentId;","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"    // Data field","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    private final Score score;","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"     * Constructs a StudentResult.","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"     * @param id the student\u0027s NusNetId.","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"     * @param s the student\u0027s Score.","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    public StudentResult(NusNetId id, Score s) {","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"        requireAllNonNull(id, s);","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"        studentId \u003d id;","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"        score \u003d s;","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"    public NusNetId getStudentId() {","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"        return studentId;","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"    public Score getScore() {","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"        return score;","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"     * Returns true if the two StudentResults have the same NusNetId.","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"     * Defines a weaker notion of equality between 2 StudentResults.","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"     * Used for checking of duplicates in {@link AssessmentResults}","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"    public boolean isSameStudentResult(StudentResult other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"        return this \u003d\u003d other","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"                || (other !\u003d null","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 other.getStudentId().equals(getStudentId()));","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"    public String toString() {","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"        builder.append(getStudentId())","lastModifiedDate":"2022-03-03"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"                .append(\"; Score: \")","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"                .append(getScore());","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-03-03"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"        return this \u003d\u003d o","lastModifiedDate":"2022-03-03"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"                || (o instanceof StudentResult","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 studentId.equals(((StudentResult) o).studentId)","lastModifiedDate":"2022-03-03"},{"lineNumber":68,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 score \u003d\u003d ((StudentResult) o).score);","lastModifiedDate":"2022-03-03"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"honganhcs"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"honganhcs"},"content":"        return Objects.hash(studentId, score);","lastModifiedDate":"2022-03-03"},{"lineNumber":74,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":75,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"honganhcs":75}},{"path":"src/main/java/seedu/address/model/assessment/UniqueAssessmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package seedu.address.model.assessment;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import java.util.List;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.assessment.exceptions.AssessmentNotFoundException;","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.assessment.exceptions.DuplicateAssessmentException;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":" * A list of Assessments that enforces the uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":" * An Assessment is considered unique by comparing using {@code Assessment#isSameAssessment(Assessment)}.","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":" * Adding and updating an Assessment uses {@code Assessment#isSameAssessment(Assessment)} for equality","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":" * to ensure that the assessment being added is unique in terms of identity in the UniqueAssessmentList.","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":" * However, the removal of an assessment uses {@code Assessment#equals(Object)} to ensure that the assessment","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":" * with exactly the same fields is removed.","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":" * @see Assessment#isSameAssessment(Assessment)","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"public class UniqueAssessmentList {","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    private final ObservableList\u003cAssessment\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"    private final ObservableList\u003cAssessment\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"     * Returns true if the list contains an equivalent assessment as the given argument,","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"     * uses {@code Assessment#isSameAssessment(Assessment)}","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"    public boolean contains(Assessment toCheck) {","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"        return internalList.stream().anyMatch(toCheck::isSameAssessment);","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"     * Adds an assessment to the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"     * The assessment must not already exist in the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"    public void add(Assessment toAdd) {","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"            throw new DuplicateAssessmentException();","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"     * Replaces the assessment {@code target} in the list with {@code editedAssessment}.","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"     * The name of {@code editedAssessment} must not be the same as another existing assessment in the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"    public void setAssessment(Assessment target, Assessment editedAssessment) {","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"        requireAllNonNull(target, editedAssessment);","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"            throw new AssessmentNotFoundException();","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"        if (!target.isSameAssessment(editedAssessment) \u0026\u0026 contains(editedAssessment)) {","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"            throw new DuplicateAssessmentException();","lastModifiedDate":"2022-03-03"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"        internalList.set(index, editedAssessment);","lastModifiedDate":"2022-03-03"},{"lineNumber":68,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"honganhcs"},"content":"     * Removes the equivalent assessment from the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"honganhcs"},"content":"     * The assessment must exist in the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":74,"author":{"gitId":"honganhcs"},"content":"    public void remove(Assessment toRemove) {","lastModifiedDate":"2022-03-03"},{"lineNumber":75,"author":{"gitId":"honganhcs"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-03"},{"lineNumber":76,"author":{"gitId":"honganhcs"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-03"},{"lineNumber":77,"author":{"gitId":"honganhcs"},"content":"            throw new AssessmentNotFoundException();","lastModifiedDate":"2022-03-03"},{"lineNumber":78,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":79,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":80,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":81,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":82,"author":{"gitId":"honganhcs"},"content":"     * Returns the backing list as an unmodifiable list.","lastModifiedDate":"2022-03-03"},{"lineNumber":83,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":84,"author":{"gitId":"honganhcs"},"content":"    public ObservableList\u003cAssessment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-03"},{"lineNumber":85,"author":{"gitId":"honganhcs"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-03"},{"lineNumber":86,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":87,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":88,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":89,"author":{"gitId":"honganhcs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":90,"author":{"gitId":"honganhcs"},"content":"        return this \u003d\u003d other","lastModifiedDate":"2022-03-03"},{"lineNumber":91,"author":{"gitId":"honganhcs"},"content":"                || (other instanceof UniqueAssessmentList","lastModifiedDate":"2022-03-03"},{"lineNumber":92,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 internalList.equals(((UniqueAssessmentList) other).internalList));","lastModifiedDate":"2022-03-03"},{"lineNumber":93,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":94,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":95,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":96,"author":{"gitId":"honganhcs"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-03"},{"lineNumber":97,"author":{"gitId":"honganhcs"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-03"},{"lineNumber":98,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":99,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":100,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":101,"author":{"gitId":"honganhcs"},"content":"     * Replaces the contents of this list with {@code assessments},","lastModifiedDate":"2022-03-07"},{"lineNumber":102,"author":{"gitId":"honganhcs"},"content":"     * which must not contain duplicate assessments.","lastModifiedDate":"2022-03-07"},{"lineNumber":103,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":104,"author":{"gitId":"honganhcs"},"content":"    public void setAssessments(List\u003cAssessment\u003e assessments) {","lastModifiedDate":"2022-03-07"},{"lineNumber":105,"author":{"gitId":"honganhcs"},"content":"        requireAllNonNull(assessments);","lastModifiedDate":"2022-03-07"},{"lineNumber":106,"author":{"gitId":"honganhcs"},"content":"        if (!assessmentsAreUnique(assessments)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":107,"author":{"gitId":"honganhcs"},"content":"            throw new DuplicateAssessmentException();","lastModifiedDate":"2022-03-07"},{"lineNumber":108,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":109,"author":{"gitId":"honganhcs"},"content":"        internalList.setAll(assessments);","lastModifiedDate":"2022-03-07"},{"lineNumber":110,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":111,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":112,"author":{"gitId":"honganhcs"},"content":"    private boolean assessmentsAreUnique(List\u003cAssessment\u003e assessments) {","lastModifiedDate":"2022-03-07"},{"lineNumber":113,"author":{"gitId":"honganhcs"},"content":"        for (int i \u003d 0; i \u003c assessments.size() - 1; i++) {","lastModifiedDate":"2022-03-07"},{"lineNumber":114,"author":{"gitId":"honganhcs"},"content":"            for (int j \u003d i + 1; j \u003c assessments.size(); j++) {","lastModifiedDate":"2022-03-07"},{"lineNumber":115,"author":{"gitId":"honganhcs"},"content":"                if (assessments.get(i).isSameAssessment(assessments.get(j))) {","lastModifiedDate":"2022-03-07"},{"lineNumber":116,"author":{"gitId":"honganhcs"},"content":"                    return false;","lastModifiedDate":"2022-03-07"},{"lineNumber":117,"author":{"gitId":"honganhcs"},"content":"                }","lastModifiedDate":"2022-03-07"},{"lineNumber":118,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-03-07"},{"lineNumber":119,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":120,"author":{"gitId":"honganhcs"},"content":"        return true;","lastModifiedDate":"2022-03-07"},{"lineNumber":121,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":122,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"honganhcs":122}},{"path":"src/main/java/seedu/address/model/assessment/Weightage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package seedu.address.model.assessment;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * Represents the weightage of an Assessment in the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidWeightage(String)}","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"public class Weightage {","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"A weightage should be a number between 0 and 100\";","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"     * The weightage must be an integer between 0 and 100, inclusive.","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(0|[1-9][0-9]?|100)\";","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"    public final int weightage;","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"     * Constructs a {@code Weightage}.","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"     * @param value a weightage.","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    public Weightage(String value) {","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"        checkArgument(isValidWeightage(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"        weightage \u003d Integer.parseInt(value);","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"     * Returns true if a given string is a valid weightage.","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"    public static boolean isValidWeightage(String value) {","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"        return value.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"    public String toString() {","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"        return Integer.toString(weightage);","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"                || (other instanceof Weightage","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 weightage \u003d\u003d ((Weightage) other).weightage);","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"        return weightage;","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"honganhcs":52}},{"path":"src/main/java/seedu/address/model/assessment/exceptions/AssessmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package seedu.address.model.assessment.exceptions;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":" * Signals that the operation is unable to find the specified assessment.","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"public class AssessmentNotFoundException extends RuntimeException{","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"honganhcs":7}},{"path":"src/main/java/seedu/address/model/assessment/exceptions/DuplicateAssessmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package seedu.address.model.assessment.exceptions;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":" * Signals that the operation will result in duplicate Assessments (Assessments are considered duplicates","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":" * if they have the same name).","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"public class DuplicateAssessmentException extends RuntimeException {","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"    public DuplicateAssessmentException() {","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"        super(\"Operation would result in duplicate assessments\");","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"honganhcs":11}},{"path":"src/main/java/seedu/address/model/assessment/exceptions/DuplicateStudentResultException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package seedu.address.model.assessment.exceptions;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"public class DuplicateStudentResultException extends RuntimeException {","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"    public DuplicateStudentResultException() {","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"        super(\"Operation would result in a repeated entry of the student\u0027s result for this assessment\");","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"honganhcs":7}},{"path":"src/main/java/seedu/address/model/person/NusNetId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * Represents a Student\u0027s NUSNET ID in the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidId(String)}","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"public class NusNetId {","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"            \"NUSNET IDs should contain an \u0027e\u0027 followed by 7 numerical digits\";","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"    public static final String VALIDATION_REGEX \u003d \"^e\\\\d{7}\";","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"    public final String id;","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"     * Constructs a {@code NusNetId}.","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"     * @param value an NUSNET ID.","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    public NusNetId(String value) {","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"        checkArgument(isValidId(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"        this.id \u003d value;","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"     * Returns true if a given string is a valid NUSNET ID.","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"    public static boolean isValidId(String value) {","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"        return value.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"    public String toString() {","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"        return id;","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"                || (other instanceof NusNetId // instanceof handles nulls","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 id.equals(((NusNetId) other).id)); // state check","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"        return id.hashCode();","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"honganhcs":51}},{"path":"src/main/java/seedu/address/model/person/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.tutorial.TutorialName;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":" * Represents a Student in a Tutorial in the addressbook.","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":" * A Student is a Person with a Student ID and a Tutorial.","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"public class Student extends Person {","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"    // Identity fields","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"    private final NusNetId nusNetId;","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"    private final TutorialName tutName;","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"     * @param name","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"     * @param phone","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"     * @param email","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"     * @param address","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"     * @param tags","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"    public Student(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, NusNetId id, TutorialName tut) {","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"        requireAllNonNull(id, tut);","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"        nusNetId \u003d id;","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"        tutName \u003d tut;","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"     * Returns true if given object is a Student.","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"    public static boolean isStudent(Object object) {","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"        return object instanceof Student;","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"     * Returns true if given student belongs to a Tutorial.","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"    public boolean isInTutorial(TutorialName tutName) {","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"        return tutName.equals(getTutorialName());","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"    public NusNetId getStudentId() {","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"        return nusNetId;","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"    public TutorialName getTutorialName() {","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"        return tutName;","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"            return true;","lastModifiedDate":"2022-03-03"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2022-03-03"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"            return false;","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":68,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"        return otherStudent.getName().equals(getName())","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 otherStudent.getPhone().equals(getPhone())","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 otherStudent.getEmail().equals(getEmail())","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 otherStudent.getAddress().equals(getAddress())","lastModifiedDate":"2022-03-03"},{"lineNumber":74,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 otherStudent.getTags().equals(getTags())","lastModifiedDate":"2022-03-03"},{"lineNumber":75,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 otherStudent.getStudentId().equals(getStudentId())","lastModifiedDate":"2022-03-03"},{"lineNumber":76,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 otherStudent.getTutorialName().equals(getTutorialName());","lastModifiedDate":"2022-03-03"},{"lineNumber":77,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":78,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":79,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":80,"author":{"gitId":"honganhcs"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-03"},{"lineNumber":81,"author":{"gitId":"honganhcs"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-03"},{"lineNumber":82,"author":{"gitId":"honganhcs"},"content":"        return Objects.hash(getName(), getPhone(), getEmail(), getAddress(), getTags(), nusNetId, tutName);","lastModifiedDate":"2022-03-03"},{"lineNumber":83,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":84,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":85,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":86,"author":{"gitId":"honganhcs"},"content":"    public String toString() {","lastModifiedDate":"2022-03-03"},{"lineNumber":87,"author":{"gitId":"honganhcs"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-03"},{"lineNumber":88,"author":{"gitId":"honganhcs"},"content":"        builder.append(getName())","lastModifiedDate":"2022-03-03"},{"lineNumber":89,"author":{"gitId":"honganhcs"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2022-03-03"},{"lineNumber":90,"author":{"gitId":"honganhcs"},"content":"                .append(getPhone())","lastModifiedDate":"2022-03-03"},{"lineNumber":91,"author":{"gitId":"honganhcs"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2022-03-03"},{"lineNumber":92,"author":{"gitId":"honganhcs"},"content":"                .append(getEmail())","lastModifiedDate":"2022-03-03"},{"lineNumber":93,"author":{"gitId":"honganhcs"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2022-03-03"},{"lineNumber":94,"author":{"gitId":"honganhcs"},"content":"                .append(getAddress())","lastModifiedDate":"2022-03-03"},{"lineNumber":95,"author":{"gitId":"honganhcs"},"content":"                .append(\"; NUSNET ID: \")","lastModifiedDate":"2022-03-03"},{"lineNumber":96,"author":{"gitId":"honganhcs"},"content":"                .append(getStudentId())","lastModifiedDate":"2022-03-03"},{"lineNumber":97,"author":{"gitId":"honganhcs"},"content":"                .append(\"; Tutorial Class: \")","lastModifiedDate":"2022-03-03"},{"lineNumber":98,"author":{"gitId":"honganhcs"},"content":"                .append(getTutorialName());","lastModifiedDate":"2022-03-03"},{"lineNumber":99,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":100,"author":{"gitId":"honganhcs"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-03-03"},{"lineNumber":101,"author":{"gitId":"honganhcs"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-03-03"},{"lineNumber":102,"author":{"gitId":"honganhcs"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-03-03"},{"lineNumber":103,"author":{"gitId":"honganhcs"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-03-03"},{"lineNumber":104,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":105,"author":{"gitId":"honganhcs"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-03"},{"lineNumber":106,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":107,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"honganhcs":107}},{"path":"src/main/java/seedu/address/model/person/UniqueStudentsInTutorialList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import static seedu.address.model.person.Student.isStudent;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.tutorial.TutorialName;","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":" * A list of students in a Tutorial.","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":" * Updated automatically when changes are made to the modelManager\u0027s allStudents list.","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"public class UniqueStudentsInTutorialList {","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"     * This list should contain only Student objects.","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"    private final FilteredList\u003cPerson\u003e studentsInClass;","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    private final TutorialName tutorialName;","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"     * Constructs a UniqueStudentsInTutorialList.","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"     * @param allStudents the ModelManager\u0027s allStudents list, containing all Students in the addressbook.","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"     * @param tutName the TutorialName.","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"    public UniqueStudentsInTutorialList(FilteredList\u003cPerson\u003e allStudents, TutorialName tutName) {","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"        requireAllNonNull(allStudents, tutName);","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"        studentsInClass \u003d createStudentsList(allStudents, tutName);","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"        tutorialName \u003d tutName;","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"    private FilteredList\u003cPerson\u003e createStudentsList(ObservableList\u003cPerson\u003e allStudents, TutorialName tutName) {","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"        Predicate\u003cPerson\u003e predicateShowStudentsInTutorial \u003d x -\u003e isStudent(x)","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 ((Student) x).isInTutorial(tutName);","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"        return new FilteredList\u003cPerson\u003e(allStudents, predicateShowStudentsInTutorial);","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"honganhcs":41}},{"path":"src/main/java/seedu/address/model/tutorial/Day.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package seedu.address.model.tutorial;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":" * Represents the day of week which a Tutorial is on in the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDay(String)}","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"public class Day {","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Days should be provided as a number which is their position in \"","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"            + \"the week (e.g. Monday should be provided as 1).\";","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[1-7]\";","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"    public final String day;","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"     * Constructs a {@code Day}.","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"     * @param value represents the position of the day in the week.","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    public Day(String value) {","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"        checkArgument(isValidDay(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"        day \u003d DayOfWeek.of(Integer.parseInt(value)).toString();","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"     * Returns true if given String represents an integer between 1 and 7.","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"    public boolean isValidDay(String value) {","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"        return value.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"    public String toString() {","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"        return day;","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"                || (other instanceof Day // instanceof handles nulls","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 day.equals(((Day) other).day)); // state check","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"        return day.hashCode();","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"honganhcs":52}},{"path":"src/main/java/seedu/address/model/tutorial/Time.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package seedu.address.model.tutorial;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * Represents the starting time of a Tutorial in the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTime(String)}","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"public class Time {","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Times should be provided in the format of hh:mm\";","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"    public static final String VALIDATION_REGEX \u003d \"^([0-1][0-9]|2[0-3]):[0-5][0-9]\";","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"    public final String time;","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"     * Constructs a {@code Time}.","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"     * @param value represents the position of the day in the week.","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"    public Time(String value) {","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"        checkArgument(isValidTime(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"        time \u003d value;","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"     * Returns true if given String represents a valid time of the day.","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"    public boolean isValidTime(String value) {","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"        return value.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"    public String toString() {","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"        return time;","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"                || (other instanceof Time // instanceof handles nulls","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 time.equals(((Time) other).time)); // state check","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"        return time.hashCode();","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"honganhcs":49}},{"path":"src/main/java/seedu/address/model/tutorial/Tutorial.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package seedu.address.model.tutorial;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.assessment.AssessmentResultsList;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.person.UniqueStudentsInTutorialList;","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":" * Represents a Class (for a module) in the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":" * TODO: add methods for making changes to the studentsList or assessmentResultsList","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"public class Tutorial {","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"    // Identity fields","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"    private final TutorialName tutorialName;","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"    private final Day day;","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    private final Time time;","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"    // Data fields","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    private final UniqueStudentsInTutorialList studentsList;","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    private final AssessmentResultsList assessmentResultsList;","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"     * @param name the tutorial\u0027s name.","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"     * @param d the day of the week the tutorial falls on.","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"     * @param t the time the tutorial starts.","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"     * @param allStudents the allStudents list in the ModelManager.","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"    public Tutorial(TutorialName name, Day d, Time t, FilteredList\u003cPerson\u003e allStudents) {","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"        requireAllNonNull(name, d, t);","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"        tutorialName \u003d name;","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"        day \u003d d;","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"        time \u003d t;","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"        studentsList \u003d new UniqueStudentsInTutorialList(allStudents, name);","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"        assessmentResultsList \u003d new AssessmentResultsList(name);","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"    public TutorialName getTutorialName() {","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"        return tutorialName;","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"    public Day getDay() {","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"        return day;","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"    public Time getTime() {","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"        return time;","lastModifiedDate":"2022-03-03"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"     * Returns true if both tutorials have the same name.","lastModifiedDate":"2022-03-03"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"     * This defines a weaker notion of equality between two tutorials (used for adding and editing tutorials).","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"    public boolean isSameTutorial(Tutorial other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"            return true;","lastModifiedDate":"2022-03-03"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"        return other !\u003d null \u0026\u0026 other.getTutorialName().equals(getTutorialName());","lastModifiedDate":"2022-03-03"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":68,"author":{"gitId":"honganhcs"},"content":"     * Returns true if both tutorials have the same identity and data fields.","lastModifiedDate":"2022-03-03"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"     * This defines a stronger notion of equality between two tutorials (used for deleting tutorials).","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"honganhcs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"honganhcs"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-03"},{"lineNumber":74,"author":{"gitId":"honganhcs"},"content":"            return true;","lastModifiedDate":"2022-03-03"},{"lineNumber":75,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":76,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":77,"author":{"gitId":"honganhcs"},"content":"        if (!(other instanceof Tutorial)) {","lastModifiedDate":"2022-03-03"},{"lineNumber":78,"author":{"gitId":"honganhcs"},"content":"            return false;","lastModifiedDate":"2022-03-03"},{"lineNumber":79,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":80,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":81,"author":{"gitId":"honganhcs"},"content":"        Tutorial otherTut \u003d (Tutorial) other;","lastModifiedDate":"2022-03-03"},{"lineNumber":82,"author":{"gitId":"honganhcs"},"content":"        return otherTut.getTutorialName().equals(getTutorialName())","lastModifiedDate":"2022-03-03"},{"lineNumber":83,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 otherTut.getDay().equals(getDay())","lastModifiedDate":"2022-03-03"},{"lineNumber":84,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 otherTut.getTime().equals(getTime());","lastModifiedDate":"2022-03-03"},{"lineNumber":85,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":86,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":87,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":88,"author":{"gitId":"honganhcs"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-03"},{"lineNumber":89,"author":{"gitId":"honganhcs"},"content":"        return Objects.hash(tutorialName, day, time);","lastModifiedDate":"2022-03-03"},{"lineNumber":90,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":91,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":92,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":93,"author":{"gitId":"honganhcs"},"content":"    public String toString() {","lastModifiedDate":"2022-03-03"},{"lineNumber":94,"author":{"gitId":"honganhcs"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-03"},{"lineNumber":95,"author":{"gitId":"honganhcs"},"content":"        builder.append(getTutorialName())","lastModifiedDate":"2022-03-03"},{"lineNumber":96,"author":{"gitId":"honganhcs"},"content":"                .append(\"; Day: \")","lastModifiedDate":"2022-03-03"},{"lineNumber":97,"author":{"gitId":"honganhcs"},"content":"                .append(getDay())","lastModifiedDate":"2022-03-03"},{"lineNumber":98,"author":{"gitId":"honganhcs"},"content":"                .append(\"; Time: \")","lastModifiedDate":"2022-03-03"},{"lineNumber":99,"author":{"gitId":"honganhcs"},"content":"                .append(getTime());","lastModifiedDate":"2022-03-03"},{"lineNumber":100,"author":{"gitId":"honganhcs"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-03"},{"lineNumber":101,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":102,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"honganhcs":102}},{"path":"src/main/java/seedu/address/model/tutorial/TutorialName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package seedu.address.model.tutorial;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":" * Represents a Tutorial name in the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTutorialNameName(String)}","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"public class TutorialName {","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"            \"Tutorial names should only contain alphanumeric characters and spaces, and should not be blank\";","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":"    public final String name;","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":"     * Constructs a {@code ClassName}.","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":"     * @param value a class name.","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"    public TutorialName(String value) {","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"        checkArgument(isValidTutorialNameName(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"        name \u003d value;","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"     * Returns true if given String is a valid class name.","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"    public static boolean isValidTutorialNameName(String value) {","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"        return value.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"    public String toString() {","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"        return name;","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"                || (other instanceof TutorialName // instanceof handles nulls","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"                \u0026\u0026 name.equals(((TutorialName) other).name)); // state check","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"        return name.hashCode();","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"honganhcs":50}},{"path":"src/main/java/seedu/address/model/tutorial/UniqueTutorialList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package seedu.address.model.tutorial;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"import java.util.List;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"honganhcs"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"honganhcs"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.tutorial.exceptions.DuplicateTutorialException;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"honganhcs"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"honganhcs"},"content":" * A list of Tutorials that enforces the uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"honganhcs"},"content":" * A Tutorial is considered unique by comparing using {@code Tutorial#isSameTutorial}.","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"honganhcs"},"content":" * Adding and updating a Tutorial uses {@code Tutorial#isSameTutorial(Tutorial)} to ensure","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"honganhcs"},"content":" * that the Tutorial being added is unique in terms of identity.","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"honganhcs"},"content":" * However, the removal of a Tutorial uses {@code Tutorial#equals(Object)} to ensure that the","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"honganhcs"},"content":" * Tutorial with exactly the same fields is removed.","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"honganhcs"},"content":" * TODO: implement the remove and setter methods.","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"honganhcs"},"content":" *","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":" * @see Tutorial#isSameTutorial(Tutorial)","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"honganhcs"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"honganhcs"},"content":"public class UniqueTutorialList {","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"    private final ObservableList\u003cTutorial\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"honganhcs"},"content":"    private final ObservableList\u003cTutorial\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"honganhcs"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"honganhcs"},"content":"     * Returns true if the list contains an equivalent tutorial as the argument,","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"honganhcs"},"content":"     * uses {@code Tutorial#isSameTutorial(Tutorial)}","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"honganhcs"},"content":"    public boolean contains(Tutorial toCheck) {","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"honganhcs"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"honganhcs"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTutorial);","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"honganhcs"},"content":"     * Adds a tutorial to the list.","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"honganhcs"},"content":"     * The tutorial must not already exist in the list.","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"honganhcs"},"content":"    public void add(Tutorial toAdd) {","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"honganhcs"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"honganhcs"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"honganhcs"},"content":"            throw new DuplicateTutorialException();","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"honganhcs"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"honganhcs"},"content":"     * Returns the backing list as an unmodifiable list.","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"honganhcs"},"content":"    public ObservableList\u003cTutorial\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"honganhcs"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"honganhcs"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"honganhcs"},"content":"     * Replaces the contents of this list with {@code tutorials},","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"honganhcs"},"content":"     * which must not contain duplicate tutorials.","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"honganhcs"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"honganhcs"},"content":"    public void setTutorials(List\u003cTutorial\u003e tutorials) {","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"honganhcs"},"content":"        requireAllNonNull(tutorials);","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"honganhcs"},"content":"        if (!tutorialsAreUnique(tutorials)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"honganhcs"},"content":"            throw new DuplicateTutorialException();","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"honganhcs"},"content":"        internalList.setAll(tutorials);","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"honganhcs"},"content":"    private boolean tutorialsAreUnique(List\u003cTutorial\u003e tutorials) {","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"honganhcs"},"content":"        for (int i \u003d 0; i \u003c tutorials.size() - 1; i++) {","lastModifiedDate":"2022-03-07"},{"lineNumber":70,"author":{"gitId":"honganhcs"},"content":"            for (int j \u003d i + 1; j \u003c tutorials.size(); j++) {","lastModifiedDate":"2022-03-07"},{"lineNumber":71,"author":{"gitId":"honganhcs"},"content":"                if (tutorials.get(i).isSameTutorial(tutorials.get(j))) {","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"honganhcs"},"content":"                    return false;","lastModifiedDate":"2022-03-07"},{"lineNumber":73,"author":{"gitId":"honganhcs"},"content":"                }","lastModifiedDate":"2022-03-07"},{"lineNumber":74,"author":{"gitId":"honganhcs"},"content":"            }","lastModifiedDate":"2022-03-07"},{"lineNumber":75,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":76,"author":{"gitId":"honganhcs"},"content":"        return true;","lastModifiedDate":"2022-03-07"},{"lineNumber":77,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":78,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"honganhcs":78}},{"path":"src/main/java/seedu/address/model/tutorial/exceptions/DuplicateTutorialException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honganhcs"},"content":"package seedu.address.model.tutorial.exceptions;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"honganhcs"},"content":"public class DuplicateTutorialException extends RuntimeException {","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"honganhcs"},"content":"    public DuplicateTutorialException() {","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"honganhcs"},"content":"        super(\"Operation would result in duplicate tutorials\");","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"honganhcs"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"honganhcs"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"honganhcs":7}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.assessment.Assessment;","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"honganhcs"},"content":"import seedu.address.model.tutorial.Tutorial;","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"honganhcs"},"content":"        private final ObservableList\u003cTutorial\u003e tutorials \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-07"},{"lineNumber":94,"author":{"gitId":"honganhcs"},"content":"        private final ObservableList\u003cAssessment\u003e assessments \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":105,"author":{"gitId":"honganhcs"},"content":"        @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":106,"author":{"gitId":"honganhcs"},"content":"        public ObservableList\u003cTutorial\u003e getTutorialList() {","lastModifiedDate":"2022-03-07"},{"lineNumber":107,"author":{"gitId":"honganhcs"},"content":"            return tutorials;","lastModifiedDate":"2022-03-07"},{"lineNumber":108,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":109,"author":{"gitId":"honganhcs"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":110,"author":{"gitId":"honganhcs"},"content":"        @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":111,"author":{"gitId":"honganhcs"},"content":"        public ObservableList\u003cAssessment\u003e getAssessmentList() {","lastModifiedDate":"2022-03-07"},{"lineNumber":112,"author":{"gitId":"honganhcs"},"content":"            return assessments;","lastModifiedDate":"2022-03-07"},{"lineNumber":113,"author":{"gitId":"honganhcs"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"honganhcs":14,"-":102}}]
